/*! jQuery v1.7.2 jquery.com | jquery.org/license */
(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'></div></div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'></td><td>t</td></tr></table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'></div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/(?:^|\s)hover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(
a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler,g=p.selector),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g&&G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=f.event.special[c.type]||{},j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(!i.preDispatch||i.preDispatch.call(this,c)!==!1){if(e&&(!c.button||c.type!=="click")){n=f(this),n.context=this.ownerDocument||this;for(m=c.target;m!=this;m=m.parentNode||this)if(m.disabled!==!0){p={},r=[],n[0]=m;for(k=0;k<e;k++)s=d[k],t=s.selector,p[t]===b&&(p[t]=s.quick?H(m,s.quick):n.is(t)),p[t]&&r.push(s);r.length&&j.push({elem:m,matches:r})}}d.length>e&&j.push({elem:this,matches:d.slice(e)});for(k=0;k<j.length&&!c.isPropagationStopped();k++){q=j[k],c.currentTarget=q.elem;for(l=0;l<q.matches.length&&!c.isImmediatePropagationStopped();l++){s=q.matches[l];if(h||!c.namespace&&!s.namespace||c.namespace_re&&c.namespace_re.test(s.namespace))c.data=s.data,c.handleObj=s,o=((f.event.special[s.origType]||{}).handle||s.handler).apply(q.elem,g),o!==b&&(c.result=o,o===!1&&(c.preventDefault(),c.stopPropagation()))}}i.postDispatch&&i.postDispatch.call(this,c);return c.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),d._submit_attached=!0)})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9||d===11){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));o.match.globalPOS=p;var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.globalPOS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")[\\s/>]","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){return f.access(this,function(a){return a===b?f.text(this):this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f
.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){return f.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(f.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(g){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,function(a,b){b.src?f.ajax({type:"GET",global:!1,url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||f.isXMLDoc(a)||!bc.test("<"+a.nodeName+">")?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g,h,i,j=[];b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);for(var k=0,l;(l=a[k])!=null;k++){typeof l=="number"&&(l+="");if(!l)continue;if(typeof l=="string")if(!_.test(l))l=b.createTextNode(l);else{l=l.replace(Y,"<$1></$2>");var m=(Z.exec(l)||["",""])[1].toLowerCase(),n=bg[m]||bg._default,o=n[0],p=b.createElement("div"),q=bh.childNodes,r;b===c?bh.appendChild(p):U(b).appendChild(p),p.innerHTML=n[1]+l+n[2];while(o--)p=p.lastChild;if(!f.support.tbody){var s=$.test(l),t=m==="table"&&!s?p.firstChild&&p.firstChild.childNodes:n[1]==="<table>"&&!s?p.childNodes:[];for(i=t.length-1;i>=0;--i)f.nodeName(t[i],"tbody")&&!t[i].childNodes.length&&t[i].parentNode.removeChild(t[i])}!f.support.leadingWhitespace&&X.test(l)&&p.insertBefore(b.createTextNode(X.exec(l)[0]),p.firstChild),l=p.childNodes,p&&(p.parentNode.removeChild(p),q.length>0&&(r=q[q.length-1],r&&r.parentNode&&r.parentNode.removeChild(r)))}var u;if(!f.support.appendChecked)if(l[0]&&typeof (u=l.length)=="number")for(i=0;i<u;i++)bn(l[i]);else bn(l);l.nodeType?j.push(l):j=f.merge(j,l)}if(d){g=function(a){return!a.type||be.test(a.type)};for(k=0;j[k];k++){h=j[k];if(e&&f.nodeName(h,"script")&&(!h.type||be.test(h.type)))e.push(h.parentNode?h.parentNode.removeChild(h):h);else{if(h.nodeType===1){var v=f.grep(h.getElementsByTagName("script"),g);j.splice.apply(j,[k+1,0].concat(v))}d.appendChild(h)}}}return j},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bp=/alpha\([^)]*\)/i,bq=/opacity=([^)]*)/,br=/([A-Z]|^ms)/g,bs=/^[\-+]?(?:\d*\.)?\d+$/i,bt=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,bu=/^([\-+])=([\-+.\de]+)/,bv=/^margin/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Top","Right","Bottom","Left"],by,bz,bA;f.fn.css=function(a,c){return f.access(this,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)},a,c,arguments.length>1)},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=by(a,"opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bu.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(by)return by(a,c)},swap:function(a,b,c){var d={},e,f;for(f in b)d[f]=a.style[f],a.style[f]=b[f];e=c.call(a);for(f in b)a.style[f]=d[f];return e}}),f.curCSS=f.css,c.defaultView&&c.defaultView.getComputedStyle&&(bz=function(a,b){var c,d,e,g,h=a.style;b=b.replace(br,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b))),!f.support.pixelMargin&&e&&bv.test(b)&&bt.test(c)&&(g=h.width,h.width=c,c=e.width,h.width=g);return c}),c.documentElement.currentStyle&&(bA=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f==null&&g&&(e=g[b])&&(f=e),bt.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),by=bz||bA,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth!==0?bB(a,b,d):f.swap(a,bw,function(){return bB(a,b,d)})},set:function(a,b){return bs.test(b)?b+"px":b}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bq.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bp,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bp.test(g)?g.replace(bp,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){return f.swap(a,{display:"inline-block"},function(){return b?by(a,"margin-right"):a.style.marginRight})}})}),f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)}),f.each({margin:"",padding:"",border:"Width"},function(a,b){f.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bx[d]+b]=e[d]||e[d-2]||e[0];return f}}});var bC=/%20/g,bD=/\[\]$/,bE=/\r?\n/g,bF=/#.*$/,bG=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bH=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bI=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bJ=/^(?:GET|HEAD)$/,bK=/^\/\//,bL=/\?/,bM=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bN=/^(?:select|textarea)/i,bO=/\s+/,bP=/([?&])_=[^&]*/,bQ=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bR=f.fn.load,bS={},bT={},bU,bV,bW=["*/"]+["*"];try{bU=e.href}catch(bX){bU=c.createElement("a"),bU.href="",bU=bU.href}bV=bQ.exec(bU.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bR)return bR.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bM,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bN.test(this.nodeName)||bH.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bE,"\r\n")}}):{name:b.name,value:c.replace(bE,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b$(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b$(a,b);return a},ajaxSettings:{url:bU,isLocal:bI.test(bV[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bW},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bY(bS),ajaxTransport:bY(bT),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?ca(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cb(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bG.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bF,"").replace(bK,bV[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bO),d.crossDomain==null&&(r=bQ.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bV[1]&&r[2]==bV[2]&&(r[3]||(r[1]==="http:"?80:443))==(bV[3]||(bV[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bZ(bS,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bJ.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bL.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bP,"$1_="+x);d.url=y+(y===d.url?(bL.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bW+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bZ(bT,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join("&").replace(bC,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cc++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=typeof b.data=="string"&&/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cd.test(b.url)||e&&cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cd,l),b.url===j&&(e&&(k=k.replace(cd,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ce&&delete cg[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n);try{m.text=h.responseText}catch(a){}try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&&(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cq;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(ct("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),(e===""&&f.css(d,"display")==="none"||!f.contains(d.ownerDocument.documentElement,d))&&f._data(d,"olddisplay",cu(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(ct("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(ct("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o,p,q;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]);if((k=f.cssHooks[g])&&"expand"in k){l=k.expand(a[g]),delete a[g];for(i in l)i in a||(a[i]=l[i])}}for(g in a){h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cu(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cm.test(h)?(q=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),q?(f._data(this,"toggle"+i,q==="show"?"hide":"show"),j[q]()):j[h]()):(m=cn.exec(h),n=j.cur(),m?(o=parseFloat(m[2]),p=m[3]||(f.cssNumber[i]?"":"px"),p!=="px"&&(f.style(this,i,(o||1)+p),n=(o||1)/j.cur()*n,f.style(this,i,n+p)),m[1]&&(o=(m[1]==="-="?-1:1)*o+n),j.custom(n,o,p)):j.custom(n,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:ct("show",1),slideUp:ct("hide",1),slideToggle:ct("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+.5}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cq||cr(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){f._data(e.elem,"fxshow"+e.prop)===b&&(e.options.hide?f._data(e.elem,"fxshow"+e.prop,e.start):e.options.show&&f._data(e.elem,"fxshow"+e.prop,e.end))},h()&&f.timers.push(h)&&!co&&(co=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cq||cr(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(cp.concat.apply([],cp),function(a,b){b.indexOf("margin")&&(f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)})}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cv,cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?cv=function(a,b,c,d){try{d=a.getBoundingClientRect()}catch(e){}if(!d||!f.contains(c,a))return d?{top:d.top,left:d.left}:{top:0,left:0};var g=b.body,h=cy(b),i=c.clientTop||g.clientTop||0,j=c.clientLeft||g.clientLeft||0,k=h.pageYOffset||f.support.boxModel&&c.scrollTop||g.scrollTop,l=h.pageXOffset||f.support.boxModel&&c.scrollLeft||g.scrollLeft,m=d.top+k-i,n=d.left+l-j;return{top:m,left:n}}:cv=function(a,b,c){var d,e=a.offsetParent,g=a,h=b.body,i=b.defaultView,j=i?i.getComputedStyle(a,null):a.currentStyle,k=a.offsetTop,l=a.offsetLeft;while((a=a.parentNode)&&a!==h&&a!==c){if(f.support.fixedPosition&&j.position==="fixed")break;d=i?i.getComputedStyle(a,null):a.currentStyle,k-=a.scrollTop,l-=a.scrollLeft,a===e&&(k+=a.offsetTop,l+=a.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(a.nodeName))&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),g=e,e=a.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&d.overflow!=="visible"&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),j=d}if(j.position==="relative"||j.position==="static")k+=h.offsetTop,l+=h.offsetLeft;f.support.fixedPosition&&j.position==="fixed"&&(k+=Math.max(c.scrollTop,h.scrollTop),l+=Math.max(c.scrollLeft,h.scrollLeft));return{top:k,left:l}},f.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){f.offset.setOffset(this,a,b)});var c=this[0],d=c&&c.ownerDocument;if(!d)return null;if(c===d.body)return f.offset.bodyOffset(c);return cv(c,d,d.documentElement)},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);f.fn[a]=function(e){return f.access(this,function(a,e,g){var h=cy(a);if(g===b)return h?c in h?h[c]:f.support.boxModel&&h.document.documentElement[e]||h.document.body[e]:a[e];h?h.scrollTo(d?f(h).scrollLeft():g,d?g:f(h).scrollTop()):a[e]=g},a,e,arguments.length,null)}}),f.each({Height:"height",Width:"width"},function(a,c){var d="client"+a,e="scroll"+a,g="offset"+a;f.fn["inner"+a]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,c,"padding")):this[c]():null},f.fn["outer"+a]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,c,a?"margin":"border")):this[c]():null},f.fn[c]=function(a){return f.access(this,function(a,c,h){var i,j,k,l;if(f.isWindow(a)){i=a.document,j=i.documentElement[d];return f.support.boxModel&&j||i.body&&i.body[d]||j}if(a.nodeType===9){i=a.documentElement;if(i[d]>=i[e])return i[d];return Math.max(a.body[e],i[e],a.body[g],i[g])}if(h===b){k=f.css(a,c),l=parseFloat(k);return f.isNumeric(l)?l:k}f(a).css(c,h)},c,a,arguments.length,null)}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.core.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){function c(b,c){var e=b.nodeName.toLowerCase();if("area"===e){var f=b.parentNode,g=f.name,h;return!b.href||!g||f.nodeName.toLowerCase()!=="map"?!1:(h=a("img[usemap=#"+g+"]")[0],!!h&&d(h))}return(/input|select|textarea|button|object/.test(e)?!b.disabled:"a"==e?b.href||c:c)&&d(b)}function d(b){return!a(b).parents().andSelf().filter(function(){return a.curCSS(this,"visibility")==="hidden"||a.expr.filters.hidden(this)}).length}a.ui=a.ui||{};if(a.ui.version)return;a.extend(a.ui,{version:"1.8.21",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}}),a.fn.extend({propAttr:a.fn.prop||a.fn.attr,_focus:a.fn.focus,focus:function(b,c){return typeof b=="number"?this.each(function(){var d=this;setTimeout(function(){a(d).focus(),c&&c.call(d)},b)}):this._focus.apply(this,arguments)},scrollParent:function(){var b;return a.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?b=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(a.curCSS(this,"position",1))&&/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0):b=this.parents().filter(function(){return/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0),/fixed/.test(this.css("position"))||!b.length?a(document):b},zIndex:function(c){if(c!==b)return this.css("zIndex",c);if(this.length){var d=a(this[0]),e,f;while(d.length&&d[0]!==document){e=d.css("position");if(e==="absolute"||e==="relative"||e==="fixed"){f=parseInt(d.css("zIndex"),10);if(!isNaN(f)&&f!==0)return f}d=d.parent()}}return 0},disableSelection:function(){return this.bind((a.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),a.each(["Width","Height"],function(c,d){function h(b,c,d,f){return a.each(e,function(){c-=parseFloat(a.curCSS(b,"padding"+this,!0))||0,d&&(c-=parseFloat(a.curCSS(b,"border"+this+"Width",!0))||0),f&&(c-=parseFloat(a.curCSS(b,"margin"+this,!0))||0)}),c}var e=d==="Width"?["Left","Right"]:["Top","Bottom"],f=d.toLowerCase(),g={innerWidth:a.fn.innerWidth,innerHeight:a.fn.innerHeight,outerWidth:a.fn.outerWidth,outerHeight:a.fn.outerHeight};a.fn["inner"+d]=function(c){return c===b?g["inner"+d].call(this):this.each(function(){a(this).css(f,h(this,c)+"px")})},a.fn["outer"+d]=function(b,c){return typeof b!="number"?g["outer"+d].call(this,b):this.each(function(){a(this).css(f,h(this,b,!0,c)+"px")})}}),a.extend(a.expr[":"],{data:function(b,c,d){return!!a.data(b,d[3])},focusable:function(b){return c(b,!isNaN(a.attr(b,"tabindex")))},tabbable:function(b){var d=a.attr(b,"tabindex"),e=isNaN(d);return(e||d>=0)&&c(b,!e)}}),a(function(){var b=document.body,c=b.appendChild(c=document.createElement("div"));c.offsetHeight,a.extend(c.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),a.support.minHeight=c.offsetHeight===100,a.support.selectstart="onselectstart"in c,b.removeChild(c).style.display="none"}),a.extend(a.ui,{plugin:{add:function(b,c,d){var e=a.ui[b].prototype;for(var f in d)e.plugins[f]=e.plugins[f]||[],e.plugins[f].push([c,d[f]])},call:function(a,b,c){var d=a.plugins[b];if(!d||!a.element[0].parentNode)return;for(var e=0;e<d.length;e++)a.options[d[e][0]]&&d[e][1].apply(a.element,c)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(b,c){if(a(b).css("overflow")==="hidden")return!1;var d=c&&c==="left"?"scrollLeft":"scrollTop",e=!1;return b[d]>0?!0:(b[d]=1,e=b[d]>0,b[d]=0,e)},isOverAxis:function(a,b,c){return a>b&&a<b+c},isOver:function(b,c,d,e,f,g){return a.ui.isOverAxis(b,d,f)&&a.ui.isOverAxis(c,e,g)}})})(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.widget.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){if(a.cleanData){var c=a.cleanData;a.cleanData=function(b){for(var d=0,e;(e=b[d])!=null;d++)try{a(e).triggerHandler("remove")}catch(f){}c(b)}}else{var d=a.fn.remove;a.fn.remove=function(b,c){return this.each(function(){return c||(!b||a.filter(b,[this]).length)&&a("*",this).add([this]).each(function(){try{a(this).triggerHandler("remove")}catch(b){}}),d.call(a(this),b,c)})}}a.widget=function(b,c,d){var e=b.split(".")[0],f;b=b.split(".")[1],f=e+"-"+b,d||(d=c,c=a.Widget),a.expr[":"][f]=function(c){return!!a.data(c,b)},a[e]=a[e]||{},a[e][b]=function(a,b){arguments.length&&this._createWidget(a,b)};var g=new c;g.options=a.extend(!0,{},g.options),a[e][b].prototype=a.extend(!0,g,{namespace:e,widgetName:b,widgetEventPrefix:a[e][b].prototype.widgetEventPrefix||b,widgetBaseClass:f},d),a.widget.bridge(b,a[e][b])},a.widget.bridge=function(c,d){a.fn[c]=function(e){var f=typeof e=="string",g=Array.prototype.slice.call(arguments,1),h=this;return e=!f&&g.length?a.extend.apply(null,[!0,e].concat(g)):e,f&&e.charAt(0)==="_"?h:(f?this.each(function(){var d=a.data(this,c),f=d&&a.isFunction(d[e])?d[e].apply(d,g):d;if(f!==d&&f!==b)return h=f,!1}):this.each(function(){var b=a.data(this,c);b?b.option(e||{})._init():a.data(this,c,new d(e,this))}),h)}},a.Widget=function(a,b){arguments.length&&this._createWidget(a,b)},a.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:!1},_createWidget:function(b,c){a.data(c,this.widgetName,this),this.element=a(c),this.options=a.extend(!0,{},this.options,this._getCreateOptions(),b);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()}),this._create(),this._trigger("create"),this._init()},_getCreateOptions:function(){return a.metadata&&a.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName),this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled "+"ui-state-disabled")},widget:function(){return this.element},option:function(c,d){var e=c;if(arguments.length===0)return a.extend({},this.options);if(typeof c=="string"){if(d===b)return this.options[c];e={},e[c]=d}return this._setOptions(e),this},_setOptions:function(b){var c=this;return a.each(b,function(a,b){c._setOption(a,b)}),this},_setOption:function(a,b){return this.options[a]=b,a==="disabled"&&this.widget()[b?"addClass":"removeClass"](this.widgetBaseClass+"-disabled"+" "+"ui-state-disabled").attr("aria-disabled",b),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_trigger:function(b,c,d){var e,f,g=this.options[b];d=d||{},c=a.Event(c),c.type=(b===this.widgetEventPrefix?b:this.widgetEventPrefix+b).toLowerCase(),c.target=this.element[0],f=c.originalEvent;if(f)for(e in f)e in c||(c[e]=f[e]);return this.element.trigger(c,d),!(a.isFunction(g)&&g.call(this.element[0],c,d)===!1||c.isDefaultPrevented())}}})(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.datepicker.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(a){var b="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return a.bind("mouseout",function(a){var c=$(a.target).closest(b);if(!c.length)return;c.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(c){var d=$(c.target).closest(b);if($.datepicker._isDisabledDatepicker(instActive.inline?a.parent()[0]:instActive.input[0])||!d.length)return;d.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),d.addClass("ui-state-hover"),d.hasClass("ui-datepicker-prev")&&d.addClass("ui-datepicker-prev-hover"),d.hasClass("ui-datepicker-next")&&d.addClass("ui-datepicker-next-hover")})}function extendRemove(a,b){$.extend(a,b);for(var c in b)if(b[c]==null||b[c]==undefined)a[c]=b[c];return a}function isArray(a){return a&&($.browser.safari&&typeof a=="object"&&a.length||a.constructor&&a.constructor.toString().match(/\Array\(\)/))}$.extend($.ui,{datepicker:{version:"1.8.21"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(a){return extendRemove(this._defaults,a||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName=="div"||nodeName=="span";target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName=="input"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(a,b){var c=a[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:c,input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:b?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(a,b){var c=$(a);b.append=$([]),b.trigger=$([]);if(c.hasClass(this.markerClassName))return;this._attachments(c,b),c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),this._autoSize(b),$.data(a,PROP_NAME,b),b.settings.disabled&&this._disableDatepicker(a)},_attachments:function(a,b){var c=this._get(b,"appendText"),d=this._get(b,"isRTL");b.append&&b.append.remove(),c&&(b.append=$('<span class="'+this._appendClass+'">'+c+"</span>"),a[d?"before":"after"](b.append)),a.unbind("focus",this._showDatepicker),b.trigger&&b.trigger.remove();var e=this._get(b,"showOn");(e=="focus"||e=="both")&&a.focus(this._showDatepicker);if(e=="button"||e=="both"){var f=this._get(b,"buttonText"),g=this._get(b,"buttonImage");b.trigger=$(this._get(b,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:g,alt:f,title:f}):$('<button type="button"></button>').addClass(this._triggerClass).html(g==""?f:$("<img/>").attr({src:g,alt:f,title:f}))),a[d?"before":"after"](b.trigger),b.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==a[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=a[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(a[0])):$.datepicker._showDatepicker(a[0]),!1})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var d=function(a){var b=0,c=0;for(var d=0;d<a.length;d++)a[d].length>b&&(b=a[d].length,c=d);return c};b.setMonth(d(this._get(a,c.match(/MM/)?"monthNames":"monthNamesShort"))),b.setDate(d(this._get(a,c.match(/DD/)?"dayNames":"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,b){var c=$(a);if(c.hasClass(this.markerClassName))return;c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),$.data(a,PROP_NAME,b),this._setDate(b,this._getDefaultDate(b),!0),this._updateDatepicker(b),this._updateAlternate(b),b.settings.disabled&&this._disableDatepicker(a),b.dpDiv.css("display","block")},_dialogDatepicker:function(a,b,c,d,e){var f=this._dialogInst;if(!f){this.uuid+=1;var g="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+g+'" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),f=this._dialogInst=this._newInst(this._dialogInput,!1),f.settings={},$.data(this._dialogInput[0],PROP_NAME,f)}extendRemove(f.settings,d||{}),b=b&&b.constructor==Date?this._formatDate(f,b):b,this._dialogInput.val(b),this._pos=e?e.length?e:[e.pageX,e.pageY]:null;if(!this._pos){var h=document.documentElement.clientWidth,i=document.documentElement.clientHeight,j=document.documentElement.scrollLeft||document.body.scrollLeft,k=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[h/2-100+j,i/2-150+k]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),f.settings.onSelect=c,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,f),this},_destroyDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();$.removeData(a,PROP_NAME),d=="input"?(c.append.remove(),c.trigger.remove(),b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):(d=="div"||d=="span")&&b.removeClass(this.markerClassName).empty()},_enableDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();if(d=="input")a.disabled=!1,c.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if(d=="div"||d=="span"){var e=b.children("."+this._inlineClass);e.children().removeClass("ui-state-disabled"),e.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")}this._disabledInputs=$.map(this._disabledInputs,function(b){return b==a?null:b})},_disableDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();if(d=="input")a.disabled=!0,c.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if(d=="div"||d=="span"){var e=b.children("."+this._inlineClass);e.children().addClass("ui-state-disabled"),e.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled","disabled")}this._disabledInputs=$.map(this._disabledInputs,function(b){return b==a?null:b}),this._disabledInputs[this._disabledInputs.length]=a},_isDisabledDatepicker:function(a){if(!a)return!1;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return!0;return!1},_getInst:function(a){try{return $.data(a,PROP_NAME)}catch(b){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(a,b,c){var d=this._getInst(a);if(arguments.length==2&&typeof b=="string")return b=="defaults"?$.extend({},$.datepicker._defaults):d?b=="all"?$.extend({},d.settings):this._get(d,b):null;var e=b||{};typeof b=="string"&&(e={},e[b]=c);if(d){this._curInst==d&&this._hideDatepicker();var f=this._getDateDatepicker(a,!0),g=this._getMinMaxDate(d,"min"),h=this._getMinMaxDate(d,"max");extendRemove(d.settings,e),g!==null&&e.dateFormat!==undefined&&e.minDate===undefined&&(d.settings.minDate=this._formatDate(d,g)),h!==null&&e.dateFormat!==undefined&&e.maxDate===undefined&&(d.settings.maxDate=this._formatDate(d,h)),this._attachments($(a),d),this._autoSize(d),this._setDate(d,f),this._updateAlternate(d),this._updateDatepicker(d)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){var b=this._getInst(a);b&&this._updateDatepicker(b)},_setDateDatepicker:function(a,b){var c=this._getInst(a);c&&(this._setDate(c,b),this._updateDatepicker(c),this._updateAlternate(c))},_getDateDatepicker:function(a,b){var c=this._getInst(a);return c&&!c.inline&&this._setDateFromField(c,b),c?this._getDate(c):null},_doKeyDown:function(a){var b=$.datepicker._getInst(a.target),c=!0,d=b.dpDiv.is(".ui-datepicker-rtl");b._keyEvent=!0;if($.datepicker._datepickerShowing)switch(a.keyCode){case 9:$.datepicker._hideDatepicker(),c=!1;break;case 13:var e=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",b.dpDiv);e[0]&&$.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,e[0]);var f=$.datepicker._get(b,"onSelect");if(f){var g=$.datepicker._formatDate(b);f.apply(b.input?b.input[0]:null,[g,b])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(a.target,a.ctrlKey?-$.datepicker._get(b,"stepBigMonths"):-$.datepicker._get(b,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(a.target,a.ctrlKey?+$.datepicker._get(b,"stepBigMonths"):+$.datepicker._get(b,"stepMonths"),"M");break;case 35:(a.ctrlKey||a.metaKey)&&$.datepicker._clearDate(a.target),c=a.ctrlKey||a.metaKey;break;case 36:(a.ctrlKey||a.metaKey)&&$.datepicker._gotoToday(a.target),c=a.ctrlKey||a.metaKey;break;case 37:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,d?1:-1,"D"),c=a.ctrlKey||a.metaKey,a.originalEvent.altKey&&$.datepicker._adjustDate(a.target,a.ctrlKey?-$.datepicker._get(b,"stepBigMonths"):-$.datepicker._get(b,"stepMonths"),"M");break;case 38:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,-7,"D"),c=a.ctrlKey||a.metaKey;break;case 39:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,d?-1:1,"D"),c=a.ctrlKey||a.metaKey,a.originalEvent.altKey&&$.datepicker._adjustDate(a.target,a.ctrlKey?+$.datepicker._get(b,"stepBigMonths"):+$.datepicker._get(b,"stepMonths"),"M");break;case 40:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,7,"D"),c=a.ctrlKey||a.metaKey;break;default:c=!1}else a.keyCode==36&&a.ctrlKey?$.datepicker._showDatepicker(this):c=!1;c&&(a.preventDefault(),a.stopPropagation())},_doKeyPress:function(a){var b=$.datepicker._getInst(a.target);if($.datepicker._get(b,"constrainInput")){var c=$.datepicker._possibleChars($.datepicker._get(b,"dateFormat")),d=String.fromCharCode(a.charCode==undefined?a.keyCode:a.charCode);return a.ctrlKey||a.metaKey||d<" "||!c||c.indexOf(d)>-1}},_doKeyUp:function(a){var b=$.datepicker._getInst(a.target);if(b.input.val()!=b.lastVal)try{var c=$.datepicker.parseDate($.datepicker._get(b,"dateFormat"),b.input?b.input.val():null,$.datepicker._getFormatConfig(b));c&&($.datepicker._setDateFromField(b),$.datepicker._updateAlternate(b),$.datepicker._updateDatepicker(b))}catch(d){$.datepicker.log(d)}return!0},_showDatepicker:function(a){a=a.target||a,a.nodeName.toLowerCase()!="input"&&(a=$("input",a.parentNode)[0]);if($.datepicker._isDisabledDatepicker(a)||$.datepicker._lastInput==a)return;var b=$.datepicker._getInst(a);$.datepicker._curInst&&$.datepicker._curInst!=b&&($.datepicker._curInst.dpDiv.stop(!0,!0),b&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var c=$.datepicker._get(b,"beforeShow"),d=c?c.apply(a,[a,b]):{};if(d===!1)return;extendRemove(b.settings,d),b.lastVal=null,$.datepicker._lastInput=a,$.datepicker._setDateFromField(b),$.datepicker._inDialog&&(a.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(a),$.datepicker._pos[1]+=a.offsetHeight);var e=!1;$(a).parents().each(function(){return e|=$(this).css("position")=="fixed",!e}),e&&$.browser.opera&&($.datepicker._pos[0]-=document.documentElement.scrollLeft,$.datepicker._pos[1]-=document.documentElement.scrollTop);var f={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,b.dpDiv.empty(),b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(b),f=$.datepicker._checkOffset(b,f,e),b.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":e?"fixed":"absolute",display:"none",left:f.left+"px",top:f.top+"px"});if(!b.inline){var g=$.datepicker._get(b,"showAnim"),h=$.datepicker._get(b,"duration"),i=function(){var a=b.dpDiv.find("iframe.ui-datepicker-cover");if(!!a.length){var c=$.datepicker._getBorders(b.dpDiv);a.css({left:-c[0],top:-c[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex($(a).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&$.effects[g]?b.dpDiv.show(g,$.datepicker._get(b,"showOptions"),h,i):b.dpDiv[g||"show"](g?h:null,i),(!g||!h)&&i(),b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus(),$.datepicker._curInst=b}},_updateDatepicker:function(a){var b=this;b.maxRows=4;var c=$.datepicker._getBorders(a.dpDiv);instActive=a,a.dpDiv.empty().append(this._generateHTML(a));var d=a.dpDiv.find("iframe.ui-datepicker-cover");!d.length||d.css({left:-c[0],top:-c[1],width:a.dpDiv.outerWidth(),height:a.dpDiv.outerHeight()}),a.dpDiv.find("."+this._dayOverClass+" a").mouseover();var e=this._getNumberOfMonths(a),f=e[1],g=17;a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),f>1&&a.dpDiv.addClass("ui-datepicker-multi-"+f).css("width",g*f+"em"),a.dpDiv[(e[0]!=1||e[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi"),a.dpDiv[(this._get(a,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),a==$.datepicker._curInst&&$.datepicker._datepickerShowing&&a.input&&a.input.is(":visible")&&!a.input.is(":disabled")&&a.input[0]!=document.activeElement&&a.input.focus();if(a.yearshtml){var h=a.yearshtml;setTimeout(function(){h===a.yearshtml&&a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml),h=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(a){return{thin:1,medium:2,thick:3}[a]||a};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(a,b,c){var d=a.dpDiv.outerWidth(),e=a.dpDiv.outerHeight(),f=a.input?a.input.outerWidth():0,g=a.input?a.input.outerHeight():0,h=document.documentElement.clientWidth+$(document).scrollLeft(),i=document.documentElement.clientHeight+$(document).scrollTop();return b.left-=this._get(a,"isRTL")?d-f:0,b.left-=c&&b.left==a.input.offset().left?$(document).scrollLeft():0,b.top-=c&&b.top==a.input.offset().top+g?$(document).scrollTop():0,b.left-=Math.min(b.left,b.left+d>h&&h>d?Math.abs(b.left+d-h):0),b.top-=Math.min(b.top,b.top+e>i&&i>e?Math.abs(e+g):0),b},_findPos:function(a){var b=this._getInst(a),c=this._get(b,"isRTL");while(a&&(a.type=="hidden"||a.nodeType!=1||$.expr.filters.hidden(a)))a=a[c?"previousSibling":"nextSibling"];var d=$(a).offset();return[d.left,d.top]},_hideDatepicker:function(a){var b=this._curInst;if(!b||a&&b!=$.data(a,PROP_NAME))return;if(this._datepickerShowing){var c=this._get(b,"showAnim"),d=this._get(b,"duration"),e=function(){$.datepicker._tidyDialog(b)};$.effects&&$.effects[c]?b.dpDiv.hide(c,$.datepicker._get(b,"showOptions"),d,e):b.dpDiv[c=="slideDown"?"slideUp":c=="fadeIn"?"fadeOut":"hide"](c?d:null,e),c||e(),this._datepickerShowing=!1;var f=this._get(b,"onClose");f&&f.apply(b.input?b.input[0]:null,[b.input?b.input.val():"",b]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(a){if(!$.datepicker._curInst)return;var b=$(a.target),c=$.datepicker._getInst(b[0]);(b[0].id!=$.datepicker._mainDivId&&b.parents("#"+$.datepicker._mainDivId).length==0&&!b.hasClass($.datepicker.markerClassName)&&!b.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||b.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=c)&&$.datepicker._hideDatepicker()},_adjustDate:function(a,b,c){var d=$(a),e=this._getInst(d[0]);if(this._isDisabledDatepicker(d[0]))return;this._adjustInstDate(e,b+(c=="M"?this._get(e,"showCurrentAtPos"):0),c),this._updateDatepicker(e)},_gotoToday:function(a){var b=$(a),c=this._getInst(b[0]);if(this._get(c,"gotoCurrent")&&c.currentDay)c.selectedDay=c.currentDay,c.drawMonth=c.selectedMonth=c.currentMonth,c.drawYear=c.selectedYear=c.currentYear;else{var d=new Date;c.selectedDay=d.getDate(),c.drawMonth=c.selectedMonth=d.getMonth(),c.drawYear=c.selectedYear=d.getFullYear()}this._notifyChange(c),this._adjustDate(b)},_selectMonthYear:function(a,b,c){var d=$(a),e=this._getInst(d[0]);e["selected"+(c=="M"?"Month":"Year")]=e["draw"+(c=="M"?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10),this._notifyChange(e),this._adjustDate(d)},_selectDay:function(a,b,c,d){var e=$(a);if($(d).hasClass(this._unselectableClass)||this._isDisabledDatepicker(e[0]))return;var f=this._getInst(e[0]);f.selectedDay=f.currentDay=$("a",d).html(),f.selectedMonth=f.currentMonth=b,f.selectedYear=f.currentYear=c,this._selectDate(a,this._formatDate(f,f.currentDay,f.currentMonth,f.currentYear))},_clearDate:function(a){var b=$(a),c=this._getInst(b[0]);this._selectDate(b,"")},_selectDate:function(a,b){var c=$(a),d=this._getInst(c[0]);b=b!=null?b:this._formatDate(d),d.input&&d.input.val(b),this._updateAlternate(d);var e=this._get(d,"onSelect");e?e.apply(d.input?d.input[0]:null,[b,d]):d.input&&d.input.trigger("change"),d.inline?this._updateDatepicker(d):(this._hideDatepicker(),this._lastInput=d.input[0],typeof d.input[0]!="object"&&d.input.focus(),this._lastInput=null)},_updateAlternate:function(a){var b=this._get(a,"altField");if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),d=this._getDate(a),e=this.formatDate(c,d,this._getFormatConfig(a));$(b).each(function(){$(this).val(e)})}},noWeekends:function(a){var b=a.getDay();return[b>0&&b<6,""]},iso8601Week:function(a){var b=new Date(a.getTime());b.setDate(b.getDate()+4-(b.getDay()||7));var c=b.getTime();return b.setMonth(0),b.setDate(1),Math.floor(Math.round((c-b)/864e5)/7)+1},parseDate:function(a,b,c){if(a==null||b==null)throw"Invalid arguments";b=typeof b=="object"?b.toString():b+"";if(b=="")return null;var d=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff;d=typeof d!="string"?d:(new Date).getFullYear()%100+parseInt(d,10);var e=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,g=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,h=(c?c.monthNames:null)||this._defaults.monthNames,i=-1,j=-1,k=-1,l=-1,m=!1,n=function(b){var c=s+1<a.length&&a.charAt(s+1)==b;return c&&s++,c},o=function(a){var c=n(a),d=a=="@"?14:a=="!"?20:a=="y"&&c?4:a=="o"?3:2,e=new RegExp("^\\d{1,"+d+"}"),f=b.substring(r).match(e);if(!f)throw"Missing number at position "+r;return r+=f[0].length,parseInt(f[0],10)},p=function(a,c,d){var e=$.map(n(a)?d:c,function(a,b){return[[b,a]]}).sort(function(a,b){return-(a[1].length-b[1].length)}),f=-1;$.each(e,function(a,c){var d=c[1];if(b.substr(r,d.length).toLowerCase()==d.toLowerCase())return f=c[0],r+=d.length,!1});if(f!=-1)return f+1;throw"Unknown name at position "+r},q=function(){if(b.charAt(r)!=a.charAt(s))throw"Unexpected literal at position "+r;r++},r=0;for(var s=0;s<a.length;s++)if(m)a.charAt(s)=="'"&&!n("'")?m=!1:q();else switch(a.charAt(s)){case"d":k=o("d");break;case"D":p("D",e,f);break;case"o":l=o("o");break;case"m":j=o("m");break;case"M":j=p("M",g,h);break;case"y":i=o("y");break;case"@":var t=new Date(o("@"));i=t.getFullYear(),j=t.getMonth()+1,k=t.getDate();break;case"!":var t=new Date((o("!")-this._ticksTo1970)/1e4);i=t.getFullYear(),j=t.getMonth()+1,k=t.getDate();break;case"'":n("'")?q():m=!0;break;default:q()}if(r<b.length)throw"Extra/unparsed characters found in date: "+b.substring(r);i==-1?i=(new Date).getFullYear():i<100&&(i+=(new Date).getFullYear()-(new Date).getFullYear()%100+(i<=d?0:-100));if(l>-1){j=1,k=l;do{var u=this._getDaysInMonth(i,j-1);if(k<=u)break;j++,k-=u}while(!0)}var t=this._daylightSavingAdjust(new Date(i,j-1,k));if(t.getFullYear()!=i||t.getMonth()+1!=j||t.getDate()!=k)throw"Invalid date";return t},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(a,b,c){if(!b)return"";var d=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,e=(c?c.dayNames:null)||this._defaults.dayNames,f=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,g=(c?c.monthNames:null)||this._defaults.monthNames,h=function(b){var c=m+1<a.length&&a.charAt(m+1)==b;return c&&m++,c},i=function(a,b,c){var d=""+b;if(h(a))while(d.length<c)d="0"+d;return d},j=function(a,b,c,d){return h(a)?d[b]:c[b]},k="",l=!1;if(b)for(var m=0;m<a.length;m++)if(l)a.charAt(m)=="'"&&!h("'")?l=!1:k+=a.charAt(m);else switch(a.charAt(m)){case"d":k+=i("d",b.getDate(),2);break;case"D":k+=j("D",b.getDay(),d,e);break;case"o":k+=i("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-(new Date(b.getFullYear(),0,0)).getTime())/864e5),3);break;case"m":k+=i("m",b.getMonth()+1,2);break;case"M":k+=j("M",b.getMonth(),f,g);break;case"y":k+=h("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100;break;case"@":k+=b.getTime();break;case"!":k+=b.getTime()*1e4+this._ticksTo1970;break;case"'":h("'")?k+="'":l=!0;break;default:k+=a.charAt(m)}return k},_possibleChars:function(a){var b="",c=!1,d=function(b){var c=e+1<a.length&&a.charAt(e+1)==b;return c&&e++,c};for(var e=0;e<a.length;e++)if(c)a.charAt(e)=="'"&&!d("'")?c=!1:b+=a.charAt(e);else switch(a.charAt(e)){case"d":case"m":case"y":case"@":b+="0123456789";break;case"D":case"M":return null;case"'":d("'")?b+="'":c=!0;break;default:b+=a.charAt(e)}return b},_get:function(a,b){return a.settings[b]!==undefined?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()==a.lastVal)return;var c=this._get(a,"dateFormat"),d=a.lastVal=a.input?a.input.val():null,e,f;e=f=this._getDefaultDate(a);var g=this._getFormatConfig(a);try{e=this.parseDate(c,d,g)||f}catch(h){this.log(h),d=b?"":d}a.selectedDay=e.getDate(),a.drawMonth=a.selectedMonth=e.getMonth(),a.drawYear=a.selectedYear=e.getFullYear(),a.currentDay=d?e.getDate():0,a.currentMonth=d?e.getMonth():0,a.currentYear=d?e.getFullYear():0,this._adjustInstDate(a)},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){var d=function(a){var b=new Date;return b.setDate(b.getDate()+a),b},e=function(b){try{return $.datepicker.parseDate($.datepicker._get(a,"dateFormat"),b,$.datepicker._getFormatConfig(a))}catch(c){}var d=(b.toLowerCase().match(/^c/)?$.datepicker._getDate(a):null)||new Date,e=d.getFullYear(),f=d.getMonth(),g=d.getDate(),h=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,i=h.exec(b);while(i){switch(i[2]||"d"){case"d":case"D":g+=parseInt(i[1],10);break;case"w":case"W":g+=parseInt(i[1],10)*7;break;case"m":case"M":f+=parseInt(i[1],10),g=Math.min(g,$.datepicker._getDaysInMonth(e,f));break;case"y":case"Y":e+=parseInt(i[1],10),g=Math.min(g,$.datepicker._getDaysInMonth(e,f))}i=h.exec(b)}return new Date(e,f,g)},f=b==null||b===""?c:typeof b=="string"?e(b):typeof b=="number"?isNaN(b)?c:d(b):new Date(b.getTime());return f=f&&f.toString()=="Invalid Date"?c:f,f&&(f.setHours(0),f.setMinutes(0),f.setSeconds(0),f.setMilliseconds(0)),this._daylightSavingAdjust(f)},_daylightSavingAdjust:function(a){return a?(a.setHours(a.getHours()>12?a.getHours()+2:0),a):null},_setDate:function(a,b,c){var d=!b,e=a.selectedMonth,f=a.selectedYear,g=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=g.getDate(),a.drawMonth=a.selectedMonth=a.currentMonth=g.getMonth(),a.drawYear=a.selectedYear=a.currentYear=g.getFullYear(),(e!=a.selectedMonth||f!=a.selectedYear)&&!c&&this._notifyChange(a),this._adjustInstDate(a),a.input&&a.input.val(d?"":this._formatDate(a))},_getDate:function(a){var b=!a.currentYear||a.input&&a.input.val()==""?null:this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return b},_generateHTML:function(a){var b=new Date;b=this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._get(a,"isRTL"),d=this._get(a,"showButtonPanel"),e=this._get(a,"hideIfNoPrevNext"),f=this._get(a,"navigationAsDateFormat"),g=this._getNumberOfMonths(a),h=this._get(a,"showCurrentAtPos"),i=this._get(a,"stepMonths"),j=g[0]!=1||g[1]!=1,k=this._daylightSavingAdjust(a.currentDay?new Date(a.currentYear,a.currentMonth,a.currentDay):new Date(9999,9,9)),l=this._getMinMaxDate(a,"min"),m=this._getMinMaxDate(a,"max"),n=a.drawMonth-h,o=a.drawYear;n<0&&(n+=12,o--);if(m){var p=this._daylightSavingAdjust(new Date(m.getFullYear(),m.getMonth()-g[0]*g[1]+1,m.getDate()));p=l&&p<l?l:p;while(this._daylightSavingAdjust(new Date(o,n,1))>p)n--,n<0&&(n=11,o--)}a.drawMonth=n,a.drawYear=o;var q=this._get(a,"prevText");q=f?this.formatDate(q,this._daylightSavingAdjust(new Date(o,n-i,1)),this._getFormatConfig(a)):q;var r=this._canAdjustMonth(a,-1,o,n)?'<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._adjustDate('#"+a.id+"', -"+i+", 'M');\""+' title="'+q+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+q+"</span></a>":e?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+q+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+q+"</span></a>",s=this._get(a,"nextText");s=f?this.formatDate(s,this._daylightSavingAdjust(new Date(o,n+i,1)),this._getFormatConfig(a)):s;var t=this._canAdjustMonth(a,1,o,n)?'<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._adjustDate('#"+a.id+"', +"+i+", 'M');\""+' title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>":e?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>",u=this._get(a,"currentText"),v=this._get(a,"gotoCurrent")&&a.currentDay?k:b;u=f?this.formatDate(u,v,this._getFormatConfig(a)):u;var w=a.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_'+dpuuid+'.datepicker._hideDatepicker();">'+this._get(a,"closeText")+"</button>",x=d?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?w:"")+(this._isInRange(a,v)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._gotoToday('#"+a.id+"');\""+">"+u+"</button>":"")+(c?"":w)+"</div>":"",y=parseInt(this._get(a,"firstDay"),10);y=isNaN(y)?0:y;var z=this._get(a,"showWeek"),A=this._get(a,"dayNames"),B=this._get(a,"dayNamesShort"),C=this._get(a,"dayNamesMin"),D=this._get(a,"monthNames"),E=this._get(a,"monthNamesShort"),F=this._get(a,"beforeShowDay"),G=this._get(a,"showOtherMonths"),H=this._get(a,"selectOtherMonths"),I=this._get(a,"calculateWeek")||this.iso8601Week,J=this._getDefaultDate(a),K="";for(var L=0;L<g[0];L++){var M="";this.maxRows=4;for(var N=0;N<g[1];N++){var O=this._daylightSavingAdjust(new Date(o,n,a.selectedDay)),P=" ui-corner-all",Q="";if(j){Q+='<div class="ui-datepicker-group';if(g[1]>1)switch(N){case 0:Q+=" ui-datepicker-group-first",P=" ui-corner-"+(c?"right":"left");break;case g[1]-1:Q+=" ui-datepicker-group-last",P=" ui-corner-"+(c?"left":"right");break;default:Q+=" ui-datepicker-group-middle",P=""}Q+='">'}Q+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+P+'">'+(/all|left/.test(P)&&L==0?c?t:r:"")+(/all|right/.test(P)&&L==0?c?r:t:"")+this._generateMonthYearHeader(a,n,o,l,m,L>0||N>0,D,E)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";var R=z?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"";for(var S=0;S<7;S++){var T=(S+y)%7;R+="<th"+((S+y+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+A[T]+'">'+C[T]+"</span></th>"}Q+=R+"</tr></thead><tbody>";var U=this._getDaysInMonth(o,n);o==a.selectedYear&&n==a.selectedMonth&&(a.selectedDay=Math.min(a.selectedDay,U));var V=(this._getFirstDayOfMonth(o,n)-y+7)%7,W=Math.ceil((V+U)/7),X=j?this.maxRows>W?this.maxRows:W:W;this.maxRows=X;var Y=this._daylightSavingAdjust(new Date(o,n,1-V));for(var Z=0;Z<X;Z++){Q+="<tr>";var _=z?'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(Y)+"</td>":"";for(var S=0;S<7;S++){var ba=F?F.apply(a.input?a.input[0]:null,[Y]):[!0,""],bb=Y.getMonth()!=n,bc=bb&&!H||!ba[0]||l&&Y<l||m&&Y>m;_+='<td class="'+((S+y+6)%7>=5?" ui-datepicker-week-end":"")+(bb?" ui-datepicker-other-month":"")+(Y.getTime()==O.getTime()&&n==a.selectedMonth&&a._keyEvent||J.getTime()==Y.getTime()&&J.getTime()==O.getTime()?" "+this._dayOverClass:"")+(bc?" "+this._unselectableClass+" ui-state-disabled":"")+(bb&&!G?"":" "+ba[1]+(Y.getTime()==k.getTime()?" "+this._currentClass:"")+(Y.getTime()==b.getTime()?" ui-datepicker-today":""))+'"'+((!bb||G)&&ba[2]?' title="'+ba[2]+'"':"")+(bc?"":' onclick="DP_jQuery_'+dpuuid+".datepicker._selectDay('#"+a.id+"',"+Y.getMonth()+","+Y.getFullYear()+', this);return false;"')+">"+(bb&&!G?"&#xa0;":bc?'<span class="ui-state-default">'+Y.getDate()+"</span>":'<a class="ui-state-default'+(Y.getTime()==b.getTime()?" ui-state-highlight":"")+(Y.getTime()==k.getTime()?" ui-state-active":"")+(bb?" ui-priority-secondary":"")+'" href="#">'+Y.getDate()+"</a>")+"</td>",Y.setDate(Y.getDate()+1),Y=this._daylightSavingAdjust(Y)}Q+=_+"</tr>"}n++,n>11&&(n=0,o++),Q+="</tbody></table>"+(j?"</div>"+(g[0]>0&&N==g[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),M+=Q}K+=M}return K+=x+($.browser.msie&&parseInt($.browser.version,10)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),a._keyEvent=!1,K},_generateMonthYearHeader:function(a,b,c,d,e,f,g,h){var i=this._get(a,"changeMonth"),j=this._get(a,"changeYear"),k=this._get(a,"showMonthAfterYear"),l='<div class="ui-datepicker-title">',m="";if(f||!i)m+='<span class="ui-datepicker-month">'+g[b]+"</span>";else{var n=d&&d.getFullYear()==c,o=e&&e.getFullYear()==c;m+='<select class="ui-datepicker-month" onchange="DP_jQuery_'+dpuuid+".datepicker._selectMonthYear('#"+a.id+"', this, 'M');\" "+">";for(var p=0;p<12;p++)(!n||p>=d.getMonth())&&(!o||p<=e.getMonth())&&(m+='<option value="'+p+'"'+(p==b?' selected="selected"':"")+">"+h[p]+"</option>");m+="</select>"}k||(l+=m+(f||!i||!j?"&#xa0;":""));if(!a.yearshtml){a.yearshtml="";if(f||!j)l+='<span class="ui-datepicker-year">'+c+"</span>";else{var q=this._get(a,"yearRange").split(":"),r=(new Date).getFullYear(),s=function(a){var b=a.match(/c[+-].*/)?c+parseInt(a.substring(1),10):a.match(/[+-].*/)?r+parseInt(a,10):parseInt(a,10);return isNaN(b)?r:b},t=s(q[0]),u=Math.max(t,s(q[1]||""));t=d?Math.max(t,d.getFullYear()):t,u=e?Math.min(u,e.getFullYear()):u,a.yearshtml+='<select class="ui-datepicker-year" onchange="DP_jQuery_'+dpuuid+".datepicker._selectMonthYear('#"+a.id+"', this, 'Y');\" "+">";for(;t<=u;t++)a.yearshtml+='<option value="'+t+'"'+(t==c?' selected="selected"':"")+">"+t+"</option>";a.yearshtml+="</select>",l+=a.yearshtml,a.yearshtml=null}}return l+=this._get(a,"yearSuffix"),k&&(l+=(f||!i||!j?"&#xa0;":"")+m),l+="</div>",l},_adjustInstDate:function(a,b,c){var d=a.drawYear+(c=="Y"?b:0),e=a.drawMonth+(c=="M"?b:0),f=Math.min(a.selectedDay,this._getDaysInMonth(d,e))+(c=="D"?b:0),g=this._restrictMinMax(a,this._daylightSavingAdjust(new Date(d,e,f)));a.selectedDay=g.getDate(),a.drawMonth=a.selectedMonth=g.getMonth(),a.drawYear=a.selectedYear=g.getFullYear(),(c=="M"||c=="Y")&&this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max"),e=c&&b<c?c:b;return e=d&&e>d?d:e,e},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");b&&b.apply(a.input?a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){var b=this._get(a,"numberOfMonths");return b==null?[1,1]:typeof b=="number"?[1,b]:b},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,d){var e=this._getNumberOfMonths(a),f=this._daylightSavingAdjust(new Date(c,d+(b<0?b:e[0]*e[1]),1));return b<0&&f.setDate(this._getDaysInMonth(f.getFullYear(),f.getMonth())),this._isInRange(a,f)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!d||b.getTime()<=d.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff");return b=typeof b!="string"?b:(new Date).getFullYear()%100+parseInt(b,10),{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,"monthNames")}},_formatDate:function(a,b,c,d){b||(a.currentDay=a.selectedDay,a.currentMonth=a.selectedMonth,a.currentYear=a.selectedYear);var e=b?typeof b=="object"?b:this._daylightSavingAdjust(new Date(d,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),e,this._getFormatConfig(a))}}),$.fn.datepicker=function(a){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv),$.datepicker.initialized=!0);var b=Array.prototype.slice.call(arguments,1);return typeof a!="string"||a!="isDisabled"&&a!="getDate"&&a!="widget"?a=="option"&&arguments.length==2&&typeof arguments[1]=="string"?$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this[0]].concat(b)):this.each(function(){typeof a=="string"?$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this].concat(b)):$.datepicker._attachDatepicker(this,a)}):$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this[0]].concat(b))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.8.21",window["DP_jQuery_"+dpuuid]=$})(jQuery);;(function ($) {
	if ($.datepicker == null) {
		throw new Error("jquery.datepicker plugin not found");
	}

	$.datepicker.regional['en'] = $.datepicker.regional[''];

	$.datepicker.regional['ru'] = {
		closeText: 'Закрыть',
		prevText: '&#x3c;Пред',
		nextText: 'След&#x3e;',
		currentText: 'Сегодня',
		monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
		monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
		dayNames: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],
		dayNamesShort: ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'сбт'],
		dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
		weekHeader: 'Не',
		dateFormat: 'dd.mm.yy',
		firstDay: 1,
		isRTL: false,
		showMonthAfterYear: false,
		yearSuffix: ''
	};

})(jQuery);// Autosize 1.15.2 - jQuery plugin for textareas
// (c) 2013 Jack Moore - jacklmoore.com
// license: www.opensource.org/licenses/mit-license.php

(function ($) {
	var 
	defaults = {
		className: 'autosizejs',
		append: "",
		callback: false
	},
	hidden = 'hidden',
	borderBox = 'border-box',
	lineHeight = 'lineHeight',

	// border:0 is unnecessary, but avoids a bug in FireFox on OSX (http://www.jacklmoore.com/autosize#comment-851)
	copy = '<textarea tabindex="-1" style="position:absolute; top:-9999px; left:-9999px; right:auto; bottom:auto; border:0; -moz-box-sizing:content-box; -webkit-box-sizing:content-box; box-sizing:content-box; word-wrap:break-word; height:0 !important; min-height:0 !important; overflow:hidden;"/>',

	// line-height is conditionally included because IE7/IE8/old Opera do not return the correct value.
	copyStyle = [
		'fontFamily',
		'fontSize',
		'fontWeight',
		'fontStyle',
		'letterSpacing',
		'textTransform',
		'wordSpacing',
		'textIndent'
	],
	oninput = 'oninput',
	onpropertychange = 'onpropertychange',

	// to keep track which textarea is being mirrored when adjust() is called.
	mirrored,

	// the mirror element, which is used to calculate what size the mirrored element should be.
	mirror = $(copy).data('autosize', true)[0];

	// test that line-height can be accurately copied.
	mirror.style.lineHeight = '99px';
	if ($(mirror).css(lineHeight) === '99px') {
		copyStyle.push(lineHeight);
	}
	mirror.style.lineHeight = '';

	$.fn.autosize = function (options) {
		options = $.extend({}, defaults, options || {});

		if (mirror.parentNode !== document.body) {
			$(document.body).append(mirror);
		}

		return this.each(function () {
			var 
			ta = this,
			$ta = $(ta),
			minHeight = Math.max($ta.height(), 15),
			maxHeight = parseInt($ta.css('maxHeight'), 10),
			active,
			boxOffset = 0,
			value = ta.value,
			callback = $.isFunction(options.callback);

			if ($ta.data('autosize')) {
				// exit if autosize has already been applied, or if the textarea is the mirror element.
				return;
			}

			if ($ta.css('box-sizing') === borderBox || $ta.css('-moz-box-sizing') === borderBox || $ta.css('-webkit-box-sizing') === borderBox) {
				boxOffset = $ta.outerHeight() - $ta.height();
			}

			$ta.css({
				overflow: hidden,
				overflowY: hidden,
				wordWrap: 'break-word'
			}).data('autosize', true);

			// Opera returns '-1px' when max-height is set to 'none'.
			maxHeight = maxHeight && maxHeight > 0 ? maxHeight : 9e4;

			function initMirror() {
				mirrored = ta;
				mirror.className = options.className;

				// mirror is a duplicate textarea located off-screen that
				// is automatically updated to contain the same text as the
				// original textarea.  mirror always has a height of 0.
				// This gives a cross-browser supported way getting the actual
				// height of the text, through the scrollTop property.
				$.each(copyStyle, function (i, val) {
					mirror.style[val] = $ta.css(val);
				});
			}

			// Using mainly bare JS in this function because it is going
			// to fire very often while typing, and needs to very efficient.
			function adjust() {
				var height, overflow, original;

				if (mirrored !== ta) {
					initMirror();
				}

				// the active flag keeps IE from tripping all over itself.  Otherwise
				// actions in the adjust function will cause IE to call adjust again.
				if (!active) {
					active = true;
					mirror.value = ta.value + options.append;
					mirror.style.overflowY = ta.style.overflowY;
					original = parseInt(ta.style.height, 10);

					// Update the width in case the original textarea width has changed
					mirror.style.width = $ta.width() + 'px';

					// Needed for IE7 to reliably return the correct scrollHeight
					mirror.scrollTop = 0;
					// Set a very high value for scrollTop to be sure the
					// mirror is scrolled all the way to the bottom.
					mirror.scrollTop = 9e4;
					height = mirror.scrollTop;
					// Note to self: replace the previous 3 lines with 'height = mirror.scrollHeight' when dropping IE7 support.

					if (height > maxHeight) {
						height = maxHeight;
						overflow = 'scroll';
					} else if (height < minHeight) {
						height = minHeight;
					}
					height += boxOffset;
					ta.style.overflowY = overflow || hidden;

					if (original !== height) {
						ta.style.height = height + 'px';
						if (callback) {
							options.callback.call(ta);
						}
					}

					// This small timeout gives IE a chance to draw it's scrollbar
					// before adjust can be run again (prevents an infinite loop).
					setTimeout(function () {
						active = false;
					}, 1);
				}
			}

			if (onpropertychange in ta) {
				if (oninput in ta) {
					// Detects IE9.  IE9 does not fire onpropertychange or oninput for deletions,
					// so binding to onkeyup to catch most of those occassions.  There is no way that I
					// know of to detect something like 'cut' in IE9.
					ta[oninput] = ta.onkeyup = adjust;
				} else {
					// IE7 / IE8
					ta[onpropertychange] = adjust;
				}
			} else {
				// Modern Browsers
				ta[oninput] = adjust;

				// The textarea overflow is now hidden, but Chrome doesn't reflow the text to account for the
				// new space made available by removing the scrollbars. This workaround causes Chrome to reflow the text.
				ta.value = '';
				ta.value = value;
			}

			$(window).resize(adjust);

			// Allow for manual triggering if needed.
			$ta.bind('autosize', adjust);

			// Call adjust in case the textarea already contains text.
			adjust();
		});
	};
} (window.jQuery || window.Zepto));/*
 * jQuery BBQ: Back Button & Query Library - v1.2.1 - 2/17/2010
 * http://benalman.com/projects/jquery-bbq-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function($,p){var i,m=Array.prototype.slice,r=decodeURIComponent,a=$.param,c,l,v,b=$.bbq=$.bbq||{},q,u,j,e=$.event.special,d="hashchange",A="querystring",D="fragment",y="elemUrlAttr",g="location",k="href",t="src",x=/^.*\?|#.*$/g,w=/^.*\#/,h,C={};function E(F){return typeof F==="string"}function B(G){var F=m.call(arguments,1);return function(){return G.apply(this,F.concat(m.call(arguments)))}}function n(F){return F.replace(/^[^#]*#?(.*)$/,"$1")}function o(F){return F.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/,"$1")}function f(H,M,F,I,G){var O,L,K,N,J;if(I!==i){K=F.match(H?/^([^#]*)\#?(.*)$/:/^([^#?]*)\??([^#]*)(#?.*)/);J=K[3]||"";if(G===2&&E(I)){L=I.replace(H?w:x,"")}else{N=l(K[2]);I=E(I)?l[H?D:A](I):I;L=G===2?I:G===1?$.extend({},I,N):$.extend({},N,I);L=a(L);if(H){L=L.replace(h,r)}}O=K[1]+(H?"#":L||!K[1]?"?":"")+L+J}else{O=M(F!==i?F:p[g][k])}return O}a[A]=B(f,0,o);a[D]=c=B(f,1,n);c.noEscape=function(G){G=G||"";var F=$.map(G.split(""),encodeURIComponent);h=new RegExp(F.join("|"),"g")};c.noEscape(",/");$.deparam=l=function(I,F){var H={},G={"true":!0,"false":!1,"null":null};$.each(I.replace(/\+/g," ").split("&"),function(L,Q){var K=Q.split("="),P=r(K[0]),J,O=H,M=0,R=P.split("]["),N=R.length-1;if(/\[/.test(R[0])&&/\]$/.test(R[N])){R[N]=R[N].replace(/\]$/,"");R=R.shift().split("[").concat(R);N=R.length-1}else{N=0}if(K.length===2){J=r(K[1]);if(F){J=J&&!isNaN(J)?+J:J==="undefined"?i:G[J]!==i?G[J]:J}if(N){for(;M<=N;M++){P=R[M]===""?O.length:R[M];O=O[P]=M<N?O[P]||(R[M+1]&&isNaN(R[M+1])?{}:[]):J}}else{if($.isArray(H[P])){H[P].push(J)}else{if(H[P]!==i){H[P]=[H[P],J]}else{H[P]=J}}}}else{if(P){H[P]=F?i:""}}});return H};function z(H,F,G){if(F===i||typeof F==="boolean"){G=F;F=a[H?D:A]()}else{F=E(F)?F.replace(H?w:x,""):F}return l(F,G)}l[A]=B(z,0);l[D]=v=B(z,1);$[y]||($[y]=function(F){return $.extend(C,F)})({a:k,base:k,iframe:t,img:t,input:t,form:"action",link:k,script:t});j=$[y];function s(I,G,H,F){if(!E(H)&&typeof H!=="object"){F=H;H=G;G=i}return this.each(function(){var L=$(this),J=G||j()[(this.nodeName||"").toLowerCase()]||"",K=J&&L.attr(J)||"";L.attr(J,a[I](K,H,F))})}$.fn[A]=B(s,A);$.fn[D]=B(s,D);b.pushState=q=function(I,F){if(E(I)&&/^#/.test(I)&&F===i){F=2}var H=I!==i,G=c(p[g][k],H?I:{},H?F:2);p[g][k]=G+(/#/.test(G)?"":"#")};b.getState=u=function(F,G){return F===i||typeof F==="boolean"?v(F):v(G)[F]};b.removeState=function(F){var G={};if(F!==i){G=u();$.each($.isArray(F)?F:arguments,function(I,H){delete G[H]})}q(G,2)};e[d]=$.extend(e[d],{add:function(F){var H;function G(J){var I=J[D]=c();J.getState=function(K,L){return K===i||typeof K==="boolean"?l(I,K):l(I,L)[K]};H.apply(this,arguments)}if($.isFunction(F)){H=F;return G}else{H=F.handler;F.handler=G}}})})(jQuery,this);
/*
 *
 * Copyright (c) 2010 C. F., Wong (<a href="http://cloudgen.w0ng.hk">Cloudgen Examplet Store</a>)
 * Licensed under the MIT License:
 * http://www.opensource.org/licenses/mit-license.php
 *
 */
﻿(function(k,e,i,j){k.fn.caret=function(b,l){var a,c,f=this[0],d=k.browser.msie;if(typeof b==="object"&&typeof b.start==="number"&&typeof b.end==="number"){a=b.start;c=b.end}else if(typeof b==="number"&&typeof l==="number"){a=b;c=l}else if(typeof b==="string")if((a=f.value.indexOf(b))>-1)c=a+b[e];else a=null;else if(Object.prototype.toString.call(b)==="[object RegExp]"){b=b.exec(f.value);if(b!=null){a=b.index;c=a+b[0][e]}}if(typeof a!="undefined"){if(d){d=this[0].createTextRange();d.collapse(true);
d.moveStart("character",a);d.moveEnd("character",c-a);d.select()}else{this[0].selectionStart=a;this[0].selectionEnd=c}this[0].focus();return this}else{if(d){c=document.selection;if(this[0].tagName.toLowerCase()!="textarea"){d=this.val();a=c[i]()[j]();a.moveEnd("character",d[e]);var g=a.text==""?d[e]:d.lastIndexOf(a.text);a=c[i]()[j]();a.moveStart("character",-d[e]);var h=a.text[e]}else{a=c[i]();c=a[j]();c.moveToElementText(this[0]);c.setEndPoint("EndToEnd",a);g=c.text[e]-a.text[e];h=g+a.text[e]}}else{g=
f.selectionStart;h=f.selectionEnd}a=f.value.substring(g,h);return{start:g,end:h,text:a,replace:function(m){return f.value.substring(0,g)+m+f.value.substring(h,f.value[e])}}}}})(jQuery,"length","createRange","duplicate");/**
_ _____           _          _     _      
| |  __ \         (_)        | |   | |     
___ ___ | | |__) |___  ___ _ ______ _| |__ | | ___ 
/ __/ _ \| |  _  // _ \/ __| |_  / _` | '_ \| |/ _ \
| (_| (_) | | | \ \  __/\__ \ |/ / (_| | |_) | |  __/
\___\___/|_|_|  \_\___||___/_/___\__,_|_.__/|_|\___|
	 
v 1.0 - a jQuery plugin by Alvaro Prieto Lauroba
	
Licences: MIT & GPL
Feel free to use or modify this plugin as far as my full name is kept	
	
If you are going to use this plugin in production environments it is 
strongly recomended to use its minified version: colResizable.min.js

*/

(function ($) {

	var d = $(document); 		//window object
	var h = $("head"); 		//head object
	var drag = null; 		//reference to the current grip that is being dragged
	var tables = []; 		//array of the already processed tables (table.id as key)
	var count = 0; 			//internal count to create unique IDs when needed.
	var table = null;

	//common strings for minification	(in the minified version there are plenty more)
	var ID = "id";
	var PX = "px"
	var SIGNATURE = "JColResizer";

	//shortcuts
	var I = parseInt;
	var M = Math;
	var ie = $.browser.msie;

	//append required CSS rules 
	h.append("<style type='text/css'>  .JColResizer{table-layout:fixed;} .JColResizer td, .JColResizer th{overflow:hidden; } .JCLRgrips{ height:0px; position:relative;} .JCLRgrip{margin-left:-5px; position:absolute; z-index:5; } .JCLRgrip .JColResizer{position:absolute;background-color:red;filter:alpha(opacity=1);opacity:0;width:10px;cursor:e-resize;height:100%;} .JCLRLastGrip{position:absolute; width:1px; } .JCLRgripDrag{ border-left:1px dotted black;	}</style>");

	$.fn.colResizable = function (options) {
		var defaults = {
			draggingClass: 'JCLRgripDrag', //css-class used when a grip is being dragged (for visual feedback purposes)
			gripInnerHtml: '', 			//if it is required to use a custom grip it can be done using some custom HTML
			onResize: null, 				//callback function fired when the dragging process is over
			liveDrag: false, 			//enables table-layout updaing while dragging
			disable: false, 				//disables all the enhancements performed in a previously colResized table
			setCellWidth: true
		}, options = $.extend(defaults, options),
		self = this;
		$.each(self, function (i, e) {
			var t = $(e); 	 				//the table object is wrapped
			if (options.disable) return destroy(t); 	//the user is asking to destroy a previously colResized table
			var id = t.attr(ID) || SIGNATURE + count++; //its id is obtained, if null new one is generated
			if (!t.is("table") || tables[id]) return; 	//if the object is not a table or if it was already processed then it is ignored.
			t.addClass(SIGNATURE).attr(ID, id).before('<div class="JCLRgrips"/>'); //the grips container object is added. Signature class forces table rendering in fixed-layout mode to prevent column's min-width
			t.opt = options; t.g = []; t.c = []; t.w = t.width(); t.gc = t.prev(); //t.c and t.g are arrays of columns and grips respectively				
			t.cs = I(ie ? e.cellSpacing || e.currentStyle.borderSpacing : t.css('border-spacing')) || 2; //table cellspacing (not even jQuery is fully cross-browser)
			t.b = I(ie ? e.border || e.currentStyle.borderLeftWidth : t.css('border-left-width')) || 1; //outer border width (again cross-browser isues)
			// if(!(tb.style.width || tb.width)) t.width(t.width()); //I am not an IE fan, but it is a pitty that only IE has the currentStyle attribute working as expected. For this reason I can not check easily if the table has an explicit width or if it is rendered as "auto"
			tables[id] = t; 	//the table object is stored using its id as key		
			createGrips(t, options); 	//grips are created
		});
		/**
		* Function to allow column resizing for table objects. It is the starting point to apply the plugin.
		* @param {DOM node} tb - refrence to the DOM table object to be enhanced
		* @param {Object} options	- some customization values
		*/


		/**
		* This function allows to remove any enhancements performed by this plugin on a previously processed table.
		* @param {jQuery ref} t - table object
		*/
		function destroy(t) {
			var id = t.attr(ID), t = tables[id]; 	//its table object is found
			if (!t || !t.is("table")) return; 		//if none, then it wasnt processed	 
			t.removeClass(SIGNATURE).gc.remove(); //class and grips are removed
			delete tables[id]; 					//clean up data
		};


		/**
		* Function to create all the grips associated with the table given by parameters 
		* @param {jQuery ref} t - table object
		*/
		function createGrips(t, options) {
			var th = t.find("tr:first th"); 			//find all the column headers of the current table
			if (!th.length) th = t.find("tr:first td"); 	//if none, the first TD row is used		
			t.ln = th.length; 						//table length is stored	
			th.each(function (i) {						//iterate through the table column headers			
				var c = $(this); 						//jquery wrap for the current column			
				var g = $(t.gc.append('<div class="JCLRgrip"></div>')[0].lastChild); //add the visual node to be used as grip
				g.t = t; g.i = i; g.c = c; c.w = c.width(); 	//some values are stored in the grip's node data
				t.g.push(g); t.c.push(c); 					//the current grip and column are added to its table object
				if (options.setCellWidth) c.width(c.w).removeAttr('width'); 			//the width of the column is converted into pixel-based measurements
				if (i < t.ln - 1) g.mousedown(onGripMouseDown).html('<div class="' + SIGNATURE + '"></div>').append(t.opt.gripInnerHtml); //bind the mousedown event to start dragging 
				else g.addClass("JCLRLastGrip").removeClass("JCLRgrip"); //the last grip is used only to store data			
				g.data(SIGNATURE, { i: i, t: t.attr(ID) }); 					//grip index and its table name are stored in the HTML 												
			});
			syncGrips(t); //the grips are positioned according to the current table layout			
			//there is a small problem, some cells in the table could contain dimension values interfering with the 
			//width value set by this plugin. Those values are removed
			t.find('tr:not(:first)').find('td, th').each(function () {
				$(this).removeAttr('width');
			});
		};



		/**
		* Function that places each grip in the correct position according to the current table layout	 * 
		* @param {jQuery ref} t - table object
		*/
		function syncGrips(t) {
			t.gc.width(t.w); 		//the grip's container width is updated 		
			for (var i = 0; i < t.ln; i++) {	//for each column
				var c = t.c[i];
				t.g[i].css({			//height and position of the grip is updated according to the table layout
					left: c.offset().left - t.offset().left + c.outerWidth() + t.cs / 2 + PX,
					height: t.outerHeight()
				});
			}
		};


		/**
		* This function updates column's width according to the horizontal position increment of the grip being
		* dragged. The function can be called while dragging if liveDragging is enabled and also from the onGripDragOver
		* event handler to synchronize grip's position with their related columns.
		* @param {jQuery ref} t - table object
		* @param {nunmber} i - index of the grip being dragged
		* @param {bool} isOver - to identify when the function is being called from the onGripDragOver event	
		*/
		function syncCols(t, i, isOver) {
			var inc = drag.x - drag.l, c = t.c[i], c2 = t.c[i + 1];

			var w = c.w + inc; var w2 = c2.w - inc; //their new width is obtained		
			c.width(w + PX); c2.width(w2 + PX); //and set	
			if (isOver) { c.w = w; c2.w = w2; }
		};


		/**
		* Event handler used while dragging a grip. It checks if the next grip's position is valid and updates it. 
		* @param {event} e - mousemove event binded to the window object
		*/
		function onGripDrag(e) {
			if (!drag) return; var t = drag.t; //table object reference 
			var x = e.pageX - drag.ox + drag.l; //next position according to horizontal mouse position increment
			var mw = options.minWidth ? options.minWidth : 40, i = drag.i; 		//cell's min width
			var l = t.cs * 1.5 + mw + t.b;

			var max = i == t.ln - 1 ? t.w - l : t.g[i + 1].position().left - t.cs - mw; //max position according to the contiguous cells
			var min = i ? t.g[i - 1].position().left + t.cs + mw : l; 			//min position according to the contiguous cells

			x = M.max(min, M.min(max, x)); 					//apply boundings		
			drag.x = x; drag.css("left", x + PX); 			//apply position increment				
			if (t.opt.liveDrag) { syncCols(t, i); syncGrips(t); } //if liveDrag is enabled, columns and grips are synchronized			

			return false; 	//prevent text selection				
		};


		/**
		* Event handler fired when the dragging is over, updating table layout
		*/
		function onGripDragOver(e) {
			d.unbind('mousemove.' + SIGNATURE).unbind('mouseup.' + SIGNATURE);
			$("head :last-child").remove(); 				//remove the dragging cursor style	
			if (!drag) return;
			drag.removeClass(drag.t.opt.draggingClass); 	//remove the grip's dragging css-class
			var t = drag.t, cb = t.opt.onResize; 			//get some values	
			if (drag.x) { 									//only if the column width has been changed
				syncCols(t, drag.i, true); syncGrips(t); //the columns and grips are updated
				if (cb) { e.currentTarget = t[0]; cb(e); } //if there is a callback function, it is fired
			}
			drag = null; 								//since the grip's dragging is over									
		};


		/**
		* Event handler fired when the grip's dragging is about to start. Its main goal is to set up events 
		* and store some values used while dragging.
		* @param {event} e - grip's mousedown event
		*/
		function onGripMouseDown(e) {
			var o = $(this).data(SIGNATURE); 		//retrieve grip's data
			var t = tables[o.t], g = t.g[o.i]; 		//shortcuts for the table and grip objects
			g.ox = e.pageX; g.l = g.position().left; //the initial position is kept				
			d.bind('mousemove.' + SIGNATURE, onGripDrag).bind('mouseup.' + SIGNATURE, onGripDragOver); //mousemove and mouseup events are bound
			h.append("<style type='text/css'>*{cursor:e-resize!important}</style>"); 				//change the mouse cursor to the horizontal-resizing pointer
			g.addClass(t.opt.draggingClass); 	//add the dragging class (to allow some visual feedback)				
			drag = g; 						//the current grip is stored as the current dragging object
			if (t.c[o.i].l) for (var i = 0, c; i < t.ln; i++) { c = t.c[i]; c.l = false; c.w = c.width(); } 	//if the colum is locked (after browser resize), then c.w must be updated

			return false; 	//prevent text selection
		};

		var log = function (t) {
			$("#log").html($("#log").html() + "; " + t);
		}

		/**
		* Event handler fired when the browser is resized. The main purpose of this function is to update
		* table layout according to the browser's size synchronizing related grips 
		*/

		function onResize() {
			for (var a in tables) {
				var t = tables[a], i, mw = 0;
				if (!(t.context && t.context.nodeName.toLowerCase() == "table")) return false;
				t.removeClass(SIGNATURE); 					//firefox doesnt like layout-fixed in some cases
				if (t.w != t.width()) {							//if the the table's width has changed
					t.w = t.width(); 						//its new value is kept
					for (i = 0; i < t.ln; i++) mw += t.c[i].w; 	//the active cells area is obtained
					//cell rendering is not as trivial as it might seem, and it is slightly different for
					//each browser. In the begining i had a big switch for each browser, but since the code
					//was extremelly ugly now I use a different approach with several reflows. This works 
					//pretty well but it's a bit slower. For now, lets keep things simple...   
					for (i = 0; i < t.ln; i++) t.c[i].css("width", M.round(1000 * t.c[i].w / mw) / 10 + "%").l = true;
					//c.l locks the column, telling us that its c.w is outdated									
				}
				syncGrips(t.addClass(SIGNATURE));
			}
		};

		//bind resize event, to update grips position 
		$(window).bind('resize.' + SIGNATURE, onResize);
		self.bind('changeTable.' + SIGNATURE, onResize);

		return self;
	};
})(jQuery);

/**
 * jQuery Cookie plugin
 *
 * Copyright (c) 2010 Klaus Hartl (stilbuero.de)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
jQuery.cookie = function(key, value, options) {

	// key and at least value given, set cookie...
	if (arguments.length > 1 && String(value) !== "[object Object]") {
		options = jQuery.extend({ }, options);

		if (value === null || value === undefined) {
			options.expires = -1;
		}

		if (typeof options.expires === 'number') {
			var days = options.expires, t = options.expires = new Date();
			t.setDate(t.getDate() + days);
		}

		value = String(value);

		return (document.cookie = [
			encodeURIComponent(key), '=',
			options.raw ? value : encodeURIComponent(value),
			options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
			options.path ? '; path=' + options.path : '',
			options.domain ? '; domain=' + options.domain : '',
			options.secure ? '; secure' : ''
		].join(''));
	}

	// key and possibly options given, get cookie...
	options = value || { };
	var result, decode = options.raw ? function(s) { return s; } : decodeURIComponent;
	return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? decode(result[1]) : null;
};
/*!
 * jQuery Form Plugin
 * version: 3.27.0-2013.02.06
 * @requires jQuery v1.5 or later
 *
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Project repository: https://github.com/malsup/form
 * Dual licensed under the MIT and GPL licenses:
 *    http://malsup.github.com/mit-license.txt
 *    http://malsup.github.com/gpl-license-v2.txt
 */
/*global ActiveXObject alert */
;(function($) {
"use strict";

/*
    Usage Note:
    -----------
    Do not use both ajaxSubmit and ajaxForm on the same form.  These
    functions are mutually exclusive.  Use ajaxSubmit if you want
    to bind your own submit handler to the form.  For example,

    $(document).ready(function() {
        $('#myForm').on('submit', function(e) {
            e.preventDefault(); // <-- important
            $(this).ajaxSubmit({
                target: '#output'
            });
        });
    });

    Use ajaxForm when you want the plugin to manage all the event binding
    for you.  For example,

    $(document).ready(function() {
        $('#myForm').ajaxForm({
            target: '#output'
        });
    });

    You can also use ajaxForm with delegation (requires jQuery v1.7+), so the
    form does not have to exist when you invoke ajaxForm:

    $('#myForm').ajaxForm({
        delegation: true,
        target: '#output'
    });

    When using ajaxForm, the ajaxSubmit function will be invoked for you
    at the appropriate time.
*/

/**
 * Feature detection
 */
var feature = {};
feature.fileapi = $("<input type='file'/>").get(0).files !== undefined;
feature.formdata = window.FormData !== undefined;

/**
 * ajaxSubmit() provides a mechanism for immediately submitting
 * an HTML form using AJAX.
 */
$.fn.ajaxSubmit = function(options) {
    /*jshint scripturl:true */

    // fast fail if nothing selected (http://dev.jquery.com/ticket/2752)
    if (!this.length) {
        log('ajaxSubmit: skipping submit process - no element selected');
        return this;
    }

    var method, action, url, $form = this;

    if (typeof options == 'function') {
        options = { success: options };
    }

    method = this.attr('method');
    action = this.attr('action');
    url = (typeof action === 'string') ? $.trim(action) : '';
    url = url || window.location.href || '';
    if (url) {
        // clean url (don't include hash vaue)
        url = (url.match(/^([^#]+)/)||[])[1];
    }

    options = $.extend(true, {
        url:  url,
        success: $.ajaxSettings.success,
        type: method || 'GET',
        iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank'
    }, options);

    // hook for manipulating the form data before it is extracted;
    // convenient for use with rich editors like tinyMCE or FCKEditor
    var veto = {};
    this.trigger('form-pre-serialize', [this, options, veto]);
    if (veto.veto) {
        log('ajaxSubmit: submit vetoed via form-pre-serialize trigger');
        return this;
    }

    // provide opportunity to alter form data before it is serialized
    if (options.beforeSerialize && options.beforeSerialize(this, options) === false) {
        log('ajaxSubmit: submit aborted via beforeSerialize callback');
        return this;
    }

    var traditional = options.traditional;
    if ( traditional === undefined ) {
        traditional = $.ajaxSettings.traditional;
    }

    var elements = [];
    var qx, a = this.formToArray(options.semantic, elements);
    if (options.data) {
        options.extraData = options.data;
        qx = $.param(options.data, traditional);
    }

    // give pre-submit callback an opportunity to abort the submit
    if (options.beforeSubmit && options.beforeSubmit(a, this, options) === false) {
        log('ajaxSubmit: submit aborted via beforeSubmit callback');
        return this;
    }

    // fire vetoable 'validate' event
    this.trigger('form-submit-validate', [a, this, options, veto]);
    if (veto.veto) {
        log('ajaxSubmit: submit vetoed via form-submit-validate trigger');
        return this;
    }

    var q = $.param(a, traditional);
    if (qx) {
        q = ( q ? (q + '&' + qx) : qx );
    }
    if (options.type.toUpperCase() == 'GET') {
        options.url += (options.url.indexOf('?') >= 0 ? '&' : '?') + q;
        options.data = null;  // data is null for 'get'
    }
    else {
        options.data = q; // data is the query string for 'post'
    }

    var callbacks = [];
    if (options.resetForm) {
        callbacks.push(function() { $form.resetForm(); });
    }
    if (options.clearForm) {
        callbacks.push(function() { $form.clearForm(options.includeHidden); });
    }

    // perform a load on the target only if dataType is not provided
    if (!options.dataType && options.target) {
        var oldSuccess = options.success || function(){};
        callbacks.push(function(data) {
            var fn = options.replaceTarget ? 'replaceWith' : 'html';
            $(options.target)[fn](data).each(oldSuccess, arguments);
        });
    }
    else if (options.success) {
        callbacks.push(options.success);
    }

    options.success = function(data, status, xhr) { // jQuery 1.4+ passes xhr as 3rd arg
        var context = options.context || this ;    // jQuery 1.4+ supports scope context
        for (var i=0, max=callbacks.length; i < max; i++) {
            callbacks[i].apply(context, [data, status, xhr || $form, $form]);
        }
    };

    // are there files to upload?

    // [value] (issue #113), also see comment:
    // https://github.com/malsup/form/commit/588306aedba1de01388032d5f42a60159eea9228#commitcomment-2180219
    var fileInputs = $('input[type=file]:enabled[value!=""]', this);

    var hasFileInputs = fileInputs.length > 0;
    var mp = 'multipart/form-data';
    var multipart = ($form.attr('enctype') == mp || $form.attr('encoding') == mp);

    var fileAPI = feature.fileapi && feature.formdata;
    log("fileAPI :" + fileAPI);
    var shouldUseFrame = (hasFileInputs || multipart) && !fileAPI;

    var jqxhr;

    // options.iframe allows user to force iframe mode
    // 06-NOV-09: now defaulting to iframe mode if file input is detected
    if (options.iframe !== false && (options.iframe || shouldUseFrame)) {
        // hack to fix Safari hang (thanks to Tim Molendijk for this)
        // see:  http://groups.google.com/group/jquery-dev/browse_thread/thread/36395b7ab510dd5d
        if (options.closeKeepAlive) {
            $.get(options.closeKeepAlive, function() {
                jqxhr = fileUploadIframe(a);
            });
        }
        else {
            jqxhr = fileUploadIframe(a);
        }
    }
    else if ((hasFileInputs || multipart) && fileAPI) {
        jqxhr = fileUploadXhr(a);
    }
    else {
        jqxhr = $.ajax(options);
    }

    $form.removeData('jqxhr').data('jqxhr', jqxhr);

    // clear element array
    for (var k=0; k < elements.length; k++)
        elements[k] = null;

    // fire 'notify' event
    this.trigger('form-submit-notify', [this, options]);
    return this;

    // utility fn for deep serialization
    function deepSerialize(extraData){
        var serialized = $.param(extraData).split('&');
        var len = serialized.length;
        var result = [];
        var i, part;
        for (i=0; i < len; i++) {
            // #252; undo param space replacement
            serialized[i] = serialized[i].replace(/\+/g,' ');
            part = serialized[i].split('=');
            // #278; use array instead of object storage, favoring array serializations
            result.push([decodeURIComponent(part[0]), decodeURIComponent(part[1])]);
        }
        return result;
    }

     // XMLHttpRequest Level 2 file uploads (big hat tip to francois2metz)
    function fileUploadXhr(a) {
        var formdata = new FormData();

        for (var i=0; i < a.length; i++) {
            formdata.append(a[i].name, a[i].value);
        }

        if (options.extraData) {
            var serializedData = deepSerialize(options.extraData);
            for (i=0; i < serializedData.length; i++)
                if (serializedData[i])
                    formdata.append(serializedData[i][0], serializedData[i][1]);
        }

        options.data = null;

        var s = $.extend(true, {}, $.ajaxSettings, options, {
            contentType: false,
            processData: false,
            cache: false,
            type: method || 'POST'
        });

        if (options.uploadProgress) {
            // workaround because jqXHR does not expose upload property
            s.xhr = function() {
                var xhr = jQuery.ajaxSettings.xhr();
                if (xhr.upload) {
                    xhr.upload.addEventListener('progress', function(event) {
                        var percent = 0;
                        var position = event.loaded || event.position; /*event.position is deprecated*/
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                        }
                        options.uploadProgress(event, position, total, percent);
                    }, false);
                }
                return xhr;
            };
        }

        s.data = null;
            var beforeSend = s.beforeSend;
            s.beforeSend = function(xhr, o) {
                o.data = formdata;
                if(beforeSend)
                    beforeSend.call(this, xhr, o);
        };
        return $.ajax(s);
    }

    // private function for handling file uploads (hat tip to YAHOO!)
    function fileUploadIframe(a) {
        var form = $form[0], el, i, s, g, id, $io, io, xhr, sub, n, timedOut, timeoutHandle;
        var useProp = !!$.fn.prop;
        var deferred = $.Deferred();

        if (a) {
            // ensure that every serialized input is still enabled
            for (i=0; i < elements.length; i++) {
                el = $(elements[i]);
                if ( useProp )
                    el.prop('disabled', false);
                else
                    el.removeAttr('disabled');
            }
        }

        s = $.extend(true, {}, $.ajaxSettings, options);
        s.context = s.context || s;
        id = 'jqFormIO' + (new Date().getTime());
        if (s.iframeTarget) {
            $io = $(s.iframeTarget);
            n = $io.attr('name');
            if (!n)
                 $io.attr('name', id);
            else
                id = n;
        }
        else {
            $io = $('<iframe name="' + id + '" src="'+ s.iframeSrc +'" />');
            $io.css({ position: 'absolute', top: '-1000px', left: '-1000px' });
        }
        io = $io[0];


        xhr = { // mock object
            aborted: 0,
            responseText: null,
            responseXML: null,
            status: 0,
            statusText: 'n/a',
            getAllResponseHeaders: function() {},
            getResponseHeader: function() {},
            setRequestHeader: function() {},
            abort: function(status) {
                var e = (status === 'timeout' ? 'timeout' : 'aborted');
                log('aborting upload... ' + e);
                this.aborted = 1;

                try { // #214, #257
                    if (io.contentWindow.document.execCommand) {
                        io.contentWindow.document.execCommand('Stop');
                    }
                }
                catch(ignore) {}

                $io.attr('src', s.iframeSrc); // abort op in progress
                xhr.error = e;
                if (s.error)
                    s.error.call(s.context, xhr, e, status);
                if (g)
                    $.event.trigger("ajaxError", [xhr, s, e]);
                if (s.complete)
                    s.complete.call(s.context, xhr, e);
            }
        };

        g = s.global;
        // trigger ajax global events so that activity/block indicators work like normal
        if (g && 0 === $.active++) {
            $.event.trigger("ajaxStart");
        }
        if (g) {
            $.event.trigger("ajaxSend", [xhr, s]);
        }

        if (s.beforeSend && s.beforeSend.call(s.context, xhr, s) === false) {
            if (s.global) {
                $.active--;
            }
            deferred.reject();
            return deferred;
        }
        if (xhr.aborted) {
            deferred.reject();
            return deferred;
        }

        // add submitting element to data if we know it
        sub = form.clk;
        if (sub) {
            n = sub.name;
            if (n && !sub.disabled) {
                s.extraData = s.extraData || {};
                s.extraData[n] = sub.value;
                if (sub.type == "image") {
                    s.extraData[n+'.x'] = form.clk_x;
                    s.extraData[n+'.y'] = form.clk_y;
                }
            }
        }

        var CLIENT_TIMEOUT_ABORT = 1;
        var SERVER_ABORT = 2;

        function getDoc(frame) {
            var doc = frame.contentWindow ? frame.contentWindow.document : frame.contentDocument ? frame.contentDocument : frame.document;
            return doc;
        }

        // Rails CSRF hack (thanks to Yvan Barthelemy)
        var csrf_token = $('meta[name=csrf-token]').attr('content');
        var csrf_param = $('meta[name=csrf-param]').attr('content');
        if (csrf_param && csrf_token) {
            s.extraData = s.extraData || {};
            s.extraData[csrf_param] = csrf_token;
        }

        // take a breath so that pending repaints get some cpu time before the upload starts
        function doSubmit() {
            // make sure form attrs are set
            var t = $form.attr('target'), a = $form.attr('action');

            // update form attrs in IE friendly way
            form.setAttribute('target',id);
            if (!method) {
                form.setAttribute('method', 'POST');
            }
            if (a != s.url) {
                form.setAttribute('action', s.url);
            }

            // ie borks in some cases when setting encoding
            if (! s.skipEncodingOverride && (!method || /post/i.test(method))) {
                $form.attr({
                    encoding: 'multipart/form-data',
                    enctype:  'multipart/form-data'
                });
            }

            // support timout
            if (s.timeout) {
                timeoutHandle = setTimeout(function() { timedOut = true; cb(CLIENT_TIMEOUT_ABORT); }, s.timeout);
            }

            // look for server aborts
            function checkState() {
                try {
                    var state = getDoc(io).readyState;
                    log('state = ' + state);
                    if (state && state.toLowerCase() == 'uninitialized')
                        setTimeout(checkState,50);
                }
                catch(e) {
                    log('Server abort: ' , e, ' (', e.name, ')');
                    cb(SERVER_ABORT);
                    if (timeoutHandle)
                        clearTimeout(timeoutHandle);
                    timeoutHandle = undefined;
                }
            }

            // add "extra" data to form if provided in options
            var extraInputs = [];
            try {
                if (s.extraData) {
                    for (var n in s.extraData) {
                        if (s.extraData.hasOwnProperty(n)) {
                           // if using the $.param format that allows for multiple values with the same name
                           if($.isPlainObject(s.extraData[n]) && s.extraData[n].hasOwnProperty('name') && s.extraData[n].hasOwnProperty('value')) {
                               extraInputs.push(
                               $('<input type="hidden" name="'+s.extraData[n].name+'">').val(s.extraData[n].value)
                                   .appendTo(form)[0]);
                           } else {
                               extraInputs.push(
                               $('<input type="hidden" name="'+n+'">').val(s.extraData[n])
                                   .appendTo(form)[0]);
                           }
                        }
                    }
                }

                if (!s.iframeTarget) {
                    // add iframe to doc and submit the form
                    $io.appendTo('body');
                    if (io.attachEvent)
                        io.attachEvent('onload', cb);
                    else
                        io.addEventListener('load', cb, false);
                }
                setTimeout(checkState,15);
                // just in case form has element with name/id of 'submit'
                var submitFn = document.createElement('form').submit;
                submitFn.apply(form);
            }
            finally {
                // reset attrs and remove "extra" input elements
                form.setAttribute('action',a);
                if(t) {
                    form.setAttribute('target', t);
                } else {
                    $form.removeAttr('target');
                }
                $(extraInputs).remove();
            }
        }

        if (s.forceSync) {
            doSubmit();
        }
        else {
            setTimeout(doSubmit, 10); // this lets dom updates render
        }

        var data, doc, domCheckCount = 50, callbackProcessed;

        function cb(e) {
            if (xhr.aborted || callbackProcessed) {
                return;
            }
            try {
                doc = getDoc(io);
            }
            catch(ex) {
                log('cannot access response document: ', ex);
                e = SERVER_ABORT;
            }
            if (e === CLIENT_TIMEOUT_ABORT && xhr) {
                xhr.abort('timeout');
                deferred.reject(xhr, 'timeout');
                return;
            }
            else if (e == SERVER_ABORT && xhr) {
                xhr.abort('server abort');
                deferred.reject(xhr, 'error', 'server abort');
                return;
            }

            if (!doc || doc.location.href == s.iframeSrc) {
                // response not received yet
                if (!timedOut)
                    return;
            }
            if (io.detachEvent)
                io.detachEvent('onload', cb);
            else
                io.removeEventListener('load', cb, false);

            var status = 'success', errMsg;
            try {
                if (timedOut) {
                    throw 'timeout';
                }

                var isXml = s.dataType == 'xml' || doc.XMLDocument || $.isXMLDoc(doc);
                log('isXml='+isXml);
                if (!isXml && window.opera && (doc.body === null || !doc.body.innerHTML)) {
                    if (--domCheckCount) {
                        // in some browsers (Opera) the iframe DOM is not always traversable when
                        // the onload callback fires, so we loop a bit to accommodate
                        log('requeing onLoad callback, DOM not available');
                        setTimeout(cb, 250);
                        return;
                    }
                    // let this fall through because server response could be an empty document
                    //log('Could not access iframe DOM after mutiple tries.');
                    //throw 'DOMException: not available';
                }

                //log('response detected');
                var docRoot = doc.body ? doc.body : doc.documentElement;
                xhr.responseText = docRoot ? docRoot.innerHTML : null;
                xhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;
                if (isXml)
                    s.dataType = 'xml';
                xhr.getResponseHeader = function(header){
                    var headers = {'content-type': s.dataType};
                    return headers[header];
                };
                // support for XHR 'status' & 'statusText' emulation :
                if (docRoot) {
                    xhr.status = Number( docRoot.getAttribute('status') ) || xhr.status;
                    xhr.statusText = docRoot.getAttribute('statusText') || xhr.statusText;
                }

                var dt = (s.dataType || '').toLowerCase();
                var scr = /(json|script|text)/.test(dt);
                if (scr || s.textarea) {
                    // see if user embedded response in textarea
                    var ta = doc.getElementsByTagName('textarea')[0];
                    if (ta) {
                        xhr.responseText = ta.value;
                        // support for XHR 'status' & 'statusText' emulation :
                        xhr.status = Number( ta.getAttribute('status') ) || xhr.status;
                        xhr.statusText = ta.getAttribute('statusText') || xhr.statusText;
                    }
                    else if (scr) {
                        // account for browsers injecting pre around json response
                        var pre = doc.getElementsByTagName('pre')[0];
                        var b = doc.getElementsByTagName('body')[0];
                        if (pre) {
                            xhr.responseText = pre.textContent ? pre.textContent : pre.innerText;
                        }
                        else if (b) {
                            xhr.responseText = b.textContent ? b.textContent : b.innerText;
                        }
                    }
                }
                else if (dt == 'xml' && !xhr.responseXML && xhr.responseText) {
                    xhr.responseXML = toXml(xhr.responseText);
                }

                // Allow custom logic for extracting status code and text from response
                if (s.extractStatusFromIFrame) {
                    var extractedStatus = s.extractStatusFromIFrame(doc, io);
                    if (extractedStatus) {
                        xhr.status = extractedStatus.status || xhr.status;
                        xhr.statusText = extractedStatus.statusText || xhr.statusText;
                    }
                }

                try {
                    data = httpData(xhr, dt, s);
                }
                catch (e) {
                    status = 'parsererror';
                    xhr.error = errMsg = (e || status);
                }
            }
            catch (e) {
                log('error caught: ',e);
                status = 'error';
                xhr.error = errMsg = (e || status);
            }

            if (xhr.aborted) {
                log('upload aborted');
                status = null;
            }

            if (xhr.status) { // we've set xhr.status
                status = (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) ? 'success' : 'error';
            }

            // ordering of these callbacks/triggers is odd, but that's how $.ajax does it
            if (status === 'success') {
                if (s.success)
                    s.success.call(s.context, data, 'success', xhr);
                deferred.resolve(xhr.responseText, 'success', xhr);
                if (g)
                    $.event.trigger("ajaxSuccess", [xhr, s]);
            }
            else if (status) {
                if (errMsg === undefined)
                    errMsg = xhr.statusText;
                if (s.error)
                    s.error.call(s.context, xhr, status, errMsg);
                deferred.reject(xhr, 'error', errMsg);
                if (g)
                    $.event.trigger("ajaxError", [xhr, s, errMsg]);
            }

            if (g)
                $.event.trigger("ajaxComplete", [xhr, s]);

            if (g && ! --$.active) {
                $.event.trigger("ajaxStop");
            }

            if (s.complete)
                s.complete.call(s.context, xhr, status);

            callbackProcessed = true;
            if (s.timeout)
                clearTimeout(timeoutHandle);

            // clean up
            setTimeout(function() {
                if (!s.iframeTarget)
                    $io.remove();
                xhr.responseXML = null;
            }, 100);
        }

        var toXml = $.parseXML || function(s, doc) { // use parseXML if available (jQuery 1.5+)
            if (window.ActiveXObject) {
                doc = new ActiveXObject('Microsoft.XMLDOM');
                doc.async = 'false';
                doc.loadXML(s);
            }
            else {
                doc = (new DOMParser()).parseFromString(s, 'text/xml');
            }
            return (doc && doc.documentElement && doc.documentElement.nodeName != 'parsererror') ? doc : null;
        };
        var parseJSON = $.parseJSON || function(s) {
            /*jslint evil:true */
            return window['eval']('(' + s + ')');
        };

        var httpData = function( xhr, type, s ) { // mostly lifted from jq1.4.4

            var ct = xhr.getResponseHeader('content-type') || '',
                xml = type === 'xml' || !type && ct.indexOf('xml') >= 0,
                data = xml ? xhr.responseXML : xhr.responseText;

            if (xml && data.documentElement.nodeName === 'parsererror') {
                if ($.error)
                    $.error('parsererror');
            }
            if (s && s.dataFilter) {
                data = s.dataFilter(data, type);
            }
            if (typeof data === 'string') {
                if (type === 'json' || !type && ct.indexOf('json') >= 0) {
                    data = parseJSON(data);
                } else if (type === "script" || !type && ct.indexOf("javascript") >= 0) {
                    $.globalEval(data);
                }
            }
            return data;
        };

        return deferred;
    }
};

/**
 * ajaxForm() provides a mechanism for fully automating form submission.
 *
 * The advantages of using this method instead of ajaxSubmit() are:
 *
 * 1: This method will include coordinates for <input type="image" /> elements (if the element
 *    is used to submit the form).
 * 2. This method will include the submit element's name/value data (for the element that was
 *    used to submit the form).
 * 3. This method binds the submit() method to the form for you.
 *
 * The options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely
 * passes the options argument along after properly binding events for submit elements and
 * the form itself.
 */
$.fn.ajaxForm = function(options) {
    options = options || {};
    options.delegation = options.delegation && $.isFunction($.fn.on);

    // in jQuery 1.3+ we can fix mistakes with the ready state
    if (!options.delegation && this.length === 0) {
        var o = { s: this.selector, c: this.context };
        if (!$.isReady && o.s) {
            log('DOM not ready, queuing ajaxForm');
            $(function() {
                $(o.s,o.c).ajaxForm(options);
            });
            return this;
        }
        // is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()
        log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));
        return this;
    }

    if ( options.delegation ) {
        $(document)
            .off('submit.form-plugin', this.selector, doAjaxSubmit)
            .off('click.form-plugin', this.selector, captureSubmittingElement)
            .on('submit.form-plugin', this.selector, options, doAjaxSubmit)
            .on('click.form-plugin', this.selector, options, captureSubmittingElement);
        return this;
    }

    return this.ajaxFormUnbind()
        .bind('submit.form-plugin', options, doAjaxSubmit)
        .bind('click.form-plugin', options, captureSubmittingElement);
};

// private event handlers
function doAjaxSubmit(e) {
    /*jshint validthis:true */
    var options = e.data;
    if (!e.isDefaultPrevented()) { // if event has been canceled, don't proceed
        e.preventDefault();
        $(this).ajaxSubmit(options);
    }
}

function captureSubmittingElement(e) {
    /*jshint validthis:true */
    var target = e.target;
    var $el = $(target);
    if (!($el.is("[type=submit],[type=image]"))) {
        // is this a child element of the submit el?  (ex: a span within a button)
        var t = $el.closest('[type=submit]');
        if (t.length === 0) {
            return;
        }
        target = t[0];
    }
    var form = this;
    form.clk = target;
    if (target.type == 'image') {
        if (e.offsetX !== undefined) {
            form.clk_x = e.offsetX;
            form.clk_y = e.offsetY;
        } else if (typeof $.fn.offset == 'function') {
            var offset = $el.offset();
            form.clk_x = e.pageX - offset.left;
            form.clk_y = e.pageY - offset.top;
        } else {
            form.clk_x = e.pageX - target.offsetLeft;
            form.clk_y = e.pageY - target.offsetTop;
        }
    }
    // clear form vars
    setTimeout(function() { form.clk = form.clk_x = form.clk_y = null; }, 100);
}


// ajaxFormUnbind unbinds the event handlers that were bound by ajaxForm
$.fn.ajaxFormUnbind = function() {
    return this.unbind('submit.form-plugin click.form-plugin');
};

/**
 * formToArray() gathers form element data into an array of objects that can
 * be passed to any of the following ajax functions: $.get, $.post, or load.
 * Each object in the array has both a 'name' and 'value' property.  An example of
 * an array for a simple login form might be:
 *
 * [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]
 *
 * It is this array that is passed to pre-submit callback functions provided to the
 * ajaxSubmit() and ajaxForm() methods.
 */
$.fn.formToArray = function(semantic, elements) {
    var a = [];
    if (this.length === 0) {
        return a;
    }

    var form = this[0];
    var els = semantic ? form.getElementsByTagName('*') : form.elements;
    if (!els) {
        return a;
    }

    var i,j,n,v,el,max,jmax;
    for(i=0, max=els.length; i < max; i++) {
        el = els[i];
        n = el.name;
        if (!n) {
            continue;
        }

        if (semantic && form.clk && el.type == "image") {
            // handle image inputs on the fly when semantic == true
            if(!el.disabled && form.clk == el) {
                a.push({name: n, value: $(el).val(), type: el.type });
                a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
            }
            continue;
        }

        v = $.fieldValue(el, true);
        if (v && v.constructor == Array) {
            if (elements)
                elements.push(el);
            for(j=0, jmax=v.length; j < jmax; j++) {
                a.push({name: n, value: v[j]});
            }
        }
        else if (feature.fileapi && el.type == 'file' && !el.disabled) {
            if (elements)
                elements.push(el);
            var files = el.files;
            if (files.length) {
                for (j=0; j < files.length; j++) {
                    a.push({name: n, value: files[j], type: el.type});
                }
            }
            else {
                // #180
                a.push({ name: n, value: '', type: el.type });
            }
        }
        else if (v !== null && typeof v != 'undefined') {
            if (elements)
                elements.push(el);
            a.push({name: n, value: v, type: el.type, required: el.required});
        }
    }

    if (!semantic && form.clk) {
        // input type=='image' are not found in elements array! handle it here
        var $input = $(form.clk), input = $input[0];
        n = input.name;
        if (n && !input.disabled && input.type == 'image') {
            a.push({name: n, value: $input.val()});
            a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
        }
    }
    return a;
};

/**
 * Serializes form data into a 'submittable' string. This method will return a string
 * in the format: name1=value1&amp;name2=value2
 */
$.fn.formSerialize = function(semantic) {
    //hand off to jQuery.param for proper encoding
    return $.param(this.formToArray(semantic));
};

/**
 * Serializes all field elements in the jQuery object into a query string.
 * This method will return a string in the format: name1=value1&amp;name2=value2
 */
$.fn.fieldSerialize = function(successful) {
    var a = [];
    this.each(function() {
        var n = this.name;
        if (!n) {
            return;
        }
        var v = $.fieldValue(this, successful);
        if (v && v.constructor == Array) {
            for (var i=0,max=v.length; i < max; i++) {
                a.push({name: n, value: v[i]});
            }
        }
        else if (v !== null && typeof v != 'undefined') {
            a.push({name: this.name, value: v});
        }
    });
    //hand off to jQuery.param for proper encoding
    return $.param(a);
};

/**
 * Returns the value(s) of the element in the matched set.  For example, consider the following form:
 *
 *  <form><fieldset>
 *      <input name="A" type="text" />
 *      <input name="A" type="text" />
 *      <input name="B" type="checkbox" value="B1" />
 *      <input name="B" type="checkbox" value="B2"/>
 *      <input name="C" type="radio" value="C1" />
 *      <input name="C" type="radio" value="C2" />
 *  </fieldset></form>
 *
 *  var v = $('input[type=text]').fieldValue();
 *  // if no values are entered into the text inputs
 *  v == ['','']
 *  // if values entered into the text inputs are 'foo' and 'bar'
 *  v == ['foo','bar']
 *
 *  var v = $('input[type=checkbox]').fieldValue();
 *  // if neither checkbox is checked
 *  v === undefined
 *  // if both checkboxes are checked
 *  v == ['B1', 'B2']
 *
 *  var v = $('input[type=radio]').fieldValue();
 *  // if neither radio is checked
 *  v === undefined
 *  // if first radio is checked
 *  v == ['C1']
 *
 * The successful argument controls whether or not the field element must be 'successful'
 * (per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).
 * The default value of the successful argument is true.  If this value is false the value(s)
 * for each element is returned.
 *
 * Note: This method *always* returns an array.  If no valid value can be determined the
 *    array will be empty, otherwise it will contain one or more values.
 */
$.fn.fieldValue = function(successful) {
    for (var val=[], i=0, max=this.length; i < max; i++) {
        var el = this[i];
        var v = $.fieldValue(el, successful);
        if (v === null || typeof v == 'undefined' || (v.constructor == Array && !v.length)) {
            continue;
        }
        if (v.constructor == Array)
            $.merge(val, v);
        else
            val.push(v);
    }
    return val;
};

/**
 * Returns the value of the field element.
 */
$.fieldValue = function(el, successful) {
    var n = el.name, t = el.type, tag = el.tagName.toLowerCase();
    if (successful === undefined) {
        successful = true;
    }

    if (successful && (!n || el.disabled || t == 'reset' || t == 'button' ||
        (t == 'checkbox' || t == 'radio') && !el.checked ||
        (t == 'submit' || t == 'image') && el.form && el.form.clk != el ||
        tag == 'select' && el.selectedIndex == -1)) {
            return null;
    }

    if (tag == 'select') {
        var index = el.selectedIndex;
        if (index < 0) {
            return null;
        }
        var a = [], ops = el.options;
        var one = (t == 'select-one');
        var max = (one ? index+1 : ops.length);
        for(var i=(one ? index : 0); i < max; i++) {
            var op = ops[i];
            if (op.selected) {
                var v = op.value;
                if (!v) { // extra pain for IE...
                    v = (op.attributes && op.attributes['value'] && !(op.attributes['value'].specified)) ? op.text : op.value;
                }
                if (one) {
                    return v;
                }
                a.push(v);
            }
        }
        return a;
    }
    return $(el).val();
};

/**
 * Clears the form data.  Takes the following actions on the form's input fields:
 *  - input text fields will have their 'value' property set to the empty string
 *  - select elements will have their 'selectedIndex' property set to -1
 *  - checkbox and radio inputs will have their 'checked' property set to false
 *  - inputs of type submit, button, reset, and hidden will *not* be effected
 *  - button elements will *not* be effected
 */
$.fn.clearForm = function(includeHidden) {
    return this.each(function() {
        $('input,select,textarea', this).clearFields(includeHidden);
    });
};

/**
 * Clears the selected form elements.
 */
$.fn.clearFields = $.fn.clearInputs = function(includeHidden) {
    var re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; // 'hidden' is not in this list
    return this.each(function() {
        var t = this.type, tag = this.tagName.toLowerCase();
        if (re.test(t) || tag == 'textarea') {
            this.value = '';
        }
        else if (t == 'checkbox' || t == 'radio') {
            this.checked = false;
        }
        else if (tag == 'select') {
            this.selectedIndex = -1;
        }
		else if (t == "file") {
			if (/MSIE/.test(navigator.userAgent)) {
				$(this).replaceWith($(this).clone());
			} else {
				$(this).val('');
			}
		}
        else if (includeHidden) {
            // includeHidden can be the value true, or it can be a selector string
            // indicating a special test; for example:
            //  $('#myForm').clearForm('.special:hidden')
            // the above would clean hidden inputs that have the class of 'special'
            if ( (includeHidden === true && /hidden/.test(t)) ||
                 (typeof includeHidden == 'string' && $(this).is(includeHidden)) )
                this.value = '';
        }
    });
};

/**
 * Resets the form data.  Causes all form elements to be reset to their original value.
 */
$.fn.resetForm = function() {
    return this.each(function() {
        // guard against an input with the name of 'reset'
        // note that IE reports the reset function as an 'object'
        if (typeof this.reset == 'function' || (typeof this.reset == 'object' && !this.reset.nodeType)) {
            this.reset();
        }
    });
};

/**
 * Enables or disables any matching elements.
 */
$.fn.enable = function(b) {
    if (b === undefined) {
        b = true;
    }
    return this.each(function() {
        this.disabled = !b;
    });
};

/**
 * Checks/unchecks any matching checkboxes or radio buttons and
 * selects/deselects and matching option elements.
 */
$.fn.selected = function(select) {
    if (select === undefined) {
        select = true;
    }
    return this.each(function() {
        var t = this.type;
        if (t == 'checkbox' || t == 'radio') {
            this.checked = select;
        }
        else if (this.tagName.toLowerCase() == 'option') {
            var $sel = $(this).parent('select');
            if (select && $sel[0] && $sel[0].type == 'select-one') {
                // deselect all other options
                $sel.find('option').selected(false);
            }
            this.selected = select;
        }
    });
};

// expose debug var
$.fn.ajaxSubmit.debug = false;

// helper fn for console logging
function log() {
    if (!$.fn.ajaxSubmit.debug)
        return;
    var msg = '[jquery.form] ' + Array.prototype.join.call(arguments,'');
    if (window.console && window.console.log) {
        window.console.log(msg);
    }
    else if (window.opera && window.opera.postError) {
        window.opera.postError(msg);
    }
}

})(jQuery);
/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)
* Licensed under the MIT License (LICENSE.txt).
*
* Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
* Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
* Thanks to: Seamus Leahy for adding deltaX and deltaY
*
* Version: 3.0.6
* 
* Requires: 1.2.2+
*/
(function (a) { function d(b) { var c = b || window.event, d = [].slice.call(arguments, 1), e = 0, f = !0, g = 0, h = 0; return b = a.event.fix(c), b.type = "mousewheel", c.wheelDelta && (e = c.wheelDelta / 120), c.detail && (e = -c.detail / 3), h = e, c.axis !== undefined && c.axis === c.HORIZONTAL_AXIS && (h = 0, g = -1 * e), c.wheelDeltaY !== undefined && (h = c.wheelDeltaY / 120), c.wheelDeltaX !== undefined && (g = -1 * c.wheelDeltaX / 120), d.unshift(b, e, g, h), (a.event.dispatch || a.event.handle).apply(this, d) } var b = ["DOMMouseScroll", "mousewheel"]; if (a.event.fixHooks) for (var c = b.length; c; ) a.event.fixHooks[b[--c]] = a.event.mouseHooks; a.event.special.mousewheel = { setup: function () { if (this.addEventListener) for (var a = b.length; a; ) this.addEventListener(b[--a], d, !1); else this.onmousewheel = d }, teardown: function () { if (this.removeEventListener) for (var a = b.length; a; ) this.removeEventListener(b[--a], d, !1); else this.onmousewheel = null } }, a.fn.extend({ mousewheel: function (a) { return a ? this.bind("mousewheel", a) : this.trigger("mousewheel") }, unmousewheel: function (a) { return this.unbind("mousewheel", a) } }) })(jQuery);
/* jshint forin:true, noarg:true, noempty:true, eqeqeq:true, boss:true, undef:true, curly:true, browser:true, jquery:true */
/*
 * jQuery MultiSelect UI Widget Filtering Plugin 1.4
 * Copyright (c) 2011 Eric Hynds
 *
 * http://www.erichynds.com/jquery/jquery-ui-multiselect-widget/
 *
 * Depends:
 *   - jQuery UI MultiSelect widget
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
*/
(function($){
	var rEscape = /[\-\[\]{}()*+?.,\\\^$|#\s]/g;
	
	$.widget("ech.multiselectfilter", {
		
		options: {
			label: "Filter:",
			width: null, /* override default width set in css file (px). null will inherit */
			placeholder: "Enter keywords",
			autoReset: false
		},
		
		_create: function(){
			var self = this,
				opts = this.options,
				instance = (this.instance = $(this.element).data("multiselect")),
				
				// store header; add filter class so the close/check all/uncheck all links can be positioned correctly
				header = (this.header = instance.menu.find(".ui-multiselect-header").addClass("ui-multiselect-hasfilter")),
				
				// wrapper elem
				wrapper = (this.wrapper = $('<div class="ui-multiselect-filter">'+(opts.label.length ? opts.label : '')+'<input placeholder="'+opts.placeholder+'" type="search"' + (/\d/.test(opts.width) ? 'style="width:'+opts.width+'px"' : '') + ' /></div>').prependTo( this.header ));

			// reference to the actual inputs
			this.inputs = instance.menu.find('input[type="checkbox"], input[type="radio"]');
			
			// build the input box
			this.input = wrapper
			.find("input")
			.bind({
				keydown: function( e ){
					// prevent the enter key from submitting the form / closing the widget
					if( e.which === 13 ){
						e.preventDefault();
					}
				},
				keyup: $.proxy(self._handler, self),
				click: $.proxy(self._handler, self)
			});
			
			// cache input values for searching
			this.updateCache();
			
			// rewrite internal _toggleChecked fn so that when checkAll/uncheckAll is fired,
			// only the currently filtered elements are checked
			instance._toggleChecked = function(flag, group){
				var $inputs = (group && group.length) ?
						group :
						this.labels.find('input'),
					
					_self = this,

					// do not include hidden elems if the menu isn't open.
					selector = self.instance._isOpen ?
						":disabled, :hidden" :
						":disabled";

				$inputs = $inputs.not( selector ).each(this._toggleState('checked', flag));
				
				// update text
				this.update();
				
				// figure out which option tags need to be selected
				var values = $inputs.map(function(){
					return this.value;
				}).get();
				
				// select option tags
				this.element
					.find('option')
					.filter(function(){
						if( !this.disabled && $.inArray(this.value, values) > -1 ){
							_self._toggleState('selected', flag).call( this );
						}
					});
			};
			
			// rebuild cache when multiselect is updated
			var doc = $(document).bind("multiselectrefresh", function(){
				self.updateCache();
				self._handler();
			});

			// automatically reset the widget on close?
			if(this.options.autoReset) {
				doc.bind("multiselectclose", $.proxy(this._reset, this));
			}
		},
		
		// thx for the logic here ben alman
		_handler: function( e ){
			var term = $.trim( this.input[0].value.toLowerCase() ),
			
				// speed up lookups
				rows = this.rows, inputs = this.inputs, cache = this.cache;
			
			if( !term ){
				rows.show();
			} else {
				rows.hide();
				
				var regex = new RegExp(term.replace(rEscape, "\\$&"), 'gi');
				
				this._trigger( "filter", e, $.map(cache, function(v, i){
					if( v.search(regex) !== -1 ){
						rows.eq(i).show();
						return inputs.get(i);
					}
					
					return null;
				}));
			}

			// show/hide optgroups
			this.instance.menu.find(".ui-multiselect-optgroup-label").each(function(){
				var $this = $(this);
				var isVisible = $this.nextUntil('.ui-multiselect-optgroup-label').filter(function(){
				  return $.css(this, "display") !== 'none';
				}).length;
				
				$this[ isVisible ? 'show' : 'hide' ]();
			});
		},

		_reset: function() {
			this.input.val('').trigger('keyup');
		},
		
		updateCache: function(){
			// each list item
			this.rows = this.instance.menu.find(".ui-multiselect-checkboxes li:not(.ui-multiselect-optgroup-label)");
			
			// cache
			this.cache = this.element.children().map(function(){
				var self = $(this);
				
				// account for optgroups
				if( this.tagName.toLowerCase() === "optgroup" ){
					self = self.children();
				}
				
				return self.map(function(){
					return this.innerHTML.toLowerCase();
				}).get();
			}).get();
		},
		
		widget: function(){
			return this.wrapper;
		},
		
		destroy: function(){
			$.Widget.prototype.destroy.call( this );
			this.input.val('').trigger("keyup");
			this.wrapper.remove();
		}
	});
})(jQuery);
/* jshint forin:true, noarg:true, noempty:true, eqeqeq:true, boss:true, undef:true, curly:true, browser:true, jquery:true */
/*
* jQuery MultiSelect UI Widget 1.12
* Copyright (c) 2011 Eric Hynds
*
* http://www.erichynds.com/jquery/jquery-ui-multiselect-widget/
*
* Depends:
*   - jQuery 1.4.2+
*   - jQuery UI 1.8 widget factory
*
* Optional:
*   - jQuery UI effects
*   - jQuery UI position utility
*
* Dual licensed under the MIT and GPL licenses:
*   http://www.opensource.org/licenses/mit-license.php
*   http://www.gnu.org/licenses/gpl.html
*
*/
(function ($, undefined) {

	var multiselectID = 0;

	$.widget("ech.multiselect", {

		// default options
		options: {
			header: true,
			height: 175,
			minWidth: 225,
			classes: '',
			checkAllText: 'Check all',
			uncheckAllText: 'Uncheck all',
			noneSelectedText: '',
			selectedText: '# selected',
			selectedList: 0,
			show: '',
			hide: '',
			autoOpen: false,
			multiple: true,
			position: {}
		},

		_create: function () {
			var el = this.element.hide(),
			o = this.options;

			this.speed = $.fx.speeds._default; // default speed for effects
			this._isOpen = false; // assume no

			var 
			button = (this.button = $('<div><img class="g-bg ui-icon-arrow" src="' + ContentPath + '/img/newImage/1px.png" /></div>'))
				.addClass('ui-multiselect ui-widget ui-state-default ui-corner-all')
				.addClass(o.classes)
				.attr({ 'title': el.attr('title'), 'aria-haspopup': true, 'tabIndex': el.attr('tabIndex') })
				.insertAfter(el),

			buttonlabel = (this.buttonlabel = $('<div class="ui-multiselect-text" />'))
				.html(o.noneSelectedText)
				.appendTo(button),

			menu = (this.menu = $('<div />'))
				.addClass('ui-multiselect-menu ui-widget ui-widget-content ui-corner-all')
				.addClass(o.classes)
				.appendTo(document.body),

			header = (this.header = $('<div />'))
				.addClass('ui-widget-header ui-corner-all ui-multiselect-header ui-helper-clearfix')
				.appendTo(menu),

			headerLinkContainer = (this.headerLinkContainer = $('<ul />'))
				.addClass('ui-helper-reset')
				.html(function () {
					if (o.header === true) {
						return '<li><a class="ui-multiselect-all" href="#"><span class="ui-icon ui-icon-check"></span><span>' + o.checkAllText + '</span></a></li><li><a class="ui-multiselect-none" href="#"><span class="ui-icon ui-icon-closethick"></span><span>' + o.uncheckAllText + '</span></a></li>';
					} else if (typeof o.header === "string") {
						return '<li>' + o.header + '</li>';
					} else {
						return '';
					}
				})
				.append('<li class="ui-multiselect-close"><a href="#" class="ui-multiselect-close"><span class="ui-icon ui-icon-circle-close"></span></a></li>')
				.appendTo(header),

			checkboxContainer = (this.checkboxContainer = $('<ul />'))
				.addClass('ui-multiselect-checkboxes ui-helper-reset')
				.appendTo(menu);

			// perform event bindings
			this._bindEvents();

			// build menu
			this.refresh(true);

			// some addl. logic for single selects
			if (!o.multiple) {
				menu.addClass('ui-multiselect-single');
			}
		},

		_init: function () {
			if (this.options.header === false) {
				this.header.hide();
			}
			if (!this.options.multiple) {
				this.headerLinkContainer.find('.ui-multiselect-all, .ui-multiselect-none').hide();
			}
			if (this.options.autoOpen) {
				this.open();
			}
			if (this.element.is(':disabled')) {
				this.disable();
			}
		},

		refresh: function (init) {
			var el = this.element,
			o = this.options,
			menu = this.menu,
			checkboxContainer = this.checkboxContainer,
			optgroups = [],
			html = [],
			id = el.attr('id') || multiselectID++; // unique ID for the label & option tags

			// build items
			el.find('option').each(function (i) {
				var $this = $(this),
				parent = this.parentNode,
				title = this.innerHTML,
				description = this.title,
				value = this.value,
				inputID = this.id || 'ui-multiselect-' + id + '-option-' + i,
				isDisabled = this.disabled,
				isSelected = this.selected,
				labelClasses = ['ui-multiselect-label', 'ui-corner-all'],
				optLabel;

				// is this an optgroup?
				if (parent.tagName.toLowerCase() === 'optgroup') {
					optLabel = parent.getAttribute('label');

					// has this optgroup been added already?
					if ($.inArray(optLabel, optgroups) === -1) {
						html.push('<li class="ui-multiselect-optgroup-label"><a href="#">' + optLabel + '</a></li>');
						optgroups.push(optLabel);
					}
				}

				if (isDisabled) {
					labelClasses.push('ui-state-disabled');
				}

				// browsers automatically select the first option
				// by default with single selects
				if (isSelected && !o.multiple) {
					labelClasses.push('ui-state-active');
				}

				html.push('<li class="' + (isDisabled ? 'ui-multiselect-disabled' : '') + '">');

				// create the label
				html.push('<label for="' + inputID + '" title="' + description + '" class="' + labelClasses.join(' ') + '">');
				html.push('<input id="' + inputID + '" name="multiselect_' + id + '"  class="ui-multiselect-input" type="' + (o.multiple ? "checkbox" : "radio") + '" value="' + value + '" title="' + title + '"');

				// pre-selected?
				if (isSelected) {
					html.push(' checked="checked"');
					html.push(' aria-selected="true"');
				}

				// disabled?
				if (isDisabled) {
					html.push(' disabled="disabled"');
					html.push(' aria-disabled="true"');
				}

				// add the title and close everything off
				html.push(' /><span class="g-iblock ui-multiselect-item-text">' + title + '</span></label></li>');
			});

			// insert into the DOM
			checkboxContainer.html(html.join(''));

			//custom checkbox
			checkboxContainer.find(".ui-multiselect-input").checkbox();

			// cache some moar useful elements
			this.labels = menu.find('label');

			// set widths
			this._setButtonWidth();
			this._setMenuWidth();

			// remember default value
			this.button[0].defaultValue = this.update();

			// broadcast refresh event; useful for widgets
			if (!init) {
				this._trigger('refresh');
			}
		},

		// updates the button text. call refresh() to rebuild
		update: function () {
			var o = this.options,
			$inputs = this.labels.find('input'),
			$checked = $inputs.filter('[checked]'),
			numChecked = $checked.length,
			value;

			function wrapper(v, cl) {
				return "<span class='" + cl + "'>" + v + "</span>";
			}

			if (numChecked === 0) {
				value = wrapper(o.noneSelectedText, "g-iblock ui-multiselect-txtdef");
			} else {
				if ($.isFunction(o.selectedText)) {
					value = o.selectedText.call(this, numChecked, $inputs.length, $checked.get());
				} else if (/\d/.test(o.selectedList) && o.selectedList > 0 && numChecked <= o.selectedList) {
					value = $checked.map(function () {
						return wrapper($(this).closest(".ui-multiselect-label").find(".ui-multiselect-item-text").text(), "g-iblock g-bold ui-multiselect-value");
					}).get().join('');
				} else {
					value = wrapper(o.selectedText.replace('#', numChecked).replace('#', $inputs.length), "g-iblock ui-multiselect-txtdef");
				}
			}

			this.buttonlabel.html(value);

			// Fix bug with position menu
			var button = this.button,
				top = button.offset().top,
				scrollTop = $(document).scrollTop(),
				newTopPosition = button.closest(".js-popup-bd").length ? ((top + button.outerHeight()) - scrollTop) : (top + button.outerHeight());
			this.menu.css('top', newTopPosition);

			return value;
		},

		// binds events
		_bindEvents: function () {
			var self = this, button = this.button;

			function clickHandler() {
				self[self._isOpen ? 'close' : 'open']();
				return false;
			}

			// webkit doesn't like it when you click on the span :(
			button
			.find('span')
			.bind('click.multiselect', clickHandler);

			// button events
			button.bind({
				click: clickHandler,
				keypress: function (e) {
					switch (e.which) {
						case 27: // esc
						case 38: // up
						case 37: // left
							self.close();
							break;
						case 39: // right
						case 40: // down
							self.open();
							break;
					}
				},
				mouseenter: function () {
					if (!button.hasClass('ui-state-disabled')) {
						$(this).addClass('ui-state-hover');
					}
				},
				mouseleave: function () {
					$(this).removeClass('ui-state-hover');
				},
				focus: function () {
					if (!button.hasClass('ui-state-disabled')) {
						$(this).addClass('ui-state-focus');
					}
				},
				blur: function () {
					$(this).removeClass('ui-state-focus');
				}
			});

			// header links
			this.header
			.delegate('a', 'click.multiselect', function (e) {
				// close link
				if ($(this).hasClass('ui-multiselect-close')) {
					self.close();

					// check all / uncheck all
				} else {
					self[$(this).hasClass('ui-multiselect-all') ? 'checkAll' : 'uncheckAll']();
				}

				e.preventDefault();
			});

			// optgroup label toggle support
			this.menu
			.delegate('li.ui-multiselect-optgroup-label a', 'click.multiselect', function (e) {
				e.preventDefault();

				var $this = $(this),
					$inputs = $this.parent().nextUntil('li.ui-multiselect-optgroup-label').find('input:visible:not(:disabled)'),
				    nodes = $inputs.get(),
				    label = $this.parent().text();

				// trigger event and bail if the return is false
				if (self._trigger('beforeoptgrouptoggle', e, { inputs: nodes, label: label }) === false) {
					return;
				}

				// toggle inputs
				self._toggleChecked(
					$inputs.filter('[checked]').length !== $inputs.length,
					$inputs
				);

				self._trigger('optgrouptoggle', e, {
					inputs: nodes,
					label: label,
					checked: nodes[0].checked
				});
			})
			.delegate('label', 'mouseenter.multiselect', function () {
				if (!$(this).hasClass('ui-state-disabled')) {
					self.labels.removeClass('ui-state-hover');
					$(this).addClass('ui-state-hover').find('input').focus();
				}
			})
			.delegate('label', 'keydown.multiselect', function (e) {
				e.preventDefault();

				switch (e.which) {
					case 9: // tab
					case 27: // esc
						self.close();
						break;
					case 38: // up
					case 40: // down
					case 37: // left
					case 39: // right
						self._traverse(e.which, this);
						break;
					case 13: // enter
						$(this).find('input')[0].click();
						break;
				}
			})
			.delegate('input[type="checkbox"], input[type="radio"]', 'click.multiselect', function (e) {
				var $this = $(this),
					val = this.value,
					checked = this.checked,
					tags = self.element.find('option');

				// bail if this input is disabled or the event is cancelled
				if (this.disabled || self._trigger('click', e, { value: val, text: this.title, checked: checked }) === false) {
					e.preventDefault();
					return;
				}

				// make sure the input has focus. otherwise, the esc key
				// won't close the menu after clicking an item.
				$this.focus();

				// toggle aria state
				$this.attr('aria-selected', checked);

				// change state on the original option tags
				tags.each(function () {
					if (this.value === val) {
						this.selected = checked;
					} else if (!self.options.multiple) {
						this.selected = false;
					}
				});

				// some additional single select-specific logic
				if (!self.options.multiple) {
					self.labels.removeClass('ui-state-active');
					$this.closest('label').toggleClass('ui-state-active', checked);

					// close menu
					self.close();
				}

				// fire change on the select box
				self.element.trigger("change");

				// setTimeout is to fix multiselect issue #14 and #47. caused by jQuery issue #3827
				// http://bugs.jquery.com/ticket/3827 
				setTimeout($.proxy(self.update, self), 10);
			});

			// close each widget when clicking on any other element/anywhere else on the page
			$(document).bind('mousedown.multiselect', function (e) {
				if (self._isOpen && !$.contains(self.menu[0], e.target) && !$.contains(self.button[0], e.target) && e.target !== self.button[0]) {
					self.close();
				}
			});

			// deal with form resets.  the problem here is that buttons aren't
			// restored to their defaultValue prop on form reset, and the reset
			// handler fires before the form is actually reset.  delaying it a bit
			// gives the form inputs time to clear.
			$(this.element[0].form).bind('reset.multiselect', function () {
				setTimeout($.proxy(self.refresh, self), 10);
			});
		},

		// set button width
		_setButtonWidth: function () {
			var width = this.element.outerWidth(),
			o = this.options;

			if (/\d/.test(o.minWidth) && width < o.minWidth) {
				width = o.minWidth;
			}

			if (o.minWidth == "auto") {
				width = o.minWidth;
			}

			// set widths
			this.button.width(width);
		},

		// set menu width
		_setMenuWidth: function () {
			var m = this.menu,
			width = this.button.outerWidth() -
				parseInt(m.css('padding-left'), 10) -
				parseInt(m.css('padding-right'), 10) -
				parseInt(m.css('border-right-width'), 10) -
				parseInt(m.css('border-left-width'), 10);

			m.width(width || this.button.outerWidth());
		},

		// move up or down within the menu
		_traverse: function (which, start) {
			var $start = $(start),
			moveToLast = which === 38 || which === 37,

			// select the first li that isn't an optgroup label / disabled
			$next = $start.parent()[moveToLast ? 'prevAll' : 'nextAll']('li:not(.ui-multiselect-disabled, .ui-multiselect-optgroup-label)')[moveToLast ? 'last' : 'first']();

			// if at the first/last element
			if (!$next.length) {
				var $container = this.menu.find('ul').last();

				// move to the first/last
				this.menu.find('label')[moveToLast ? 'last' : 'first']().trigger('mouseover');

				// set scroll position
				$container.scrollTop(moveToLast ? $container.height() : 0);

			} else {
				$next.find('label').trigger('mouseover');
			}
		},

		// This is an internal function to toggle the checked property and
		// other related attributes of a checkbox.
		//
		// The context of this function should be a checkbox; do not proxy it.
		_toggleState: function (prop, flag) {
			return function () {
				if (!this.disabled) {
					this[prop] = flag;
				}

				if (flag) {
					this.setAttribute('aria-selected', true);
				} else {
					this.removeAttribute('aria-selected');
				}
			};
		},

		_toggleChecked: function (flag, group) {
			var $inputs = (group && group.length) ?
			group :
			this.labels.find('input'),

			self = this;

			// toggle state on inputs
			$inputs.each(this._toggleState('checked', flag));

			// give the first input focus
			$inputs.eq(0).focus();

			// update button text
			this.update();

			// gather an array of the values that actually changed
			var values = $inputs.map(function () {
				return this.value;
			}).get();

			// toggle state on original option tags
			this.element
			.find('option')
			.each(function () {
				if (!this.disabled && $.inArray(this.value, values) > -1) {
					self._toggleState('selected', flag).call(this);
				}
			});

			// trigger the change event on the select
			if ($inputs.length) {
				this.element.trigger("change");
			}
		},

		_toggleDisabled: function (flag) {
			this.button
			.attr({ 'disabled': flag, 'aria-disabled': flag })[flag ? 'addClass' : 'removeClass']('ui-state-disabled');

			this.menu
			.find('input')
			.attr({ 'disabled': flag, 'aria-disabled': flag })
			.parent()[flag ? 'addClass' : 'removeClass']('ui-state-disabled');

			this.element
			.attr({ 'disabled': flag, 'aria-disabled': flag });
		},

		// open the menu
		open: function (e) {
			var self = this,
			button = this.button,
			menu = this.menu,
			speed = this.speed,
			o = this.options,
			typePos = button.closest(".js-popup-bd").length ? "fixed" : "absolute",
			scrollTop = $(document).scrollTop();

			// bail if the multiselectopen event returns false, this widget is disabled, or is already open 
			if (this._trigger('beforeopen') === false || button.hasClass('ui-state-disabled') || this._isOpen) {
				return;
			}

			var $container = menu.find('ul').last(),
			effect = o.show,
			pos = button.offset();

			// figure out opening effects/speeds
			if ($.isArray(o.show)) {
				effect = o.show[0];
				speed = o.show[1] || self.speed;
			}

			// set the scroll of the checkbox container
			$container.scrollTop(0).height(o.height);

			var menuWidth = button.outerWidth() - parseInt(button.css("borderLeftWidth")) - parseInt(button.css("borderRightWidth"));
			menu.css({
				width: menuWidth,
				top: typePos == "fixed" ? ((pos.top + button.outerHeight()) - scrollTop) : (pos.top + button.outerHeight()),
				left: pos.left,
				position: typePos
			}).show(effect, speed);
			menu.find(".ui-multiselect-item-text").width(menuWidth - 42);

			// select the first option
			// triggering both mouseover and mouseover because 1.4.2+ has a bug where triggering mouseover
			// will actually trigger mouseenter.  the mouseenter trigger is there for when it's eventually fixed
			this.labels.eq(0).trigger('mouseover').trigger('mouseenter').find('input').trigger('focus');

			button.addClass('ui-state-active');
			this._isOpen = true;
			this._trigger('open');
		},

		// close the menu
		close: function () {
			if (this._trigger('beforeclose') === false) {
				return;
			}

			var o = this.options, effect = o.hide, speed = this.speed;

			// figure out opening effects/speeds
			if ($.isArray(o.hide)) {
				effect = o.hide[0];
				speed = o.hide[1] || this.speed;
			}

			this.menu.hide(effect, speed);
			this.button.removeClass('ui-state-active').trigger('blur').trigger('mouseleave');
			this._isOpen = false;
			this._trigger('close');
		},

		enable: function () {
			this._toggleDisabled(false);
		},

		disable: function () {
			this._toggleDisabled(true);
		},

		checkAll: function (e) {
			this._toggleChecked(true);
			this._trigger('checkAll');
		},

		uncheckAll: function () {
			this._toggleChecked(false);
			this._trigger('uncheckAll');
		},

		getChecked: function () {
			return this.menu.find('input').filter('[checked]');
		},

		destroy: function () {
			// remove classes + data
			$.Widget.prototype.destroy.call(this);

			this.button.remove();
			this.menu.remove();
			this.element.show();

			return this;
		},

		isOpen: function () {
			return this._isOpen;
		},

		widget: function () {
			return this.menu;
		},

		// react to option changes after initialization
		_setOption: function (key, value) {
			var menu = this.menu;

			switch (key) {
				case 'header':
					menu.find('div.ui-multiselect-header')[value ? 'show' : 'hide']();
					break;
				case 'checkAllText':
					menu.find('a.ui-multiselect-all span').eq(-1).text(value);
					break;
				case 'uncheckAllText':
					menu.find('a.ui-multiselect-none span').eq(-1).text(value);
					break;
				case 'height':
					menu.find('ul').last().height(parseInt(value, 10));
					break;
				case 'minWidth':
					this.options[key] = parseInt(value, 10);
					this._setButtonWidth();
					this._setMenuWidth();
					break;
				case 'selectedText':
				case 'selectedList':
				case 'noneSelectedText':
					this.options[key] = value; // these all needs to update immediately for the update() call
					this.update();
					break;
				case 'classes':
					menu.add(this.button).removeClass(this.options.classes).addClass(value);
					break;
			}

			$.Widget.prototype._setOption.apply(this, arguments);
		}
	});

})(jQuery);/*!
 * jQuery Templates Plugin 1.0.0pre
 * http://github.com/jquery/jquery-tmpl
 * Requires jQuery 1.4.2
 *
 * Copyright 2011, Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */
(function( jQuery, undefined ){
	var oldManip = jQuery.fn.domManip, tmplItmAtt = "_tmplitem", htmlExpr = /^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,
		newTmplItems = {}, wrappedItems = {}, appendToTmplItems, topTmplItem = { key: 0, data: {} }, itemKey = 0, cloneIndex = 0, stack = [];

	function newTmplItem( options, parentItem, fn, data ) {
		// Returns a template item data structure for a new rendered instance of a template (a 'template item').
		// The content field is a hierarchical array of strings and nested items (to be
		// removed and replaced by nodes field of dom elements, once inserted in DOM).
		var newItem = {
			data: data || (data === 0 || data === false) ? data : (parentItem ? parentItem.data : {}),
			_wrap: parentItem ? parentItem._wrap : null,
			tmpl: null,
			parent: parentItem || null,
			nodes: [],
			calls: tiCalls,
			nest: tiNest,
			wrap: tiWrap,
			html: tiHtml,
			update: tiUpdate
		};
		if ( options ) {
			jQuery.extend( newItem, options, { nodes: [], parent: parentItem });
		}
		if ( fn ) {
			// Build the hierarchical content to be used during insertion into DOM
			newItem.tmpl = fn;
			newItem._ctnt = newItem._ctnt || newItem.tmpl( jQuery, newItem );
			newItem.key = ++itemKey;
			// Keep track of new template item, until it is stored as jQuery Data on DOM element
			(stack.length ? wrappedItems : newTmplItems)[itemKey] = newItem;
		}
		return newItem;
	}

	// Override appendTo etc., in order to provide support for targeting multiple elements. (This code would disappear if integrated in jquery core).
	jQuery.each({
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var ret = [], insert = jQuery( selector ), elems, i, l, tmplItems,
				parent = this.length === 1 && this[0].parentNode;

			appendToTmplItems = newTmplItems || {};
			if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {
				insert[ original ]( this[0] );
				ret = this;
			} else {
				for ( i = 0, l = insert.length; i < l; i++ ) {
					cloneIndex = i;
					elems = (i > 0 ? this.clone(true) : this).get();
					jQuery( insert[i] )[ original ]( elems );
					ret = ret.concat( elems );
				}
				cloneIndex = 0;
				ret = this.pushStack( ret, name, insert.selector );
			}
			tmplItems = appendToTmplItems;
			appendToTmplItems = null;
			jQuery.tmpl.complete( tmplItems );
			return ret;
		};
	});

	jQuery.fn.extend({
		// Use first wrapped element as template markup.
		// Return wrapped set of template items, obtained by rendering template against data.
		tmpl: function( data, options, parentItem ) {
			return jQuery.tmpl( this[0], data, options, parentItem );
		},

		// Find which rendered template item the first wrapped DOM element belongs to
		tmplItem: function() {
			return jQuery.tmplItem( this[0] );
		},

		// Consider the first wrapped element as a template declaration, and get the compiled template or store it as a named template.
		template: function( name ) {
			return jQuery.template( name, this[0] );
		},

		domManip: function( args, table, callback, options ) {
			if ( args[0] && jQuery.isArray( args[0] )) {
				var dmArgs = jQuery.makeArray( arguments ), elems = args[0], elemsLength = elems.length, i = 0, tmplItem;
				while ( i < elemsLength && !(tmplItem = jQuery.data( elems[i++], "tmplItem" ))) {}
				if ( tmplItem && cloneIndex ) {
					dmArgs[2] = function( fragClone ) {
						// Handler called by oldManip when rendered template has been inserted into DOM.
						jQuery.tmpl.afterManip( this, fragClone, callback );
					};
				}
				oldManip.apply( this, dmArgs );
			} else {
				oldManip.apply( this, arguments );
			}
			cloneIndex = 0;
			if ( !appendToTmplItems ) {
				jQuery.tmpl.complete( newTmplItems );
			}
			return this;
		}
	});

	jQuery.extend({
		// Return wrapped set of template items, obtained by rendering template against data.
		tmpl: function( tmpl, data, options, parentItem ) {
			var ret, topLevel = !parentItem;
			if ( topLevel ) {
				// This is a top-level tmpl call (not from a nested template using {{tmpl}})
				parentItem = topTmplItem;
				tmpl = jQuery.template[tmpl] || jQuery.template( null, tmpl );
				wrappedItems = {}; // Any wrapped items will be rebuilt, since this is top level
			} else if ( !tmpl ) {
				// The template item is already associated with DOM - this is a refresh.
				// Re-evaluate rendered template for the parentItem
				tmpl = parentItem.tmpl;
				newTmplItems[parentItem.key] = parentItem;
				parentItem.nodes = [];
				if ( parentItem.wrapped ) {
					updateWrapped( parentItem, parentItem.wrapped );
				}
				// Rebuild, without creating a new template item
				return jQuery( build( parentItem, null, parentItem.tmpl( jQuery, parentItem ) ));
			}
			if ( !tmpl ) {
				return []; // Could throw...
			}
			if ( typeof data === "function" ) {
				data = data.call( parentItem || {} );
			}
			if ( options && options.wrapped ) {
				updateWrapped( options, options.wrapped );
			}
			ret = jQuery.isArray( data ) ?
				jQuery.map( data, function( dataItem ) {
					return dataItem ? newTmplItem( options, parentItem, tmpl, dataItem ) : null;
				}) :
				[ newTmplItem( options, parentItem, tmpl, data ) ];
			return topLevel ? jQuery( build( parentItem, null, ret ) ) : ret;
		},

		// Return rendered template item for an element.
		tmplItem: function( elem ) {
			var tmplItem;
			if ( elem instanceof jQuery ) {
				elem = elem[0];
			}
			while ( elem && elem.nodeType === 1 && !(tmplItem = jQuery.data( elem, "tmplItem" )) && (elem = elem.parentNode) ) {}
			return tmplItem || topTmplItem;
		},

		// Set:
		// Use $.template( name, tmpl ) to cache a named template,
		// where tmpl is a template string, a script element or a jQuery instance wrapping a script element, etc.
		// Use $( "selector" ).template( name ) to provide access by name to a script block template declaration.

		// Get:
		// Use $.template( name ) to access a cached template.
		// Also $( selectorToScriptBlock ).template(), or $.template( null, templateString )
		// will return the compiled template, without adding a name reference.
		// If templateString includes at least one HTML tag, $.template( templateString ) is equivalent
		// to $.template( null, templateString )
		template: function( name, tmpl ) {
			if (tmpl) {
				// Compile template and associate with name
				if ( typeof tmpl === "string" ) {
					// This is an HTML string being passed directly in.
					tmpl = buildTmplFn( tmpl );
				} else if ( tmpl instanceof jQuery ) {
					tmpl = tmpl[0] || {};
				}
				if ( tmpl.nodeType ) {
					// If this is a template block, use cached copy, or generate tmpl function and cache.
					tmpl = jQuery.data( tmpl, "tmpl" ) || jQuery.data( tmpl, "tmpl", buildTmplFn( tmpl.innerHTML ));
					// Issue: In IE, if the container element is not a script block, the innerHTML will remove quotes from attribute values whenever the value does not include white space.
					// This means that foo="${x}" will not work if the value of x includes white space: foo="${x}" -> foo=value of x.
					// To correct this, include space in tag: foo="${ x }" -> foo="value of x"
				}
				return typeof name === "string" ? (jQuery.template[name] = tmpl) : tmpl;
			}
			// Return named compiled template
			return name ? (typeof name !== "string" ? jQuery.template( null, name ):
				(jQuery.template[name] ||
					// If not in map, and not containing at least on HTML tag, treat as a selector.
					// (If integrated with core, use quickExpr.exec)
					jQuery.template( null, htmlExpr.test( name ) ? name : jQuery( name )))) : null;
		},

		encode: function( text ) {
			// Do HTML encoding replacing < > & and ' and " by corresponding entities.
			return ("" + text).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;");
		}
	});

	jQuery.extend( jQuery.tmpl, {
		tag: {
			"tmpl": {
				_default: { $2: "null" },
				open: "if($notnull_1){__=__.concat($item.nest($1,$2));}"
				// tmpl target parameter can be of type function, so use $1, not $1a (so not auto detection of functions)
				// This means that {{tmpl foo}} treats foo as a template (which IS a function).
				// Explicit parens can be used if foo is a function that returns a template: {{tmpl foo()}}.
			},
			"wrap": {
				_default: { $2: "null" },
				open: "$item.calls(__,$1,$2);__=[];",
				close: "call=$item.calls();__=call._.concat($item.wrap(call,__));"
			},
			"each": {
				_default: { $2: "$index, $value" },
				open: "if($notnull_1){$.each($1a,function($2){with(this){",
				close: "}});}"
			},
			"if": {
				open: "if(($notnull_1) && $1a){",
				close: "}"
			},
			"else": {
				_default: { $1: "true" },
				open: "}else if(($notnull_1) && $1a){"
			},
			"html": {
				// Unecoded expression evaluation.
				open: "if($notnull_1){__.push($1a);}"
			},
			"=": {
				// Encoded expression evaluation. Abbreviated form is ${}.
				_default: { $1: "$data" },
				open: "if($notnull_1){__.push($.encode($1a));}"
			},
			"!": {
				// Comment tag. Skipped by parser
				open: ""
			}
		},

		// This stub can be overridden, e.g. in jquery.tmplPlus for providing rendered events
		complete: function( items ) {
			newTmplItems = {};
		},

		// Call this from code which overrides domManip, or equivalent
		// Manage cloning/storing template items etc.
		afterManip: function afterManip( elem, fragClone, callback ) {
			// Provides cloned fragment ready for fixup prior to and after insertion into DOM
			var content = fragClone.nodeType === 11 ?
				jQuery.makeArray(fragClone.childNodes) :
				fragClone.nodeType === 1 ? [fragClone] : [];

			// Return fragment to original caller (e.g. append) for DOM insertion
			callback.call( elem, fragClone );

			// Fragment has been inserted:- Add inserted nodes to tmplItem data structure. Replace inserted element annotations by jQuery.data.
			storeTmplItems( content );
			cloneIndex++;
		}
	});

	//========================== Private helper functions, used by code above ==========================

	function build( tmplItem, nested, content ) {
		// Convert hierarchical content into flat string array
		// and finally return array of fragments ready for DOM insertion
		var frag, ret = content ? jQuery.map( content, function( item ) {
			return (typeof item === "string") ?
				// Insert template item annotations, to be converted to jQuery.data( "tmplItem" ) when elems are inserted into DOM.
				(tmplItem.key ? item.replace( /(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g, "$1 " + tmplItmAtt + "=\"" + tmplItem.key + "\" $2" ) : item) :
				// This is a child template item. Build nested template.
				build( item, tmplItem, item._ctnt );
		}) :
		// If content is not defined, insert tmplItem directly. Not a template item. May be a string, or a string array, e.g. from {{html $item.html()}}.
		tmplItem;
		if ( nested ) {
			return ret;
		}

		// top-level template
		ret = ret.join("");

		// Support templates which have initial or final text nodes, or consist only of text
		// Also support HTML entities within the HTML markup.
		ret.replace( /^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/, function( all, before, middle, after) {
			frag = jQuery( middle ).get();

			storeTmplItems( frag );
			if ( before ) {
				frag = unencode( before ).concat(frag);
			}
			if ( after ) {
				frag = frag.concat(unencode( after ));
			}
		});
		return frag ? frag : unencode( ret );
	}

	function unencode( text ) {
		// Use createElement, since createTextNode will not render HTML entities correctly
		var el = document.createElement( "div" );
		el.innerHTML = text;
		return jQuery.makeArray(el.childNodes);
	}

	// Generate a reusable function that will serve to render a template against data
	function buildTmplFn( markup ) {
		return new Function("jQuery","$item",
			// Use the variable __ to hold a string array while building the compiled template. (See https://github.com/jquery/jquery-tmpl/issues#issue/10).
			"var $=jQuery,call,__=[],$data=$item.data;" +

			// Introduce the data as local variables using with(){}
			"with($data){__.push('" +

			// Convert the template into pure JavaScript
			jQuery.trim(markup)
				.replace( /([\\'])/g, "\\$1" )
				.replace( /[\r\t\n]/g, " " )
				.replace( /\$\{([^\}]*)\}/g, "{{= $1}}" )
				.replace( /\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g,
				function( all, slash, type, fnargs, target, parens, args ) {
					var tag = jQuery.tmpl.tag[ type ], def, expr, exprAutoFnDetect;
					if ( !tag ) {
						throw "Unknown template tag: " + type;
					}
					def = tag._default || [];
					if ( parens && !/\w$/.test(target)) {
						target += parens;
						parens = "";
					}
					if ( target ) {
						target = unescape( target );
						args = args ? ("," + unescape( args ) + ")") : (parens ? ")" : "");
						// Support for target being things like a.toLowerCase();
						// In that case don't call with template item as 'this' pointer. Just evaluate...
						expr = parens ? (target.indexOf(".") > -1 ? target + unescape( parens ) : ("(" + target + ").call($item" + args)) : target;
						exprAutoFnDetect = parens ? expr : "(typeof(" + target + ")==='function'?(" + target + ").call($item):(" + target + "))";
					} else {
						exprAutoFnDetect = expr = def.$1 || "null";
					}
					fnargs = unescape( fnargs );
					return "');" +
						tag[ slash ? "close" : "open" ]
							.split( "$notnull_1" ).join( target ? "typeof(" + target + ")!=='undefined' && (" + target + ")!=null" : "true" )
							.split( "$1a" ).join( exprAutoFnDetect )
							.split( "$1" ).join( expr )
							.split( "$2" ).join( fnargs || def.$2 || "" ) +
						"__.push('";
				}) +
			"');}return __;"
		);
	}
	function updateWrapped( options, wrapped ) {
		// Build the wrapped content.
		options._wrap = build( options, true,
			// Suport imperative scenario in which options.wrapped can be set to a selector or an HTML string.
			jQuery.isArray( wrapped ) ? wrapped : [htmlExpr.test( wrapped ) ? wrapped : jQuery( wrapped ).html()]
		).join("");
	}

	function unescape( args ) {
		return args ? args.replace( /\\'/g, "'").replace(/\\\\/g, "\\" ) : null;
	}
	function outerHtml( elem ) {
		var div = document.createElement("div");
		div.appendChild( elem.cloneNode(true) );
		return div.innerHTML;
	}

	// Store template items in jQuery.data(), ensuring a unique tmplItem data data structure for each rendered template instance.
	function storeTmplItems( content ) {
		var keySuffix = "_" + cloneIndex, elem, elems, newClonedItems = {}, i, l, m;
		for ( i = 0, l = content.length; i < l; i++ ) {
			if ( (elem = content[i]).nodeType !== 1 ) {
				continue;
			}
			elems = elem.getElementsByTagName("*");
			for ( m = elems.length - 1; m >= 0; m-- ) {
				processItemKey( elems[m] );
			}
			processItemKey( elem );
		}
		function processItemKey( el ) {
			var pntKey, pntNode = el, pntItem, tmplItem, key;
			// Ensure that each rendered template inserted into the DOM has its own template item,
			if ( (key = el.getAttribute( tmplItmAtt ))) {
				while ( pntNode.parentNode && (pntNode = pntNode.parentNode).nodeType === 1 && !(pntKey = pntNode.getAttribute( tmplItmAtt ))) { }
				if ( pntKey !== key ) {
					// The next ancestor with a _tmplitem expando is on a different key than this one.
					// So this is a top-level element within this template item
					// Set pntNode to the key of the parentNode, or to 0 if pntNode.parentNode is null, or pntNode is a fragment.
					pntNode = pntNode.parentNode ? (pntNode.nodeType === 11 ? 0 : (pntNode.getAttribute( tmplItmAtt ) || 0)) : 0;
					if ( !(tmplItem = newTmplItems[key]) ) {
						// The item is for wrapped content, and was copied from the temporary parent wrappedItem.
						tmplItem = wrappedItems[key];
						tmplItem = newTmplItem( tmplItem, newTmplItems[pntNode]||wrappedItems[pntNode] );
						tmplItem.key = ++itemKey;
						newTmplItems[itemKey] = tmplItem;
					}
					if ( cloneIndex ) {
						cloneTmplItem( key );
					}
				}
				el.removeAttribute( tmplItmAtt );
			} else if ( cloneIndex && (tmplItem = jQuery.data( el, "tmplItem" )) ) {
				// This was a rendered element, cloned during append or appendTo etc.
				// TmplItem stored in jQuery data has already been cloned in cloneCopyEvent. We must replace it with a fresh cloned tmplItem.
				cloneTmplItem( tmplItem.key );
				newTmplItems[tmplItem.key] = tmplItem;
				pntNode = jQuery.data( el.parentNode, "tmplItem" );
				pntNode = pntNode ? pntNode.key : 0;
			}
			if ( tmplItem ) {
				pntItem = tmplItem;
				// Find the template item of the parent element.
				// (Using !=, not !==, since pntItem.key is number, and pntNode may be a string)
				while ( pntItem && pntItem.key != pntNode ) {
					// Add this element as a top-level node for this rendered template item, as well as for any
					// ancestor items between this item and the item of its parent element
					pntItem.nodes.push( el );
					pntItem = pntItem.parent;
				}
				// Delete content built during rendering - reduce API surface area and memory use, and avoid exposing of stale data after rendering...
				delete tmplItem._ctnt;
				delete tmplItem._wrap;
				// Store template item as jQuery data on the element
				jQuery.data( el, "tmplItem", tmplItem );
			}
			function cloneTmplItem( key ) {
				key = key + keySuffix;
				tmplItem = newClonedItems[key] =
					(newClonedItems[key] || newTmplItem( tmplItem, newTmplItems[tmplItem.parent.key + keySuffix] || tmplItem.parent ));
			}
		}
	}

	//---- Helper functions for template item ----

	function tiCalls( content, tmpl, data, options ) {
		if ( !content ) {
			return stack.pop();
		}
		stack.push({ _: content, tmpl: tmpl, item:this, data: data, options: options });
	}

	function tiNest( tmpl, data, options ) {
		// nested template, using {{tmpl}} tag
		return jQuery.tmpl( jQuery.template( tmpl ), data, options, this );
	}

	function tiWrap( call, wrapped ) {
		// nested template, using {{wrap}} tag
		var options = call.options || {};
		options.wrapped = wrapped;
		// Apply the template, which may incorporate wrapped content,
		return jQuery.tmpl( jQuery.template( call.tmpl ), call.data, options, call.item );
	}

	function tiHtml( filter, textOnly ) {
		var wrapped = this._wrap;
		return jQuery.map(
			jQuery( jQuery.isArray( wrapped ) ? wrapped.join("") : wrapped ).filter( filter || "*" ),
			function(e) {
				return textOnly ?
					e.innerText || e.textContent :
					e.outerHTML || outerHtml(e);
			});
	}

	function tiUpdate() {
		var coll = this.nodes;
		jQuery.tmpl( null, null, null, this).insertBefore( coll[0] );
		jQuery( coll ).remove();
	}
})( jQuery );
(function ($) {
	$.extend($.tmpl.tag, {
		"var": {
			open: "var $1;"
		}
	});
})(jQuery);
Logger = (function () {

	function isSimpleType(parameter) {
		if (typeof parameter != "object" && typeof parameter != "function") {
			return true;
		}
		return parameter instanceof String ||
			parameter instanceof Number ||
			parameter instanceof Boolean ||
			parameter instanceof Date ||
			parameter instanceof RegExp ||
			parameter === null;
	}

	function format(parameter) {
		if (isSimpleType(parameter) || typeof parameter == "function") {
			return String(parameter);
		}

		var brackets = parameter instanceof Array ? "[]" : "{}";
		var result = brackets[0], first = true;
		for (var property in parameter) {
			var value = parameter[property];
			if (isSimpleType(value)) {
				if (typeof value == "string" || value instanceof String) {
					value = "\"" + value.replace(/\"/g, "\\\"") + "\"";
				}
				result += (first ? "" : ",") + "\n\t" + property + ": " + value;
				first = false;
			} else {
				return String(parameter);
			}
		}
		return result + (first ? "" : "\n") + brackets[1];
	}

	function isDebugHost() {
		return /\.?localhost$/i.test(document.location.hostname);
	}

	var console = window.console;
	if (console != null && typeof console.log == "object" && Function.prototype.bind) {
		// Чудеса с консолью в IE
		console = {
			log: Function.prototype.bind.call(window.console.log, window.console),
			warn: typeof console.warn == "object" ? Function.prototype.bind.call(window.console.warn, window.console) : this.log
		};
	}

	var buffer = "";

	return {
		loggedComplexObjects: [],
		write: function (parameter) {
			if (!isSimpleType(parameter)) {
				this.loggedComplexObjects.push(parameter);
			}
			buffer += format(parameter);
			return this;
		},
		writeLine: function (parameter) {
			if (arguments.length > 0) {
				if (!isSimpleType(parameter)) {
					this.loggedComplexObjects.push(parameter);
				}
				buffer += format(parameter);
			}
			buffer += "\n";
			return this;
		},
		alert: function () {
			alert(buffer);
			buffer = "";
			return this;
		},
		toConsole: function (parameter) {
			if (arguments.length > 0) {
				this.write(parameter);
			}

			var canUseConsole = false;
			try {
				if (console != null && typeof console.log == "function") {
					console.log(buffer);
					canUseConsole = true;
				}
			} catch (e) {
				// Неважно
			}

			if (!canUseConsole) {
				alert("Can not use console. Log record requested to show:\n" + buffer);
			}

			buffer = "";
			return this;
		},
		clear: function () {
			buffer = "";
			return this;
		},
		warning: function (parameter) {
			if (arguments.length > 0) {
				if (!isSimpleType(parameter)) {
					this.loggedComplexObjects.push(parameter);
				}
				buffer += format(parameter);
			}

			if (this.debugMode == true || isDebugHost() && this.debugMode != false) {
				alert("WARNING:\n\n" + buffer);
			} else {
				console.warn(buffer);
			}

			buffer = "";
			return this;
		}
	};
})();/*
	Функция dumpObj показывает с помощью alert содержимое объекта, а также дописывает его к
	массиву dumpObj.dumpedObjects, где его можно посмотреть средствами браузера.
	Параметры:
		object - объект
		noAlert (булевский) - не показывать в alert, только дописать к массиву
*/

function dumpObj(object, noAlert) {
	dumpObj.dumpedObjects = dumpObj.dumpedObjects || [];
	dumpObj.dumpedObjects.push(object);
	
	if (noAlert) {
		return;
	}

	function linesCount(s) {
		var result = 0;
		for (var i = 0; i < s.length; i++) {
			if (s.charAt(i) == "\n") {
				result++;
			}
		}
		return result;
	}

	if (typeof object == "undefined") {
		alert("undefined");
		return;
	}
	if (object === null) {
		alert("null");
		return;
	}
	if (typeof object == "string" || object instanceof String) {
		alert("Type: string\n" + "Value: " + object);
		return;
	}

	var pageSize = navigator.userAgent.indexOf("MSIE") >= 0 ? 40 : 200;
	var type = object instanceof Array ? "array" : typeof object;
	var currentPage = "Type: " + type + "\n";
	try {
		currentPage += "toString() result: " + object.toString() + "\n\n";
	} catch (e) {
		// Такое бывает в IE
		currentPage += "toString() call failed: " + e + "\n\n";
	}

	var dump = [];
	try {
		for (var property in object) {
			var value;
			try {
				value = object[property];
			} catch (e) {
				// Такое бывает
				value = "Exception while accessing property " + property + ": " + e;
			}
			dump.push({ name: property, value: value, type: typeof value });
		}
	} catch (e) {
		// И такое бывает в IE
		currentPage += "Exception while trying to enumerate object properties: " + e + "\n";
	}

	try {
		dump.sort(function (a, b) {
			if (a.type == "function" && b.type != "function") return 1;
			if (a.type != "function" && b.type == "function") return -1;
			if (a.name > b.name) return 1;
			if (a.name < b.name) return -1;
			return 0;
		});
	} catch (e) {
		// Наверняка и такое бывает
		currentPage += "Exception while sorting: " + e + "\n";
	}


	if (dump.length == 0) {
		currentPage += "No properties defined on this object";
	}

	for (var i = 0; i < dump.length; i++) {
		var newLine = dump[i].name + ": " + dump[i].value + "\n";
		if (linesCount(newLine) + linesCount(currentPage) > pageSize && currentPage.length > 0) {
			if (i < dump.length - 1) {
				currentPage += "<more properties on next page>";
			}
			alert(currentPage);
			currentPage = "";
		}
		currentPage += newLine;
	}

	alert(currentPage);
}function getExtendPrototypeFunction(prototypeObject) {
	function isDefinePropertySupported() {
		if (typeof Object.defineProperty != "function") {
			return false;
		}
		var a = {};
		try {
			Object.defineProperty(a, "qwe", { value: 123 });
			return a.qwe === 123;
		} catch (exception) {
			return false;
		}
	}

	if (isDefinePropertySupported()) {
		return function (functionName, functionBody) {
			Object.defineProperty(prototypeObject, functionName, { enumerable: false, value: functionBody });
		};
	} else {
		return function (functionName, functionBody) {
			prototypeObject[functionName] = functionBody;
		};
	}
}/*
	Функция "глубокого сравнения" объектов. Позволяет определять, что объекты имеют одинаковые свойства
	с одинаковыми значениями, хотя и могут быть разными объектами.

	Опциональный третий аргумент - функция, принимающая два параметра и возвращающая true, если она
	считает их равными. Эта функция будет использоваться в дополнение к строгому равенству === при
	определении совпадения объектов и их свойств. Например, можно сравнивать объекты, считая пустую
	строку равной null.
*/

function areEqual(x, y, equalityComparer) {
	if (arguments.length != 2 && arguments.length != 3) {
		throw new Error("Invalid arguments");
	}

	if (x === y) {
		return true;
	}

	if (typeof equalityComparer == "function" && equalityComparer(x, y)) {
		return true;
	}

	if (!(x instanceof Object) || !(y instanceof Object)) {
		// Только объекты могут не совпадать строго и быть равными
		return false;
	}

	if (x.constructor !== y.constructor) {
		// Для равенства нужно, чтобы совпадали прототипы. Это сложно проверить явно.
		// Совпадение конструкторов почти всегда то же самое, что совпадение прототипов.
		return false;
	}

	// Ищем различия
	for (var p in x) {
		if (!x.hasOwnProperty(p)) {
			// Проверяем только собственные свойства
			continue;
		}

		if (!y.hasOwnProperty(p)) {
			// Свойство есть у x и отсутствует у y.
			return false;
		}

		// Рекурсивное сравнение
		if (!areEqual(x[p], y[p], equalityComparer)) {
			return false;
		}
	}

	for (p in y) {
		if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {
			// Свойство есть у y и отсутствует у x.
			return false;
		}
	}

	// Тест на равенство пройден
	return true;
}// Сделать из строки регулярное выражение, соответствующее этой строке
RegExp.quote = function (str) {
	return str.replace(/([.?*+^$[\]\\(){}|\-])/g, "\\$1");
};

(function (defineStringFunction) {
	if (typeof String.prototype.trim != "function") {
		defineStringFunction("trim", function () {
			return this.replace(/^\s+|\s+$/g, "");
		});
	}

	defineStringFunction("compress", function () {
		return this.trim().replace(/\s+/, " ");
	});

	defineStringFunction("startsWith", function (s) {
		if (typeof s != "string" && !(s instanceof String)) {
			throw new Error("Argument must be string");
		}
		return this.substr(0, s.length) == s;
	});

	defineStringFunction("endsWith", function (s) {
		if (typeof s != "string" && !(s instanceof String)) {
			throw new Error("Argument must be string");
		}
		var start = this.length - s.length;
		return start >= 0 && this.substring(start, s.length) == s;
	});

	defineStringFunction("replaceAll", function (searchValue, newValue) {
		var firstArgIsString = typeof searchValue == "string" || searchValue instanceof String;
		var secondArgIsString = typeof newValue == "string" || newValue instanceof String;
		if (!firstArgIsString || !secondArgIsString) {
			throw new Error("Both arguments must be strings");
		}

		var regex = new RegExp(RegExp.quote(searchValue), "g");
		return this.replace(regex, newValue);
	});
})(getExtendPrototypeFunction(String.prototype));
var arr = {
	any: function (array, predicate) {
		if (typeof predicate == "undefined") {
			return array.length > 0;
		}
		if (typeof predicate != "function") {
			throw new Error("Invalid argument");
		}
		for (var i = 0; i < array.length; i++) {
			if (predicate(array[i])) {
				return true;
			}
		}
		return false;
	},

	filter: function (array, predicate) {
		if (typeof predicate != "function") {
			throw new Error("Invalid argument");
		}
		var result = [];
		for (var i = 0; i < array.length; i++) {
			if (predicate(array[i])) {
				result.push(array[i]);
			}
		}
		return result;
	},

	first: function (array, predicate) {
		if (typeof predicate == "undefined") {
			if (array.length == 0) {
				return null;
			}
			return array[0];
		}
		if (typeof predicate != "function") {
			throw new Error("Invalid argument");
		}

		for (var i = 0; i < array.length; i++) {
			if (predicate(array[i])) {
				return array[i];
			}
		}
		return null;
	}
};
/*
Объект ActionsQueue представляет из себя очередь для действий, которые могут включать асинхронное выполнение.
По окончании выполнения действие должно вызвать метод runNext, чтобы следующее действие в очереди могло выполняться.

Пример:
queue.enqueue(function () {
	$.ajax({
		url: "/ajax",
		success: function (result) {
			$("#result").html(result);
		},
		complete: function (result) {
			queue.runNext();
		}
	});
});

Если произошло несколько таких вызовов, то очередной AJAX-запрос будет отправлен только тогда, когда будет завершена
обработка результатов предыдущего.

Метод enqueue ставит переданную функцию в очередь на выполнение. Когда до неё доходит очередь, она выполняется.
Метод runNext запускает очередную функцию из очереди.
*/

function ActionsQueue() {
	var queue = [];
	var actionIsRunning = false;

	this.enqueue = function (action) {
		if (typeof action != "function") {
			throw new Error("Function expected");
		}

		if (!actionIsRunning) {
			actionIsRunning = true;
			action();
		} else {
			queue.push(action);
		}
	};

	this.runNext = function () {
		if (queue.length == 0) {
			actionIsRunning = false;
		} else {
			(queue.shift())();
		}
	};
}/*
	Функция ищет имена свойств, которые есть у объекта, совпадающие с переданным именем с точностью до регистра.
	Если таких свойств у объекта нет, возвращает null.
	Если такое свойство одно, возвращает его имя.
	Если таких свойств несколько, возвращает массив их имён.
*/
function getPropertyNameCaseInsensitive(object, soughtForPropertyName) {
	var result = [];
	var lowerCaseSoughtForPropertyName = soughtForPropertyName.toLowerCase();

	for (var propertyName in object) {
		if (propertyName.toLowerCase() == lowerCaseSoughtForPropertyName) {
			result.push(propertyName);
		}
	}

	if (result.length == 0) {
		return null;
	}
	if (result.length == 1) {
		return result[0];
	}
	return result;
}// функция динамической загрузки скрипта
// может загружать (и по умолчанию загружает) скрипт асинхронно
// может принимать callback-функцию для выполнения по окончании загрузки скрипта
function loadScript(url, async, callback) {
	if (typeof(async) == "undefined") {
		async = true;
	}
	var script = document.createElement("script");
	script.type = "text/javascript";
	script.async = async;
	script.src = url;
	if (typeof(callback) == "function") {
		var done = false;
		script.onload = script.onreadystatechange = function () {
			if (!done && (!this.readyState || this.readyState == "loaded" || this.readyState == "complete")) {
				done = true;
				callback();
				script.onload = script.onreadystatechange = null;
			}
		};
	}
	var s = document.getElementsByTagName('script')[0];
	s.parentNode.insertBefore(script, s);
}/*
	Предоставляет возможность декларативной привязки обработчиков событий к элементам DOM
	Позволяет выполнять обработчики событий в контексте объекта, указанного при вызове функции startListening
*/

var app = app || {};
app.utils = app.utils || {};

app.utils.EventListener = function (events) {

	var eventsSplitter = /^([\w,]+)\s*(.*)$/;

	function createHandler(handler, context) {
		if (context) {
			return function () { handler.apply(context, arguments); };
		} else {
			return handler;
		}
	}

	this.handlers = {};

	// события, на которые надо подписываться с помощью bind на самом элементе
	this.eventsForBinding = ["change", "ajaxResponse", "beforeAjaxRequest"];

	// подписывается на события
	this.startListening = function (root, context) {
		this.handlers = {};
		for (var key in events) {
			var match = key.match(eventsSplitter);
			var eventNames = match[1], selector = (match.length > 1) ? match[2] : null;
			var handler = events[key];
			if (typeof(handler) == 'string') {
				handler = this[handler];
			}
			handler = createHandler(handler, context);
			this.handlers[key] = handler;
			var self = this;
			if (root) {
				$.each(eventNames.split(","), function (i, eventName) {
					if ($.inArray(eventName, self.eventsForBinding) >= 0) {
						root.find(selector).bind(eventName, handler);
					} else {
						root.on(eventName, selector, handler);
					}
				});
			} else {
				$.each(eventNames.split(","), function (i, eventName) {
					if ($.inArray(eventName, self.eventsForBinding) >= 0) {
						$(selector).bind(eventName, handler);
					} else {
						$(selector).live(eventName, handler);
					}
				});
			}
		}
	};

	// отписывается от событий
	this.stopListening = function (root) {
		for (var key in this.handlers) {
			var match = key.match(eventsSplitter);
			var eventNames = match[1], selector = match[2];
			var handler = this.handlers[key];
			var self = this;
			if (root) {
				$.each(eventNames.split(","), function (i, eventName) {
					if ($.inArray(eventName, self.eventsForBinding) >= 0) {
						root.find(selector).unbind(eventName, handler);
					} else {
						root.off(eventName, selector, handler);
					}
				});
			} else {
				$.each(eventNames.split(","), function (i, eventName) {
					if ($.inArray(eventName, self.eventsForBinding) >= 0) {
						$(selector).unbind(eventName, handler);
					} else {
						$(selector).die(eventName, handler);
					}
				});
			}
		}
	};
};/*
Класс Controller представляет базу для создания контроллеров в js.
Предоставляет удобный интерфейс
	для инициализации контроллера,
	для добавления статических и экземплярных свойств к контроллеру,
	для привязки элементов DOM к экземплярным свойствам контроллера,
	для привязки обработчиков событий к элементам DOM
*/

var app = app || {};
app.controllers = app.controllers || {};

(function (exports) {

	// инициализация контроллера
	// если определена функция init, она будет вызываться при создании экземпляра контроллера
	// element может поставляться снаружи или заполняться функцией init
	function initInstance() {
		var o = $(this);
		this.bind = function () { return o.bind.apply(o, arguments); };
		this.unbind = function () { return o.unbind.apply(o, arguments); };
		this.trigger = function () { return o.trigger.apply(o, arguments); };

		if (this.init) {
			this.init.apply(this, arguments);
		}
	}

	// добавление свойств и методов конструктору контроллера и его прототипу
	function appendProperties(c, includes, statics) {

		c.fn = c.prototype;
		c.fn._class = c;

		// вызов функции в контексте объекта
		c.proxy = c.fn.proxy = function (method) {
			var self = this;
			return (function () {
				if (typeof(method) == 'function') {
					return method.apply(self, arguments);
				}
			});
		};

		// добавление статических свойств
		c.extend = function (obj) {
			for (var key in obj) {
				this[key] = obj[key];
			}
		};

		// добавление экземплярных свойств 
		c.include = function (obj) {
			for (var key in obj) {
				this.fn[key] = obj[key];
			}
		};

		// получение объекта контроллера по DOM-элементу, с проверкой типа контроллера
		c.get = function (el) {
			var result = app.controllers.get(el);
			return (result instanceof c) ? result : undefined;
		};

		// привязка элементов DOM к экземплярным свойствам
		c.fn.refreshElements = function () {
			if (!this.element) {
				return;
			}
			for (var key in this.elements) {
				this[key] = this.$(this.elements[key]);
			}
		};

		// доступ к элементам DOM
		c.fn.$ = function (selector) {
			if (!this.element) {
				return;
			}
			return this.element.find(selector);
		};

		// инициализация класса контроллера
		if (includes) {
			c.include(includes);
			if (c.fn.events) {
				c.include(new app.utils.EventListener(c.fn.events));
			}
		}
		if (statics) {
			c.extend(statics);
		}
	}

	// содержит две функции для создания конструкторов контроллеров
	exports.create = {
		// контроллер, который ожидает jQuery-wrapped DOM-элемент в качестве первого параметра
		withRootElement: function (includes, statics) {
			var c = function (element) {
				this.element = element;
				this.element.data("controller", this);
				this.refreshElements();
				if (typeof(this.startListening) == "function") {
					this.startListening(this.element, this);
				}
				initInstance.apply(this, arguments);
			};
			appendProperties(c, includes, statics);
			return c;
		},

		// контроллер, который создает все необходимые DOM-элементы сам в функции init
		withoutRootElement: function (includes, statics) {
			var c = function () {
				initInstance.apply(this, arguments);
			};
			appendProperties(c, includes, statics);
			return c;
		}
	};

	// получение объекта контроллера по DOM-элементу
	exports.get = function (el) {
		return el.data("controller");
	};

})(app.controllers);var app = app || {};
app.utils = app.utils || {};

(function ($, exports) {

	var locale = $('.js-data .locale').text();
	$.datepicker.setDefaults($.datepicker.regional[locale]);

	$.extend(exports, {

		// текущий язык интерфейса
		locale: locale,

		// формат даты для текущего языка интерфейса
		localeDateFormat: $.datepicker.regional[locale].dateFormat,

		// подставляет текущий язык интерфейса в url
		localizeUrl: function (url) {
			return '/' + this.locale + url;
		},

		// форматирует дату в текущем языке интерфейса
		formatDate: function (value) {
			if (typeof (value) == 'string') {
				value = $.datepicker.parseDate($.datepicker.W3C, value);
			}
			return $.datepicker.formatDate(this.localeDateFormat, value);
		}
	});
})(jQuery, app.utils);
/*
	Добавляет свойство window.windowIsUnloading, равное true, когда пользователь уходит со страницы
*/


window.windowIsUnloading = false;
$(window).on("beforeunload", function () {
	window.windowIsUnloading = true;
});/*
	Функция getUniqueString возвращает новую строку при каждом вызове. После перехода на другую страницу
	возвращаемые строки по-прежнему уникальны. Одинаковые строки могут вернуться только при вызовах в двух
	окнах, выполненных в очень короткий интервал (миллисекунды).
*/

(function () {
	var used = {};

	window.getUniqueString = function () {
		var ticks = (new Date()).getTime();
		while (used[ticks.toString(36)]) {
			ticks++;
		}
		var result = ticks.toString(36);
		used[result] = true;
		return result;
	};
})();(function () {
	var regex = /^true$/i;

	window.parseBool = function (s) {
		return regex.test(String(s));
	};
})();/*
	Функции bindInputEvents и unbindInputEvents для jQuery-объектов. Привязывают или отвязывают
	события, которые могут свидетельствовать об изменении пользователем содержимого элемента ввода
	(в первую очередь input[text] и textarea, для остальных элементов достаточно просто change или click).
	Следует помнить, что возникновение одного из этих событий не означает, что значение было изменено.

	Параметры: вначале суффикс для событий (опционально), затем обработчик (опционально при отвязывании).
*/
(function ($) {
	var textInputEvents = ["input", "change", "paste", "keydown", "keyup"],
		wrapperPropertyName = "!bindInputEventsWrapper",
		enterKey = 13,
		notInputKeys = [
			9, // Tab
			16, // Shift
			17, // Ctrl
			18, // Alt
			19, // Pause
			20, // Caps Lock
			27, // Escape
			33, // Page Up
			34, // Page Down
			35, // End
			36, // Home
			37, // Left Arrow
			38, // Up Arrow
			39, // Right Arrow
			40, // Down Arrow
			44, // Print Screen
			45, // Insert
			91, 92, // Windows
			93, // Context Menu
			112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, // F1 - F12
			144, // Num Lock
			145 // Scroll Lock
		];

	function getEventsString(element, suffix) {
		var inputEvents;

		if (element.is("textarea")) {
			inputEvents = textInputEvents;
		} else if (element.is("select")) {
			inputEvents = ["change"];
		} else if (element.is("input")) {
			switch (element.attr("type")) {
				case "checkbox":
				case "radio":
					inputEvents = ["click"];
					break;
				case "file":
					inputEvents = ["change"];
					break;
				case "text":
				case "password":
					inputEvents = textInputEvents;
					break;
				default:
					inputEvents = textInputEvents.concat(["click"]);
					break;
			}
		} else {
			throw new Error("Unsupported element type: " + element.get(0).tagName);
		}

		if (suffix == null || suffix.length == 0) {
			return inputEvents.join(" ");
		}

		if (!/^[a-zA-Z0-9\-_]+$/.test(suffix)) {
			throw new Error("Invalid characters in suffix");
		}

		var result = inputEvents[0] + "." + suffix;
		for (var i = 1; i < inputEvents.length; i++) {
			result += " " + inputEvents[i] + "." + suffix;
		}

		return result;
	}

	function getWrapper(handler) {
		// Возможно, обёртка уже есть
		var wrapper = handler[wrapperPropertyName];

		if (wrapper == null) {
			// Если нет, создаём
			wrapper = function (e) {
				if (e.type == "keyup" || e.type == "keydown") {
					// Нажатие или отпускание клавиши
					if ($.inArray(e.which, notInputKeys) >= 0) {
						// Эти клавиши не меняют значения элемента ввода - не вызываем обработчик
						return true;
					}
					if (e.which == enterKey && !$(this).is("textarea")) {
						// Enter меняет значение только у <textarea> - не вызываем обработчик
						return true;
					}
				}

				// Значение могло измениться - вызываем обработчик
				return handler.apply(this, arguments);
			};
		}

		handler[wrapperPropertyName] = wrapper;
		return wrapper;
	}

	$.fn.bindInputEvents = function (a, b) {
		var suffix, handler;
		if ($.type(a) == "string" && typeof b == "function") {
			suffix = a;
			handler = b;
		} else if (typeof a == "function" && typeof b == "undefined") {
			suffix = null;
			handler = a;
		} else {
			throw new Error("Invalid arguments");
		}

		this.each(function () {
			var element = $(this);
			element.bind(getEventsString(element, suffix), getWrapper(handler));
		});

		return this;
	};

	$.fn.unbindInputEvents = function (a, b) {
		var suffix = null, handler = null;
		if ($.type(a) == "string") {
			suffix = a;
			if (typeof b == "function") {
				handler = b;
			} else if (typeof b != "undefined") {
				throw new Error("Invalid arguments");
			}
		} else if (typeof a == "function") {
			if (typeof b == "undefined") {
				handler = a;
			} else {
				throw new Error("Invalid arguments");
			}
		} else if (typeof a != "undefined" || typeof b != "undefined") {
			throw new Error("Invalid arguments");
		}

		if (handler != null) {
			this.each(function () {
				var element = $(this);
				element.unbind(getEventsString(element, suffix), getWrapper(handler));
			});
		} else {
			this.each(function () {
				var element = $(this);
				element.unbind(getEventsString(element, suffix));
			});
		}

		return this;
	};
})(jQuery);(function ($) {
	$.fn.any = function (predicate) {
		if (arguments.length == 0) {
			return this.length > 0;
		}

		var filteredElements = this.filter(predicate);

		return filteredElements.length > 0;
	};
})(jQuery);(function ($) {
	var v = {
		css: {
			w: "g-chckbx",
			t: "g-chckbx__tick",
			o: "g-chckbx__orig",
			disabled: "disabled",
			ib: "g-iblock",
			b: "g-block",
			hd: "g-hidden",
			bg: "g-bg"
		},
		js: {
			w: "js-chckbx",
			t: "js-chckbx__tick",
			o: "js-chckbx__orig"
		}
	};

	// Обернуть флажки
	function buildCheckbox(elements, parameter) {
		elements.each(function () {
			var checkbox = $(this);
			if (!checkbox.is("input[type='checkbox']")) {
				throw new Error("Element must be a checkbox");
			}

			if (checkbox.parent().hasClass(v.js.w)) {
				// Уже обёрнут
				return;
			}

			if (!checkbox.hasClass("disabled")) {
				v.css.disabled = "";
			}

			var wraperClass = [v.css.w, v.js.w, v.css.ib, parameter.wrapperClassSelector(checkbox), v.css.disabled].join(" "),
				tickClass = [v.css.t, v.js.t, v.css.bg, v.css.hd].join(" "),
				checkboxClass = [v.css.o, v.js.o, v.css.b, parameter.checkboxClassSelector(checkbox)].join(" ");

			var wrapper = $("<span></span>").addClass(wraperClass);
			var tick = $("<span></span>").addClass(tickClass);
			checkbox.removeClass().addClass(checkboxClass).wrap(wrapper).before(tick);

			if (checkbox.attr("checked") != null) {
				tick.removeClass(v.css.hd);
			}
		}).change(function () {
			checkCheckbox($(this));
		});
	}

	// Обновить состояние обёртки по состоянию флажка
	function checkCheckbox(element) {
		var checkbox;

		if (element.hasClass(v.js.o)) {
			// Агрумент - флажок
			checkbox = element;
		} else if (element.hasClass(v.js.w)) {
			// Агрумент - обёртка
			checkbox = element.find(v.js.o);
		} else {
			throw new Error("Argument must be either checkbox or wrapper");
		}

		var tick = checkbox.prev("." + v.js.t);
		if (checkbox.attr("checked") != null) {
			tick.removeClass(v.css.hd);
		} else {
			tick.addClass(v.css.hd);
		}
	}

	$.fn.checkbox = function (parameter) {
		if ($.type(parameter) == "string" && parameter == "check") {
			checkCheckbox(this);
		} else {
			parameter = $.extend({
				wrapperClassSelector: function (checkbox) {
					return "";
				},
				checkboxClassSelector: function (checkbox) {
					return checkbox.attr("class");
				}
			}, parameter);

			buildCheckbox(this, parameter);
		}

		return this;
	};
})(jQuery);

$(function () {
	$(".js-checkbox").checkbox();
});/*
* Плагин таскания элементов
* Copyright (c) 2013 - ABBYY
* 
* Инициализация
* $(".js-window-examples").draggable({
* 	handle: $(".js-window-examples-hd")
* });
* Подписываемся на событие перед перетаскиванием
* $(".js-window-examples").on("beforeDragging.draggable", function () {
* 	....
* });
* Подписываемся на событие после перетаскивания 
* $(".js-window-examples").on("afterDragging.draggable", function () {
* 	....
* });
* Убиваем перетаскивание при необходимости
* $(".js-window-examples").trigger("cancelDragging.draggable");
*/
(function ($) {
	var defaults = {
		wrapper: $(document.body),
		handle: $('.handle')
	};

	var doc = $(document), body = $(document.body);

	var methods = {
		init: function (param) {
			var options = $.extend(defaults, param);
			this.each(function (i, e) {
				bindHandlers($(e), options);
			});
			return this;
		}
	};

	function bindHandlers(self, options) {
		var wrapper = $(options.wrapper);
		var handle = $(options.handle);
		// Добавляем событие cancelDragging что бы при необходимости можно было вырубить таскание
		self.addClass("js-draggable").on("cancelDragging.draggable", mouseUpHandler);
		// Навешиваем mousedown на указанный в опциях элемент таскаемого блока
		handle.on("mousedown.draggable", function (event) {
			// Текущий элемент
			var current = $(this).closest(".js-draggable");
			// Инициируем событие beforeDragging для возможность подписаться на него из вне
			current.trigger("beforeDragging.draggable", current);
			// Записываем все нужные нам данные
			var currentOffset = current.offset(),
				wrapperOffset = wrapper.offset(),
				data = {
					clickX: event.pageX - currentOffset.left,
					clickY: event.pageY - currentOffset.top,
					draggingElem: {
						width: _outerWidth(self),
						height: _outerHeight(self)
					},
					wrapperElem: {
						width: _outerWidth(wrapper),
						height: wrapper[0].tagName.toLowerCase() == "body" ? doc.height() : _outerHeight(wrapper),
						left: wrapperOffset.left,
						top: wrapperOffset.top
					},
					current: current
				};
			// Обработчик при mousedown
			mouseDownHandler(data);
		});
	};

	function mouseDownHandler(data) {
		// Убираем возможность выделения текста
		clearSelection(true);
		// Навешиваем обработчики таскания на документ
		doc.on('mousemove.draggable', function (event) {
			if (!data.current.hasClass("js-drag"))
				data.current.addClass("js-drag");
			data.resultX = event.pageX - data.clickX;
			data.resultY = event.pageY - data.clickY;
			mouseMoveHandler(data);
		}).on('mouseup.draggable', mouseUpHandler);
		// Навешиваем mouseleave на боди (если курсор ушел с body сбрасываем таскание)
		body.on('mouseleave.draggable', mouseUpHandler);
	};

	function mouseMoveHandler(data) {
		// Меньше 0 быть не может ни по X ни по Y
		var position = {
			top: data.resultY >= 0 ? data.resultY : 0,
			left: data.resultX >= 0 ? data.resultX : 0
		};
		// Положение по Х + ширина таскаемого элемента
		var maxResultX = position.left + data.draggingElem.width;
		// Положение по Y + высота таскаемого элемента
		var maxResultY = position.top + data.draggingElem.height;
		// Положение контейнера по X (в пределах которого можно таскать) + его ширина
		var maxWrapperX = data.wrapperElem.left + data.wrapperElem.width;
		// Положение контейнера по Y (в пределах которого можно таскать) + его высота
		var maxWrapperY = data.wrapperElem.top + data.wrapperElem.height;

		if (maxResultX > maxWrapperX) position.left = maxWrapperX - data.draggingElem.width;
		if (maxResultY > maxWrapperY) position.top = maxWrapperY - data.draggingElem.height;
		// Ставим позицию таскаемого элемента
		data.current.offset(position);
	};

	function mouseUpHandler() {
		var current = $(".js-draggable.js-drag").removeClass("js-drag");
		// Снимаем запрет выделения текста
		clearSelection(false);
		// Снимаем все обработчики
		doc.off('mousemove.draggable').off('mouseup.draggable');
		body.off('mouseleave.draggable');
		// Инициируем событие окончания таскания
		current.trigger("afterDragging.draggable", current);
	}

	function clearSelection(isOn) {
		body[0].onselectstart = function () { return !isOn; };
		body[0].unselectable = isOn ? "on" : "off";
		body.css('-moz-user-select', isOn ? 'none' : 'auto');
	};

	function _outerWidth(e) {
		return $(e).outerWidth();
	};

	function _outerHeight(e) {
		return $(e).outerHeight();
	};

	$.fn.draggable = function (method) {
		// Method calling logic
		if (methods[method]) {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return methods.init.apply(this, arguments);
		} else {
			$.error('Method ' + method + ' does not exist on jQuery.draggable');
		}
	};
})(jQuery);/*
Плагин Jquery для стилизации <select>
Copyright (c) 2013 - ABBYY

Пример использования:

$(".select").dropdownlist({
	modifClass: "",				// класс-модификатор на новый селект для стилизации селектов
	boxWidth: "auto",			// ширина select'a
	boxHeight: 26,				// высота select'a
	listWidth: "auto",			// ширина выпадающего списка с option'ами
	listHeight: 200			// высота выпадающего списка с option'ами
});
*/

var app = app || {};
app.controllers = app.controllers || {};

(function ($, exports) {

	// общие для всех экземпляров контрола данные
	var statics = {
		
		// раскрытый в данный момент выпадающий список (может быть только один на странице)
		activeDropdown: null,

		// настройки по умолчанию
		settings: {
			modifClass: "",
			boxWidth: "auto",
			boxHeight: "26px",
			listWidth: null,
			listHeight: "200px",
			watermark: null,
			itemClass: 'js-dropdown__item'
		},

		// jQuery template шаблоны выпадающего списка
		templates: {

			// сам контрол
			control: $("#dropdownlist-control-template").template(),

			// выпадающий список
			list: $("#dropdownlist-list-template").template()
		},

		traversedClass: 'js-first-letter-traversed'
	};

	// контроллер виджета
	var controller = app.controllers.create.withoutRootElement({
		
		// элементы DOM
		elements: {

			// span с выбранным значением
			valueText: ".js-dropdown__text"
		},

		// обработчики событий DOM
		events: {
			
			// клик на раскрывающемся списке
			"click": function() {
				if (this.element.hasClass("disabled")) {
					return false;
				}

				if (this === statics.activeDropdown) {
					this.close();
				} else {
					if (statics.activeDropdown) {
						statics.activeDropdown.close();
					}
					// Инициируем событие beforeOpenSelect на оригинальном селекте
					this.origSelect.trigger("beforeOpenSelect", this);
					// Показываем выпадающий список
					this.buildDropdownList();
					this.element.addClass("active");
					statics.activeDropdown = this;
				}

				return false;
			}
		},
		
		// инициализация
		init: function(select, settings) {
			this.origSelect = select.addClass("g-hidden");
			this.origSelect.data("controller", this);
			this.settings = $.extend({}, statics.settings, settings);	

			this.origSelect.change(this.proxy(function (e, select) {
				if (this.ignoreChangeEvent) {
					this.ignoreChangeEvent = false;
					return;
				}
				// событие change произошло извне - пересобираем селект
				this.newSelect.remove();
				this.buildControl();
			}));
			this.buildControl();
		},

		// пересборка селекта с новыми опциями
		rebuild: function(settings) {
			this.settings = $.extend({}, statics.settings, settings);	
			this.newSelect.remove();
			this.buildControl();
		},

		// сборка контрола
		buildControl: function() {
			$.each(
				[ "boxWidth", "boxHeight", "listWidth", "listHeight" ],
				this.proxy(function(ix, prop) {
					if (typeof(this.settings[prop]) == "number") {
						this.settings[prop] = this.settings[prop].toString() + "px";
					}
				}));

			// Определяем классы и контент
			var origOptionSelected = this.origSelect.children("option:selected");
			var hasSelection = Boolean(origOptionSelected.length != 0 && origOptionSelected.val() != "");
			var newSelectHtml, newSelectTitle;
			if (!hasSelection && this.settings.watermark) {
				newSelectHtml = this.settings.watermark;
				newSelectTitle = "";
			} else {
				newSelectHtml = newSelectTitle = origOptionSelected.html();
			}

			// конструируем выпадающий список
			this.newSelect = this.element = $.tmpl(statics.templates.control,
				{
					settings: this.settings,
					disabled: this.origSelect.is(":disabled"),
					title: newSelectTitle, 
					selectedId: this.origSelect.val(), 
					selectedHtml: newSelectHtml
				})
				.insertAfter(this.origSelect);
			this.refreshElements();
			if (this.settings.watermark) {
				this.valueText.toggleClass("disabled", !hasSelection);
			}
			this.valueText.toggleClass("bold", hasSelection);
			this.startListening(this.newSelect, this);
		},

		// сборка и показ выпадающего списка
		buildDropdownList: function() {
			var currentId = this.valueText.data("id"),
				currentOption;

			this.dropdownList = $.tmpl(statics.templates.list,
				{
					settings: this.settings,
					options: $.map(
								this.origSelect.children(),
								function(el) {
									var opt = $(el);
									return { text: opt.html(), value: opt.val() };
								})
				});
			this.calculateListPosition();
			this.dropdownList.appendTo($(document.body));

			currentOption = this.dropdownList.find('.' + this.settings.itemClass + "[data-id='" + currentId + "']");
			if (currentOption.length > 0) {
				currentOption.addClass('selected');
				this.dropdownList.scrollTop(currentOption.position().top);
			}

			this.dropdownListItems = this.dropdownList.find('.' + this.settings.itemClass);

			// клик на опции в раскрытом списке
			this.dropdownListItems.on("click", this.proxy(function(e) {
				var newOption = $(e.currentTarget);
				
				this.setNewOption(newOption);
				this.close();
			})).on("mouseenter", this.proxy(function(e) { // курсор зашёл в некоторый option
				this.dropdownListItems.removeClass('selected').removeClass(statics.traversedClass);
				$(e.currentTarget).addClass('selected');
			}));
		},

		// вычисляет и обновляет позицию выпадающей части списка
		calculateListPosition: function() {
			if (!this.dropdownList) {
				return;
			}
			var base = {
				top: this.element.offset().top + this.element.height(),
				left: this.element.offset().left
			};
			var fixed = false;
			this.element.parents().each(function(ix, el) {
				if ($(el).css("position") == "fixed") {
					fixed = true;
					return false;
				}
			});
			if (fixed) {
				base.top -= $(window).scrollTop();
				base.left -= $(window).scrollLeft();
			}
			this.dropdownList
				.css({
					position: fixed ? "fixed" : "absolute",
					zIndex: 20,
					top: base.top + "px",
					left: base.left + "px",
					width: this.settings.listWidth ? this.settings.listWidth : this.element.width() + "px"
				});
		},

		// закрываем новый селект
		close: function() {
			if (!this.dropdownList) {
				return;
			}
			this.origSelect.trigger("beforeCloseSelect", this);
			this.dropdownList.remove();
			delete this.dropdownList;
			this.element.removeClass("active");
			this.origSelect.trigger("afterCloseSelect", this);
			statics.activeDropdown = null;
		},

		// устанавливает новый option в качестве выбранного
		setNewOption: function (newOption) {
			if(!newOption) return;

			var id = newOption.data("id"),
				html = newOption.html();
			
			this.dropdownListItems.removeClass('selected');
			newOption.addClass('selected');
			this.valueText.addClass("bold");

			// меняем значение и текст нового селекта
			this.valueText.data("id", id).attr("title", html).html(html);
			var emptySelection = (id == "");
			this.valueText.removeClass("disabled");
			if (emptySelection && this.settings.watermark) {
				this.valueText
					.html(this.settings.watermark)
					.addClass("disabled")
					.removeClass("bold");
			}

			// инициируем событие change на оригинальном селекте
			this.ignoreChangeEvent = true;
			this.origSelect.val(id.toString()).trigger("change");
			return false;
		},

		// навигация стрелками вверх/вниз
		keyNavigate: function(direction) {
			if(!this.dropdownListItems) return;

			var selectedOption = this.dropdownListItems.filter('.selected'),
				newSelectedOption;

			// вверх
			if(direction <= 0) {
				newSelectedOption = selectedOption.prev();
			}
			// вниз
			else {
				newSelectedOption = selectedOption.next();
			}

			if(newSelectedOption.length > 0) {
				this.dropdownListItems.removeClass('selected').removeClass(statics.traversedClass);
				newSelectedOption.addClass('selected');
				this.dropdownList.scrollTop(newSelectedOption.position().top + this.dropdownList.scrollTop());
			}
		},

		// установить текущий выбранный option
		setSelectedItem: function() {
			if(!this.dropdownListItems) return;

			var selectedOption = this.dropdownListItems.filter('.selected');

			if(selectedOption.length > 0) {
				this.setNewOption(selectedOption);
				this.close();
			}
		},

		// поиск по первому символу
		keySearch: function (firstChar) {
			if(!firstChar || !this.dropdownListItems) return;

			var text,
				element,
				option,
				firstOption;

			// проходим по всем опциям
			$.each(this.dropdownListItems, function () {
				element = $(this);
				text = element.text().trim().toLowerCase();

				// проверяем, совпадают ли первый символ в тексте опции и нажатый символ
				if(text.charAt(0) == firstChar && !element.hasClass('selected')) {
					if(!firstOption) firstOption = element;

					// если этот элемент ещё не пройден последовательным нажатием одной и той же кнопки
					if(!element.hasClass(statics.traversedClass)) {
						option = element;
						option.addClass(statics.traversedClass);
						return false;
					}
				}
			});

			// если нет совпадений
			if(!firstOption) return;

			// идём по следующему циклу нажатий на одну и ту же клавишу
			if(!option) {
				option = firstOption;
				this.dropdownListItems.removeClass(statics.traversedClass);
				option.addClass(statics.traversedClass);
			}

			// если нашли совпадение
			if(option && option.length > 0) {
				this.dropdownListItems.removeClass('selected');
				option.addClass('selected');
				this.dropdownList.scrollTop(option.position().top + statics.activeDropdown.dropdownList.scrollTop());
			}
		}
	});

	// обработка нажатия стрелок вниз и вверх, клавиш Enter и Esc
	$(document).on("keydown.dropdownlist", function (e) {
		var activeDropdown = statics.activeDropdown;

		// если есть активный селект
		if (activeDropdown) {
			// нажатие Esc
			if (e.keyCode == 27) {
				activeDropdown.close();
				return false;
			}
			// нажатие стреклок вверх или вниз
			else if(e.keyCode == 38 || e.keyCode == 40) {
				activeDropdown.keyNavigate(e.keyCode == 40);
				return false;
			}
			// нажатие Enter
			else if(e.keyCode == 13) {
				activeDropdown.setSelectedItem();
				return false;
			}
		}
	});

	// обработка нажатия остальных клавиш
	$(document).on("keypress.dropdownlist", function (e) {
		if (statics.activeDropdown) {
			var firstChar = String.fromCharCode(e.keyCode || e.charCode).toLowerCase();
			statics.activeDropdown.keySearch(firstChar);
			return false;
		}
	});

	$(document).bind("mouseup", function (e) {
		if (statics.activeDropdown) {
			var parents = $(e.target).parents().andSelf();
			if (parents.filter(statics.activeDropdown.dropdownList.get()).length > 0 ||
				parents.filter(statics.activeDropdown.newSelect.get()).length > 0) {
				return;
			}
			statics.activeDropdown.close();
		}
	});

	// обновляем позицию открытой части списка при изменении размеров окна
	$(window).resize(function() {
		if (statics.activeDropdown) {
			statics.activeDropdown.calculateListPosition();
		}
	});

	// плагин jQuery
	$.fn.dropdownlist = function (settings) {
		this.each(function (i, el) {
			var select = $(el);
			if (select.data("controller")) {
				select.data("controller").rebuild(settings);
			} else {
				new controller($(el), settings);
			}
		});
		return this;
	};

})(jQuery, app.controllers);
(function ($) {
	var dropDownTreeView = {
		// Настройки по умолчанию
		options: {
			classPrefix: "ui-dropdown-treeview",
			textSelector: function (selectedNodes) {
				if (selectedNodes.length == 0) {
					return "(nothing selected)";
				} else if (selectedNodes.length == 1) {
					return selectedNodes.text();
				} else {
					return selectedNodes.length.toString() + " nodes selected";
				}
			},
			treeOptions: {}
		},
		_getClasses: function (prefix) {
			if ($.type(prefix) != "string") {
				throw new Error("Prefix must be a string");
			}

			var prefixParts = prefix.split(/\s+/);
			var prefixes = [];
			for (var i = 0; i < prefixParts.length; i++) {
				if (!(/^\s*$/.test(prefixParts[i]))) {
					prefixes.push(prefixParts[i]);
				}
			}

			if (prefixes.length == 0) {
				throw new Error("At least one class prefix must be specified");
			}

			var getClasses = function (localName) {
				var result = "";
				for (var i = 0; i < prefixes.length; i++) {
					if (result.length > 0) {
						result += " ";
					}
					result += prefixes[i] + localName;
				}
				return result;
			};

			return {
				mainWidget: getClasses("_mainWidget"),
				mainWidgetHover: getClasses("_mainWidget_hover"),
				dropDown: getClasses("_dropDown")
			};
		},
		_create: function () {
			var options = this.options;
			var classes = this._getClasses(options.classPrefix);

			var element = this.element;
			if (!element.is("div")) {
				throw new Error("This method may be called for <div> elements only");
			}

			var wrapper = $("<div class='ui-dropdown-treeview-wrapper'></div>").insertAfter(element);
			var mainWidget = $('<div class="' + classes.mainWidget + '">' +
				'<img src="' + ContentPath + '/img/newImage/1px.png" class="g-bg ui-dropdown-treeview-icon">' +
				'<span class="g-iblock ui-dropdown-treeview-text"></span>' +
				'</div>').appendTo(wrapper);
			var dropDown = $("<div class='" + classes.dropDown + "' style='position: absolute'></div>").hide().appendTo(wrapper);

			element.detach();
			dropDown.append(element);
			element.treeView(options.treeOptions);
			element.change(function () {
				mainWidget.find(".ui-dropdown-treeview-text").html(options.textSelector(element.treeView("getSelectedNodes")));
				if (!options.treeOptions.checkboxes) {
					dropDown.hide();
				}
			});
			element.change();

			// раскрываем первый узел
			var firstNode = element.children(".ui-treeview_node").first();
			if (firstNode.length > 0) {
				element.treeView("setNodeExpanded", firstNode, true, false);
			}

			mainWidget.bind({
				click: function () {
					$(this).toggleClass("opened");
					if (dropDown.is(":visible")) {
						dropDown.hide();
						element.trigger("afterCloseSelect", element);
					} else {
						element.trigger("beforeOpenSelect", element);
						dropDown.show();
					}
				},
				mouseenter: function () {
					mainWidget.addClass(classes.mainWidgetHover);
				},
				mouseleave: function () {
					mainWidget.removeClass(classes.mainWidgetHover);
				}
			});

			$(document).bind("mousedown", function (e) {
				var inWidget = $.contains(mainWidget[0], e.target) || mainWidget[0] === e.target;
				var inDropDown = $.contains(dropDown[0], e.target) || dropDown[0] === e.target;
				if (!inWidget && !inDropDown && dropDown.is(":visible")) {
					mainWidget.removeClass("opened");
					dropDown.hide();
					element.trigger("afterCloseSelect", self);
				}
			});
		},

		selectNodes: function (value) {
			this.element.treeView("setSelectedNodes", value);
			this.element.change();
		}
	};

	$.widget("ui.dropDownTreeView", dropDownTreeView);
})(jQuery);/*
	Событие animationStart, которое возникает при вызове animate().
	В качестве параметра передаётся параметр options метода animate(), что позволяет подменить некоторые его свойства.
*/

(function ($) {
	var animate = $.fn.animate;

	$.fn.animate = function (properties, duration, easing, complete) {
		var options = jQuery.speed(duration, easing, complete);
		this.trigger("animationStart", options);
		animate.apply(this, [properties, options]);
	};
})(jQuery);
// Изменяет набор опций каждого из переданных элементов <select> на набор опций шаблонного элемента
// минус опции, выбранные в других элементах. Сохраняет выбранную опцию.
// Если вызывать эту функцию на набор выпадающих списков после изменения значения любого из них,
// пользователь не сможет выбрать двух одинаковых значений в разных списках.
// Параметры:
//	 allOptions: массив объектов со свойствами name и value для заполнения выпадающих список (имеет приоритет перед template)
//   template: шаблонный <select> (если нет allOptions)
//   onModified: функция, принимающая на вход jQuery-объект, соответствующий
//     только что модифицированному элементу (опционально)

(function ($) {
	$.fn.fillSelectsFromTemplateExceptSelectedInOthers = function (options) {

		var settings = $.extend({
			allOptions: null,
			template: null,
			onModified: null
		}, options);

		if ((settings.allOptions == null && settings.template == null) || this == null) {
			throw new Error("Invalid parameters");
		}

		// массив выбранных значений во всех переданных селектах
		var values = [];
		this.each(function (i, element) {
			var value = $(element).val();
			if (value != null && value.length > 0) {
				values.push(value);
			}
		});

		return this.each(function (currentSelectIndex, element) {
			var select = $(element),
				value = select.val();

			if (settings.allOptions) {
				select.empty();
				$.each(settings.allOptions, function (i, obj) {
					select.append($("<option />").val(obj.value).text(obj.name));
				});
			} else {
				select.empty().append(settings.template.children().clone());
			}
			select.val(value);
			select.find("option").each(function (optionIndex, element) {
				var option = $(element),
					ix;

				//Определяем положение текущей опции в общем списке выбранных
				ix = $.inArray(option.val(), values);

				//Если опция есть в списке и она принадлежит НЕ текущему селекту
				if (ix >= 0 && ix != currentSelectIndex) {
					option.remove();
				}
			});
			if (typeof (settings.onModified) == "function") {
				settings.onModified(select);
			}
		});
	};
})(jQuery);(function ($) {
	var $ajaxSubmit = $.fn.ajaxSubmit;

	$.fn.ajaxSubmit = function (options) {
		var newOptions = $.extend({}, options, { extractStatusFromIFrame: extractStatusFromIFrame });
		$ajaxSubmit.call(this, newOptions);
	};

	function extractStatusFromIFrame(document, iframe) {
		try {
			var iframeWindow = iframe.contentWindow;
			return {
				status: iframeWindow.httpStatusCode,
				statusText: iframeWindow.httpStatusText
			};
		} catch (e) {
			return {};
		}
	}
})(jQuery);(function ($) {
	// Получить словарь атрибутов элемента
	$.fn.getAttributes = function () {
		var attributes = { };

		if (this.length != 1) {
			throw new Error("getAttributes method may be called only on single-element jQuery object");
		}

		$.each(this[0].attributes, function (index, attr) {
			attributes[attr.name] = attr.value;
		});

		return attributes;
	};
})(jQuery);(function ($) {
	var emailRegex = /^([\w-]+\.)*[\w-]+@([\w-]+\.)+[\w-]+$/;

	$.isValidEMail = function (email) {
		return email.length <= 254 && email.indexOf('@') <= 64 && emailRegex.test(email);
	};
})(jQuery);(function ($) {
	var m = {
		'\b': '\\b',
		'\t': '\\t',
		'\n': '\\n',
		'\f': '\\f',
		'\r': '\\r',
		'"': '\\"',
		'\\': '\\\\'
	};
	var s = {
		'array': function (x) {
			var a = ['['], b, f, i, l = x.length, v;
			for (i = 0; i < l; i += 1) {
				v = x[i];
				f = s[typeof v];
				if (f) {
					v = f(v);
					if (typeof v == 'string') {
						if (b) {
							a[a.length] = ',';
						}
						a[a.length] = v;
						b = true;
					}
				}
			}
			a[a.length] = ']';
			return a.join('');
		},
		'boolean': function (x) {
			return String(x);
		},
		'null': function (x) {
			return "null";
		},
		'number': function (x) {
			return isFinite(x) ? String(x) : 'null';
		},
		'object': function (x) {
			if (x) {
				if (x instanceof Array) {
					return s.array(x);
				}
				var a = ['{'], b, f, i, v;
				for (i in x) {
					v = x[i];
					f = s[typeof v];
					if (f) {
						v = f(v);
						if (typeof v == 'string') {
							if (b) {
								a[a.length] = ',';
							}
							a.push(s.string(i), ':', v);
							b = true;
						}
					}
				}
				a[a.length] = '}';
				return a.join('');
			}
			return 'null';
		},
		'string': function (x) {
			if (/["\\\x00-\x1f]/.test(x)) {
				x = x.replace(/([\x00-\x1f\\"])/g, function (a, b) {
					var c = m[b];
					if (c) {
						return c;
					}
					c = b.charCodeAt();
					return '\\u00' +
						Math.floor(c / 16).toString(16) +
						(c % 16).toString(16);
				});
			}
			return '"' + x + '"';
		}
	};

	$.toJSON = function (v) {
		var f = isNaN(v) ? s[typeof v] : s['number'];
		if (f) return f(v);
	};

	$.parseJSON = function (v, safe) {
		if (safe === undefined) safe = $.parseJSON.safe;
		if (safe && !/^("(\\.|[^"\\\n\r])*?"|[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t])+?$/.test(v))
			return undefined;
		return eval('(' + v + ')');
	};

	$.parseJSON.safe = false;

})(jQuery);
/*
	Функция, ограничивающая длину текста, который можно ввести в поле ввода.
	В качестве параметра можно указать число - ограничение длины, или объект
	со следующими полями:
		maxLength - ограничение длины (число)
		callback - функция, которая будет вызываться при попытке превысить ограничение
*/
(function($) {
	$.fn.maxLength = function(options) {
		var maxLength, callback;
		if ($.type(options) == "number") {
			maxLength = options;
		} else if (options == null) {
			throw new Error("Argument can not be null or undefined");
		} else {
			maxLength = options.maxLength;
			callback = options.callback;
		}

		if ($.type(maxLength) != "number") {
			throw new Error("Maximum length must be specified (and it must be a number)");
		}
		if (maxLength < 0) {
			throw new Error("Maximum length must be nonnegative");
		}

		$(this).each(function() {
			$(this).bindInputEvents(function() {
				var input = $(this);
				var value = input.val();
				if (value.length <= maxLength) {
					return;
				}

				var cursorPosition = input.caret().end;
				var excess = value.length - maxLength;
				var cutFrom = cursorPosition - excess;
				if (cutFrom < 0) {
					// 'tis strange
					cutFrom = 0;
				}
				var cutTo = cutFrom + excess;
				var beforeCut = value.slice(0, cutFrom);
				var afterCut = value.slice(cutTo, value.length);
				input.val(beforeCut + afterCut);
				input.caret(cutFrom, cutFrom);

				if ($.type(callback) == "function") {
					callback();
				}
			});
		});

		return this;
	};
})(jQuery);/*
	Управление ошибками валидации. Вызов toggleModelError у элемента (или нескольких элементов)
	добавляет или убирает (в зависимости от значения параметра add) ошибку с именем errorName у
	этого элемента. Если у элемента есть хотя бы одна ошибка, к нему добавляется класс ошибки
	(по умолчанию error), если нет ни одной, класс убирается. Вызов clearModelErrors убирает
	все ошибки с элемента.
*/
(function ($) {
	var errorsDataKey = "model-errors";
	var errorClass = "error";

	$.setModelErrorClass = function (c) {
		errorClass = c;
	};

	$.fn.toggleModelError = function (errorName, add) {
		if ($.type(errorName) != "string" || $.type(add) != "boolean") {
			throw new Error("Invalid arguments");
		}

		if (this.length > 1) {
			this.each(function () {
				$(this).toggleModelError(errorName, add);
			});
			return this;
		}

		if (this.length == 0) {
			return this;
		}

		var errors = this.data(errorsDataKey);
		if (errors == null) {
			errors = { };
		}

		if (add) {
			errors[errorName] = true;
			this.addClass(errorClass);
		} else {
			delete errors[errorName];
			var noErrors = true;
			for (var e in errors) {
				noErrors = false;
				break;
			}
			if (noErrors) {
				this.removeClass(errorClass);
			}
		}

		this.data(errorsDataKey);
		return this;
	};

	$.fn.clearModelErrors = function () {
		return this.removeData(errorsDataKey).removeClass(errorClass);
	};
})(jQuery);/*
	Использование:

	element.monitor(valueCalculator, changeHandler) - следить за изменениями значения, возвращаемого функцией
		valueCalculator, которой элемент передаётся как this. Значения, возвращаемые этой функцией, сравниваются
		через areEqual, поэтому можно возвращать сложные объекты, например { width: 10, height: 20 }. Изменение
		любого поля объекта приводит к вызову changeHandler.

	element.monitor(cssValueName, changeHandler),
	element.monitor(cssValueNames, changeHandler) - следить за изменениями стиля элемента. Можно передавать массив
		названий стилей.

	Функции changeHandler передаётся ссылка this на элемент, с которым произошли изменения, и два параметра -
	новое значение выражения и старое значение выражения. Если следили за одним стилем, передаются его новое
	и старое значение, если за несколькими стилями - словари из имени стиля в значение, с новыми и старыми
	значениями.

	Если метод вызван у объекта с несколькими элементами, они все будут наблюдаться по отдельности.

	Если элемент был удалён из DOM, слежение прекращается.
*/

(function ($) {
	var monitoringData = [],
		jQueryWrappingDisabled = false, // Не вызывать метод мониторинга после выполнения jQuery-методов
		monitoringSuppressed = false, // Мониторинг сработал недавно, временно не вызывать его
		monitoringPending = false, // Была ли необходимость мониторинга, пока он был подавлен
		minimumIntervalBetweenMonitoringMSec = 150; // Минимальный интервал между подряд идущими вызовами мониторинга, миллисекунды

	var specialMethods = ["constructor", "init"],
		readOnlyMethods = ["is", "has", "hasClass", "data", "each", "eq", "get", "add", "not", "filter", "find", "children", "closest", "first", "last", "map", "slice"],
		methodsNotToOverride = specialMethods.concat(readOnlyMethods);

	function resumeMonitoring() {
		// Возобновление мониторинга по прошествии нужного времени
		monitoringSuppressed = false;
		if (monitoringPending) {
			monitoringPending = false;
			monitor();
		}
	}

	function monitor() {
		if (monitoringSuppressed) {
			// Мониторинг немного откладывается
			monitoringPending = true;
			return;
		}

		monitoringSuppressed = true;

		for (var i = monitoringData.length - 1; i >= 0; i--) {
			var data = monitoringData[i];

			if (!$.contains(document.documentElement, data.element[0])) {
				// Элемент был удалён
				monitoringData.splice(i, 1);
			} else {
				// Считаем, что функция вычисления наблюдаемой величины не изменяет DOM
				var jQueryWrappingWasDisabled = jQueryWrappingDisabled;
				jQueryWrappingDisabled = true;
				var newValue = data.valueCalculator.call(data.element);
				jQueryWrappingDisabled = jQueryWrappingWasDisabled;

				if (!areEqual(newValue, data.lastValue)) {
					// Значение изменилось
					data.changeHandler.call(data.element, newValue, data.lastValue);
					data.lastValue = newValue;
				}
			}
		}

		setTimeout(resumeMonitoring, minimumIntervalBetweenMonitoringMSec);
	}

	function monitorViaMutationObserver() {
		var mutationObserverConstructor = window.MutationObserver || window.WebKitMutationObserver;

		if (typeof mutationObserverConstructor != "function") {
			return false;
		}

		var observer = new mutationObserverConstructor(monitor);
		observer.observe(document, {
			subtree: true,
			characterData: true,
			attributes: true
		});

		return true;
	}

	function monitorViaWrappingJQuery() {

		function wrapJQueryMethod(jQueryMethodName) {
			if ($.inArray(jQueryMethodName, methodsNotToOverride) >= 0) {
				return;
			}

			var oldMethod = $.fn[jQueryMethodName];

			if (typeof oldMethod != "function") {
				return;
			}

			$.fn[jQueryMethodName] = function () {
				if (jQueryWrappingDisabled) {
					return oldMethod.apply(this, arguments);
				}

				jQueryWrappingDisabled = true;
				try {
					var result = oldMethod.apply(this, arguments);
					monitor();
				} finally {
					jQueryWrappingDisabled = false;
				}

				return result;
			};
		}

		for (var methodName in $.fn) {
			if ($.fn.hasOwnProperty(methodName)) {
				wrapJQueryMethod(methodName);
			}
		}
	}

	if (!monitorViaMutationObserver()) {
		monitorViaWrappingJQuery();
	}

	$.fn.monitor = function (valueCalculatorOrCssValueName, changeHandler) {
		if (typeof changeHandler != "function") {
			throw new Error("Invalid change handler");
		}

		if ($.type(valueCalculatorOrCssValueName) == "string") {
			var cssValueName = valueCalculatorOrCssValueName;
			valueCalculatorOrCssValueName = function () {
				return this.css(cssValueName);
			};
		}

		if (valueCalculatorOrCssValueName instanceof Array) {
			var cssValueNames = valueCalculatorOrCssValueName;
			$.each(cssValueNames, function (index, value) {
				if ($.type(value) != "string") {
					throw new Error("Invalid css values names array");
				}
			});

			valueCalculatorOrCssValueName = function () {
				var result = {};
				for (var valueName in cssValueNames) {
					result[valueName] = this.css(valueName);
				}
				return result;
			};
		}

		if (typeof valueCalculatorOrCssValueName != "function") {
			throw new Error("Invalid value calculator or style name");
		}

		this.each(function () {
			var element = $(this);
			monitoringData.push({
				element: element,
				valueCalculator: valueCalculatorOrCssValueName,
				changeHandler: changeHandler,
				lastValue: valueCalculatorOrCssValueName.call(element)
			});
		});
	};
})(jQuery);/*
	Функции, делающие из поля ввода текста поле ввода числа.
	numeric(parameters) - сделать из поля ввода текста поле ввода числа.
	Параметры:
		maxLength: максимальная длина текста (по умолчанию 15)
		allowSigns: разрешить ли вводить + и - (по умолчанию false)
		decimalSeparator: разрешённый разделитель целой и дробной частей (по умолчанию нет)
		thousandsSeparator: разрешённый разделитель групп цифр (по умолчанию нет)
	getNumericValue() - получить число, записанное в поле ввода. Если числа там нет, возвращает null.
*/
(function ($) {
	var allowedCharactersRegexAttribute = "data-allowed-characters-regex",
		decimalSeparatorAttribute = "data-decimal-separator",
		thousandsSeparatorRegexAttribute = "data-thousands-separator-regex";

	function onValueChange() {
		var input = $(this);
		var value = input.val();
		var allowedCharactersRegex = new RegExp(input.attr(allowedCharactersRegexAttribute));
		var newValue = "";
		// Чтобы в IE курсор не прыгал в конец, устанавливаем его руками туда, куда нужно
		var cursorPosition = input.caret().end;
		var newCursorPosition = 0;

		for (var i = 0; i < value.length; i++) {
			var c = value.charAt(i);
			if (allowedCharactersRegex.test(c)) {
				newValue += c;
				if (i < cursorPosition) {
					newCursorPosition++;
				}
			}
		}

		if (newValue == value) {
			return;
		}

		input.val(newValue);
		input.caret(newCursorPosition, newCursorPosition);
	}

	$.fn.numeric = function (parameters) {
		if (this.length == 0) {
			return this;
		}
		if (!this.is("input[type='text']") && !this.is("textarea")) {
			throw new Error("Only text inputs and textareas can be made numeric");
		}

		if (parameters == null) {
			parameters = { };
		}

		var decimalSeparator = parameters.decimalSeparator,
			thousandsSeparator = parameters.thousandsSeparator,
			allowedCharactersRegex = "\\d";

		if ($.type(parameters.allowSigns) == "boolean") {
			if (parameters.allowSigns) {
				allowedCharactersRegex += "|\\+|\\-";
			}
		}

		if ($.type(decimalSeparator) == "string" && decimalSeparator != "") {
			allowedCharactersRegex += "|" + RegExp.quote(decimalSeparator);
			this.attr(decimalSeparatorAttribute, decimalSeparator);
		}

		if ($.type(thousandsSeparator) == "string" && thousandsSeparator != "") {
			// Если разделитель групп цифр - неразрывный пробел, мы хотим принимать все пробелы
			var thousandsSeparatorRegex = /^\s$/.test(thousandsSeparator) ? "\\s" : RegExp.quote(thousandsSeparator);
			allowedCharactersRegex += "|" + thousandsSeparatorRegex;
			this.attr(thousandsSeparatorRegexAttribute, thousandsSeparatorRegex);
		}

		this.attr(allowedCharactersRegexAttribute, "(" + allowedCharactersRegex + ")");
		this.bindInputEvents(onValueChange);

		// Пусть обрезание по длине срабатывает позже фильтрации по допустимым символам.
		if ($.type(parameters.maxLength) == "number") {
			this.maxLength(parameters.maxLength);
		} else {
			this.maxLength(15);
		}

		return this;
	};

	$.fn.getNumericValue = function () {
		var value = this.val();
		if ($.type(value) != "string") {
			return null;
		}

		var decimalSeparator = this.attr(decimalSeparatorAttribute),
			thousandsSeparatorRegexString = this.attr(thousandsSeparatorRegexAttribute),
			beforeDot,
			afterDot;

		if ($.type(decimalSeparator) == "string") {
			var dotIndex = value.indexOf(decimalSeparator);
			if (dotIndex < 0) {
				beforeDot = value;
				afterDot = "";
			} else {
				beforeDot = value.substr(0, dotIndex);
				afterDot = value.substr(dotIndex + decimalSeparator.length);
			}
		} else {
			beforeDot = value;
			afterDot = "";
		}

		if ($.type(thousandsSeparatorRegexString) == "string") {
			// Разделитель групп цифр не после цифры
			var notAfterDigit = "([^\\d]|^)" + thousandsSeparatorRegexString,
				// Разделитель групп цифр не перед цифрой
				notBeforeDigit = thousandsSeparatorRegexString + "([^\\d]|$)",
				// Разделитель групп цифр не между цифрами (запрещённое использование)
				badUseRegex = new RegExp("(" + notAfterDigit + "|" + notBeforeDigit + ")", "g");

			if (badUseRegex.test(beforeDot)) {
				return null;
			}

			beforeDot = beforeDot.replace(new RegExp(thousandsSeparatorRegexString, "g"), "");
		}

		value = beforeDot;
		if (afterDot.length > 0) {
			value += "." + afterDot;
		}

		if (value.length == 0) {
			return null;
		}

		var result = Number(value);
		if ($.type(result) != "number" || !isFinite(result)) {
			return null;
		}

		return result;
	};
})(jQuery);/*
	Метод подстраивает высоту переданного элемента таким образом, чтобы высота страницы совпадала с высотой окна
*/
(function ($) {
	var hideClass = "g-hidden";

	function setHeight(element, height) {
		if (height < 0) {
			height = 0;
		}
		element.height(height);
		element.toggleClass(hideClass, height == 0);
	}

	$.fn.padWindowHeight = function () {
		if (this.length > 1) {
			throw new Error("Padding using more than one element is not supported yet");
		}

		if (this.hasClass("g-hidden")) {
			this.height(0);
		}

		var body = $(".js-body");
		var bodyHeight = body.outerHeight() + body.offset().top;
		var windowHeight = $(window).height();
		var unusedHeight = windowHeight - bodyHeight;

		setHeight(this, this.height() + unusedHeight);

		return this;
	};
})(jQuery);// загрузка порций данных при прокрутке страницы вниз

(function ($) {

	// Вызывает ajax запрос при прокрутке страницы вниз.
	// Обработка результатов запроса лежит целиком на вызывающей стороне, предоставляющей функцию onLoad.
	// Параметры:
	//		action - "bind" (инициирует подгрузку при прокрутке) или "unbind" (отключает подгрузку при прокрутке, не требует остальных параметров)
	//		settings - параметры ajax-запроса
	//		getExtendForData - функция, вызываемая непосредственно в момент запроса и возвращающая объект с данными для передачи на сервер
	$.paginateOnScroll = function (action, settings, getExtendForData) {
		var isLoading = false;
		var $window = $(window);
		switch (action) {
			case "bind":
				var $document = $(document);
				settings = $.extend(
					{
						url: window.location.pathname + window.location.search,
						method: "GET"
					},
					settings);
				settings.complete = function () {
					isLoading = false;
				};
				var initialData = settings.data || {};
				$window.bind("scroll.paginate", function () {
					if (($document.height() - $window.height() <= $window.scrollTop() + 50) || ($document.height() <= $window.height())) { //$document.height() <= $window.height() - скролла нет
						if (isLoading) {
							return;
						}
						isLoading = true;
						settings.data = (typeof (getExtendForData) == "function")
							? $.extend({}, initialData, getExtendForData())
							: initialData;
						$.ajax(settings);
					}
				});
				$window.trigger("scroll.paginate"); //Дёргаем один раз, чтобы подгрузить данные на случай, если страничка без скролла
				break;
			case "unbind":
				$window.unbind("scroll.paginate");
				break;
			default:
				throw "Unknown action for $.requestOnScroll - " + action;
		}
		return this;
	};

	// Дополняет таблицу полученными с сервера записями при прокрутке страницы вниз.
	// Маркером последней записи служит класс js-end на последней строке таблицы
	// Внутри использует $.requestOnScroll, параметры те же
	//		requestData - данные для ajax-запроса
	//		url - url запроса (по умолчанию - текущий url страницы)
	//		method - http-метод запроса (по умолчанию - get)
	//		onLoad - callback-функция, обрабатывающая результаты запроса к серверу
	// Значение по умолчанию для requestData.startIndex - количество строк в таблице
	$.fn.paginateOnScroll = function (requestData, url, method, onLoad) {
		$.each(this, function (i, el) {
			var self = $(el);
			var tbody = self.find("tbody");
			requestData = requestData || {};
			startIndex = requestData.startIndex;
			$.paginateOnScroll("bind",
				{
					url: url,
					method: method,
					data: requestData,
					success: function (data) {
						tbody.append(data);
						if (tbody.find('tr.js-end').length > 0) {
							$.paginateOnScroll("unbind");
						}
						if (typeof(onLoad) == 'function') {
							onLoad(data);
						}
					}
				},
				function () {
					return { startIndex: (typeof(startIndex) != "number") ? tbody.children("tr").length : startIndex };
				});
		});
		return this;
	};

})(jQuery);
/*
	Синтаксис команд:

	element.popup("setup", options) - установить для element настройки options
		options.resetOnHide - сбрасывать ли окно в начальное состояние при его скрытии
		options.initFunction - функция, которая будет вызвана перед первым показом окна, или перед каждым,
			если окно сбрасывается в начальное состояние при скрытии
		options.disableFocus - отключить фокусировку на первом элементе окна и препятствие потере фокуса окном

	element.popup("show", options) - показать element как всплывающее окно
	element.popup("hide", options) - скрыть показанное всплывающее окно element
		options.bgDuration - время, за которое появляется или скрывается фон
		options.windowDuration - время, за которое появляется или скрывается окно

	element.popup("replace", otherElement, options) - скрыть всплывающее окно element и показать вместо него otherElement,
		не скрывая фон в процессе. Параметр options относится к скрытию и показу.

	element.popup("resize", options) - подстроить расположение всплывающего окна под его текущие размеры и текущие размеры окна браузера
		options.duration - время позиционирования
		вместо options можно указать число - время позиционирования

	element.popup("takeSnapshot") - запомнить текущее состояние всплывающего окна
	element.popup("restoreSnapshot") - восстановить запомненное состояние всплывающего окна
*/

(function ($) {
	var background = $(".js-popup-bg"),
		popupBodySelector = ".js-popup-bd",
		closeTriggerSelector = ".js-popup-close",
		animationStartEventName = "animationStart.popup",
		focusinEventNameBase = "focusin.popup",
		stackSize = 0,
		queue = new ActionsQueue();

	if (background.length != 1) {
		$.fn.popup = function () {
			throw new Error("Can not find single popup background.");
		};
		return;
	}

	background.click(function () {
		// Клик в фон - выходим
		return false;
	});

	$(document).on("click", closeTriggerSelector, function () {
		// Клик в крестик закрытия
		$(this).closest(popupBodySelector).popup("hide");
		return false;
	});

	// Закрытие всплывающего окна по нажатию Escape
	$(document).bind("keydown keyup", function (e) {
		if (e.keyCode != 27) {
			return;
		}

		// Нажата Escape
		var visiblePopups = $(popupBodySelector + ":visible");
		if (visiblePopups.length == 0) {
			return;
		}

		var highestPopup = null;
		var highestStackPosition = -1;
		for (var i = 0; i < visiblePopups.length; i++) {
			var popup = $(visiblePopups[i]);
			if (stackPosition(popup) > highestStackPosition) {
				highestPopup = popup;
				highestStackPosition = stackPosition(popup);
			}
		}

		if (highestPopup != null) {
			highestPopup.popup("hide");
		}
	});


	$.fn.popup = function (command, options, a) {
		if ($.type(command) != "string") {
			throw new Error("Expected string command");
		}

		if (command == "setup") {
			// Настраивать можно несколько окон сразу
			this.each(function () {
				settings($(this), $.extend(settings($(this)), options));
			});
			return this;
		}

		if (this.length != 1) {
			throw new Error("Single element expected");
		}

		if (command == "resize" && $.type(options) == "number") {
			options = { duration: options };
		}

		if (command == "replace") {
			var newPopup = options;
			options = a;
			if (!(newPopup instanceof jQuery)) {
				throw new Error("New pop-up must be a jQuery object");
			}
		}

		options = $.extend({
			bgDuration: 200,
			windowDuration: 250,
			duration: 250
		}, options);

		switch (command) {
			case "show":
				show(this, options);
				break;
			case "hide":
				hide(this, options);
				break;
			case "resize":
				resize(this, options);
				break;
			case "takeSnapshot":
				takeSnapshot(this);
				break;
			case "restoreSnapshot":
				restoreSnapshot(this);
				break;
			case "replace":
				replace(this, newPopup, options);
				break;
			default:
				throw new Error("Unknown command: " + command);
		}

		return this;
	};


	function isResizing(element, b) {
		if (b == null) {
			return !!element.data("resizing");
		}
		element.data("resizing", b);
	}

	function isShown(element, b) {
		if (b == null) {
			return !!element.data("shown");
		}
		element.data("shown", b);
	}

	function isInitialized(element, b) {
		if (b == null) {
			return !!element.data("initialized");
		}
		element.data("initialized", b);
	}

	function settings(popup, s) {
		if (s == null) {
			return popup.data("settings") || {};
		}
		popup.data("settings", s);
	}

	function stackPosition(popup, position) {
		if (position == null) {
			return popup.data("stackPosition");
		}
		popup.data("stackPosition", position);
	}

	function getCorrectPosition(popup) {
		return {
			marginTop: -(popup.height() / 2),
			marginLeft: -(popup.width() / 2)
		};
	}

	// Копирование содержимого всплывающего окна
	function takeSnapshot(popup) {
		popup.data("initialContents", popup.html());
	}

	// Восстановление содержимого всплывающего окна
	function restoreSnapshot(popup) {
		var snapshot = popup.data("initialContents");
		if (snapshot == null) {
			throw new Error("Snapshot was not taken");
		}
		popup.html(snapshot);
		isInitialized(popup, false);
	}

	function show(popup, parameters) {
		queue.enqueue(function () {
			if (isShown(popup)) {
				queue.runNext();
				return;
			}

			isShown(popup, true);
			stackSize++;
			stackPosition(popup, stackSize);

			// Копирование содержимого всплывающего окна
			var popupSettings = settings(popup);
			if (popupSettings.resetOnHide) {
				takeSnapshot(popup);
			}

			// Инициализация всплывающего окна
			if(!isInitialized(popup)){
				popup.find(".js-jq-watermark").watermark();
				if (typeof popupSettings.initFunction == "function") {
					popupSettings.initFunction(popup);
				}
				isInitialized(popup, true);
			}

			// Поддержка анимации внутри всплывающего окна
			popup.unbind(animationStartEventName);
			popup.bind(animationStartEventName, function (e, options) {
				if (e.target != popup[0]) {
					// Если начинается анимация внутри всплывающего окна, добавляем в её функцию step
					// мгновенное обновление позиции всплывающего окна
					var step = options.step;
					if (typeof step == "function") {
						options.step = function () {
							resize(popup, { duration: 0 });
							return step.apply(this, arguments);
						};
					} else {
						options.step = function () {
							resize(popup, { duration: 0 });
						};
					}
				}
				return false;
			});

			popup.trigger("beforeOpenPopup", parameters.data);

			background.fadeTo(parameters.bgDuration, 0.25, function () {
				popup.css(getCorrectPosition(popup)).fadeIn(parameters.windowDuration, function () {
					if (!popupSettings.disableFocus) {
						// Получаем фокус и начинаем следить за его потерей
						setupFocus(popup, parameters.initialFocus);
					}

					popup.trigger("afterOpenPopup");

					queue.runNext();
				});
			});
		});
	}

	function hide(popup, parameters, skipHidingBackground) {
		queue.enqueue(function () {
			if (!isShown(popup)) {
				queue.runNext();
				return;
			}

			stackSize--;

			popup.unbind(animationStartEventName);

			popup.trigger("beforeClosePopup");

			function afterFade() {
				var popupSettings = settings(popup);
				if (popupSettings.resetOnHide) {
					restoreSnapshot(popup);
				}
				isShown(popup, false);

				// Оканчиваем слежку за потерей фокуса
				$(document).off(focusinEventNameBase + stackPosition(popup));

				popup.trigger("afterClosePopup");

				queue.runNext();
			}

			popup.fadeOut(parameters.windowDuration, function () {
				if (stackSize == 0 && !skipHidingBackground) {
					background.fadeOut(parameters.bgDuration, afterFade);
				} else {
					afterFade();
				}
			});
		});
	}

	function replace(popup, newPopup, parameters) {
		hide(popup, parameters, true);
		show(newPopup, parameters);
	}

	function resize(popup, parameters) {
		if (!isShown(popup)) {
			return;
		}

		if (isResizing(popup)) {
			popup.stop(true);
		} else {
			popup.trigger("beforeResizePopup");
		}

		if (parameters.duration == 0) {
			popup.css(getCorrectPosition(popup));
			popup.trigger("afterResizePopup");
		} else {
			isResizing(popup, true);
			popup.animate(getCorrectPosition(popup), parameters.duration, function () {
				isResizing(popup, false);
				popup.trigger("afterResizePopup");
			});
		}
	}

	function setupFocus(popup, initialFocusedControl) {
		var focusable = ":visible:enabled:not([readonly])",
			focusableSubSelector = "input" + focusable + ",textarea" + focusable + ",select" + focusable,
			focusableInputs = popup.find(focusableSubSelector);

		if (focusableInputs.length == 0) {
			return;
		}

		// Фокус на заказанный в параметрах или на первый элемент ввода в окне
		(initialFocusedControl ? initialFocusedControl : findFirstInput(focusableInputs)).focus();

		var thisStackPosition = stackPosition(popup);
		$(document).on(focusinEventNameBase + thisStackPosition, "*", function (e) {
			// При получении фокуса любым элементом ввода на странице...
			if (stackSize != thisStackPosition) {
				// Если текущее окно не на вершине стека - пропускаем
				return;
			}

			// Запрещаем событию всплывать
			e.stopPropagation();

			// Если фокус получил элемент ввода не в окне
			if (!$.contains(popup[0], this)) {
				// Позволяем обработчику отработать и лишь затем устанавливаем фокус в первый элемент в окне
				setTimeout(function () {
					// Содержимое окна могло измениться, ищем заново
					focusableInputs = popup.find(focusableSubSelector);

					if (focusableInputs.length > 0) {
						findFirstInput(focusableInputs).focus();
					}
				}, 1);
			}
		});
	}

	function findFirstInput(elements) {
		var current = elements.first();
		for (var i = 1; i < elements.length; i++) {
			var element = $(elements[i]);
			var elementTabIndexAttr = element.attr("tabindex");
			if (elementTabIndexAttr == null || elementTabIndexAttr == "") {
				continue;
			}

			var currentTabIndexAttr = current.attr("tabindex");
			if (currentTabIndexAttr == null || currentTabIndexAttr == "") {
				current = element;
				continue;
			}

			var elementTabIndex = Number(elementTabIndexAttr);
			var currentTabIndex = Number(currentTabIndexAttr);

			if (elementTabIndex < currentTabIndex) {
				current = element;
			}
		}

		return current;
	}

})(jQuery);(function ($) {
	var v = {
		css: {
			w: "g-radio",
			t: "g-radio__tick",
			o: "g-radio__orig",
			ib: "g-iblock",
			b: "g-block",
			hd: "g-hidden",
			bg: "g-bg"
		},
		js: {
			w: "js-radio",
			t: "js-radio__tick",
			o: "js-radio__orig"
		},
		cssCl: "cssClass:"
	};

	$.fn.radio = function (param) {
		if (typeof param == "string" && param == "checkRadio") {
			changeRadio();
		} else if (typeof param == "string") {
			v.uniqClass = addClass(param);
		}
		this.each(function () {
			var radio = $(this);
			if (!radio.is("input[type='radio']")) {
				throw new Error("Element must be a radio");
			}

			if (radio.parent().hasClass(v.js.w)) {
				// Уже обёрнут
				return;
			}

			var wraperClass = [v.css.w, v.js.w, v.css.ib, v.uniqClass].join(" "),
				tickClass = [v.css.t, v.js.t, v.css.bg, v.css.hd].join(" "),
				checkboxClass = [v.css.o, v.js.o, v.css.b].join(" ");

			var wrapper = $("<span></span>").addClass(wraperClass);
			var tick = $("<span></span>").addClass(tickClass);
			radio.removeClass().addClass(checkboxClass).wrap(wrapper).before(tick);

			if (radio.attr("checked") == "checked") {
				tick.removeClass(v.css.hd);
			}
		}).change(function () {
			changeRadio();
		});

		function changeRadio() {
			var rad = $("." + v.js.o);
			rad.each(function (i, e) {
				if ($(e).attr("checked") == "checked")
					$(e).siblings("." + v.js.t).removeClass(v.css.hd);
				else
					$(e).siblings("." + v.js.t).addClass(v.css.hd);
			});
		}

		function addClass(param) {
			var string = param;
			var cssClass = "";
			var command = string.substring(0, v.cssCl.length);
			if (command == v.cssCl) {
				cssClass = string.substring(v.cssCl.length).length == 0 ? "" : string.substring(v.cssCl.length);
			} else {
				cssClass = "";
			}
			return cssClass;
		}
	};
})(jQuery);(function ($) {
	$.fn.reliableCheckbox = function () {
		if (!this.is("input[type='checkbox']")) {
			throw new Error("This method can only be used for checkboxes");
		}

		var name = this.attr("name");
		if ($.type(name) != "string" || name.length == 0) {
			throw new Error("Checkbox must have a name, otherwise calling this method is useless");
		}

		this.removeAttr("name");
		var hidden = $("<input type='hidden'>");
		hidden.attr("name", name);
		hidden.insertAfter(this);

		this.change(function () {
			if ($(this).is(":checked")) {
				hidden.val("true");
			} else {
				hidden.val("false");
			}
		});

		this.change();

		return this;
	};
})(jQuery);(function($) {
	$.fn.reliableMultipleSelect = function(separator) {
		if (!this.is("select[multiple]")) {
			throw new Error("This method can only be used for selects with multiple select support");
		}

		var name = this.attr("name");
		if ($.type(name) != "string" || name.length == 0) {
			throw new Error("Select must have a name, otherwise calling this method is useless");
		}

		if ($.type(separator) != "string" || separator.length == 0) {
			throw new Error("Separator must be a nonempty string");
		}

		this.removeAttr("name");
		var hidden = $("<input type='hidden'>");
		hidden.attr("name", name);
		hidden.insertAfter(this);

		this.change(function() {
			var value = "";
			var selectedOptions = $(this).find("option:selected");
			for (var i = 0; i < selectedOptions.length; i++) {
				if (i > 0) {
					value += separator;
				}

				value += $(selectedOptions[i]).val();
			}

			hidden.val(value);
		});

		this.change();

		return this;
	};
})(jQuery);/*
*
* Плагин scrollbar для стилизации скролла
* Copyright (c) 2012 - ABBYY
*
* Пример:
* // Навешиваем плагин на контейнер скролла
* $('.js-scrollbar-wrapper').scrollbar();
*
* // Обновляет данные для скролла (может потребоваться если один из элементов изменил свою высоту)
* $('.js-scrollbar-wrapper').scrollbar('update');
* // Устанавливает скролл в самый низ
* $('.js-scrollbar-wrapper').scrollbar('scrollToEnd');
* // Выключение скролла извне
* $('.js-scrollbar-wrapper').trigger('cancelScroll.scrollbar');
*
*/

(function ($) {
	var scrollBoxClass = "js-scrollbar-scrollbox",
		sliderBoxClass = "js-scrollbar-sliderbox",
		sliderClass = "js-scrollbar-slider";

	var globalObject = $.browser.msie ? document : window;

	function getDimensions() {
		return {
			height: this.height(),
			width: this.width(),
			contentHeight: this.find("." + scrollBoxClass).height()
		};
	}

	var methods = {
		init: function () {
			this.each(createDataForSlider);
			// Обновляем полосу прокрутки при изменении размеров области прокрутки и при изменении размера содержимого
			this.monitor(getDimensions, methods.update);
			return this;
		},
		update: function () {
			createDataForSlider.call(this, function (obj) {
				// Команда обновить, запоминаем положение ползунка, чтобы всё пересчитать и вернуть ползунок на место.
				// Если слайдер скрыт, значит скроллить нечего - ползунок и скроллируемый блок в 0 (на самый верх).
				var posSlider = obj.isHiddenSlider ? 0 : Math.abs(parseInt(obj.boxShift)) / obj.deltaOrig;
				// Устанавливаем позицию позунка
				setPosition(posSlider, obj);
			});
			return this;
		},
		scrollToEnd: function () {
			createDataForSlider.call(this, function (obj) {
				// Команда ползунок на самый низ
				var posSlider = obj.boxTrackHeight / obj.deltaOrig;
				// Устанавливаем позицию позунка
				setPosition(posSlider, obj);
			});
			return this;
		}
	};

	// Инициализация
	function createDataForSlider(callBack) {
		var wrapper = $(this), // Контейнер
			box = wrapper.find("." + scrollBoxClass), // Сколируемый блок
			sliderbox = wrapper.find("." + sliderBoxClass), // Контейнер ползунка
			slider = wrapper.find("." + sliderClass); // Ползунок

		if (wrapper.hasClass("g-hidden") || wrapper.length < 1 || box.length < 1 || sliderbox.length < 1 || slider.length < 1) {
			return;
		}

		var wrapperHeight = wrapper.height(), // Высота контейнера
			sliderTrackHeight = sliderbox.outerHeight(), // Высота блока, в пределах которого будет ездить ползунок
			boxTrackHeight = box.outerHeight(); // Высота скроллируемого блока

		var isHiddenSlider = false; // Нужно ли скрыть слайдер (когда высота 0 слайдер скрываем)

		var sliderHeight = Math.round((wrapperHeight * sliderTrackHeight) / boxTrackHeight); // Высота ползунка
		if (sliderHeight < 15) {
			sliderHeight = 15; // Минимальная высота ползунка, чтобы в 0 не ушел
		}

		// Максимальная высота ползунка - это высота блока, в котором ездит ползунок
		if (sliderHeight >= sliderTrackHeight) {
			sliderHeight = sliderTrackHeight, isHiddenSlider = true;
		}

		slider.outerHeight(sliderHeight).toggleClass("g-hidden", isHiddenSlider);

		// Берём верхнюю точку ползунка, считаться будем от неё;
		// задаем высоту трэка ползунка и скроллируемого блока
		sliderTrackHeight -= sliderHeight;
		boxTrackHeight -= wrapperHeight;

		// Рассчитываем коэффициэнт
		var delta = boxTrackHeight / sliderTrackHeight;

		// Запоминаем все данные для дальнейшего использования
		var data = {
			wrapper: wrapper,
			box: box,
			slider: slider,
			sliderTrackHeight: sliderTrackHeight,
			delta: isHiddenSlider ? 0 : delta,
			deltaOrig: delta,
			boxTrackHeight: boxTrackHeight,
			isHiddenSlider: isHiddenSlider,
			boxShift: box.css("marginTop")
		};

		// Если был update или scrollToEnd нужно обновить отступы и высоту слайдера
		if ($.type(callBack) == "function") {
			callBack(data);
		}

		// Шаг при прокрутке колеса мыши (динамически меняется при изменении высоты скроллируемого блока)
		data.step = setStep(slider, box.css("marginTop"), slider.css("marginTop"));

		// Навешиваем обработчики
		bindHandlers(data);
	}

	// Расчитывает шаг скролла при прокрутке колеса мыши
	function setStep(slider, boxShift, sliderShift) {
		// Размер шага
		var sizeStep = Math.round(parseInt(sliderShift) / Math.abs(parseInt(boxShift)) * 30);
		// Предохранитель (для первого запуска берем произвольное число 15)
		var dataSliderStep = $.type(slider.data("properties")) == "undefined" ? 15 : slider.data("properties").step;
		var result = sizeStep > 0 ? sizeStep : dataSliderStep;
		return result;
	}

	// Обработчики
	function bindHandlers(data) {
		// Записываем данные в скроллер и навешиваем обработчик mousedown
		data.slider.data("properties", data)
			.off(".scrollbar").on("mousedown.scrollbar", mouseDownHandler);

		// Обработчик для события mousewheel
		data.wrapper.off(".scrollbar").on("mousewheel.scrollbar", mouseWheelHandler);

		// Создаем custom event для возможности выключения скролла из вне
		data.wrapper.on("cancelScroll.scrollbar", mouseUpHandler);
	}

	// Обработчик при событии mousedown
	function mouseDownHandler(e) {
		var data = $(this).data("properties");
		// Записываем новые данные
		data.shiftY = e.pageY - parseInt(data.slider.css("marginTop"));
		// Навешиваем обработчики mousemove & mouseup
		$(globalObject)
			.on("mousemove.scrollbar", function (e) { mouseMoveHandler(e, data); })
			.on("mouseup.scrollbar mouseleave.scrollbar", mouseUpHandler); //mouseleave делаем то же что и при mouseup
		// Убираем выделение текста
		switchTextSelection(true);
		return false;
	}

	// Обработчик при событии mousemove
	function mouseMoveHandler(event, data) {
		var clickY = event.pageY;
		var shiftY = data.shiftY;
		// Ставим координаты для ползунка и скроллируемого блока
		setPosition(clickY - shiftY, data);
		return false;
	}

	// Обработчик при проскролливании мышью на контейнере
	function mouseWheelHandler(event, delta) {
		var data = $(this).find("." + sliderClass).data("properties");
		var currSliderShift = parseInt(data.slider.css("marginTop"));
		var switcher = (delta < 0) ? 1 : -1;
		setPosition(currSliderShift + (switcher * data.step), data);
		return false;
	}

	// Обработчик при событии mouseup
	function mouseUpHandler() {
		$(globalObject).off(".scrollbar");
		// возвращаем выделение текста
		switchTextSelection(false);
		return false;
	}

	// Установка позиции ползунка и скроллируемого блока
	function setPosition(newPos, data) {
		var marginTop = 0;
		// Ниже идут проверк,и вылезет ли ползунок за пределы родительского блока
		if (newPos <= data.sliderTrackHeight && newPos >= 0) {
			marginTop = newPos;
		} else {
			if (newPos >= data.sliderTrackHeight) {
				marginTop = data.sliderTrackHeight;
			}
			if (newPos <= 0) {
				marginTop = 0;
			}
		}
		// положение ползунка
		data.slider.css("marginTop", Math.round(marginTop));
		// передвинем скроллируемый блок
		data.box.css("marginTop", Math.round(marginTop * data.delta * (-1)));
	}

	// Включение/выключение выделения текста
	function switchTextSelection(disable) {
		document.body.onselectstart = function () { return !disable; };
		document.body.unselectable = disable ? "on" : "off";
		$(document.body).css("-moz-user-select", disable ? "none" : "auto");
	}


	$.fn.scrollbar = function (parameter) {
		if ($.type(parameter) == "string") {
			// Вызов метода по имени
			var method = methods[parameter];
			if (typeof method == "function") {
				return method.apply(this, Array.prototype.slice.call(arguments, 1));
			} else {
				throw new Error("jQuery.scrollbar: Method `" + parameter + "' does not exist");
			}
		}

		// Передача параметров или вызов без параметров - по умолчанию вызываем init
		if (typeof parameter == "object" || arguments.length == 0) {
			return methods.init.apply(this, arguments);
		}

		throw new Error("jQuery.scrollbar: Invalid parameters");
	};
})(jQuery);(function ($) {
	$.fn.serializeObject = function () {
		var result = { };
		var a = this.serializeArray();

		for (var i = 0; i < a.length; i++) {
			var element = a[i];
			if (typeof(result[element.name]) == "undefined") {
				result[element.name] = element.value || '';
			} else {
				if (!(result[element.name] instanceof Array)) {
					result[element.name] = [result[element.name]];
				}
				result[element.name].push(element.value || '');
			}
		}

		return result;
	};
})(jQuery);/*
	Синтаксис:

	$.showInfoPopup(text) - показать text в всплывающем окне

	$.showInfoPopup(texts) - показать всплывающее окно со следующими текстами (если присутствуют):
		texts.text - текст сообщения
		texts.title - заголовок окна с сообщением
		texts.closeButtonText - текст кнопки закрытия

	text может быть строкой или jQuery-объектом, если нужно в качестве текста показать что-то сложное
*/

(function ($) {
	var popup = $(".js-info-popup"),
		popupTitleSelector = ".js-popup-title",
		popupTextSelector = ".js-popup-text",
		closeButtonSelector = ".js-close-link",
		queue = new ActionsQueue();

	if (popup.length == 1) {
		popup.popup("takeSnapshot");
		popup.bind("afterClosePopup", queue.runNext);
	}

	$.showInfoPopup = function (texts, callbackOnClose) {
		if (popup.length != 1) {
			throw new Error("Info popup not found");
		}

		queue.enqueue(function () {
			popup.popup("restoreSnapshot");

			var title = null, text = null, closeButtonText = null;
			if ($.type(texts) == "string") {
				text = texts;
			} else if (typeof texts == "object" && texts != null) {
				title = texts.title;
				text = texts.text;
				closeButtonText = texts.closeButtonText;
			} else {
				throw new Error("Invalid arguments");
			}

			if (text == null || text == "") {
				throw new Error("Text expected");
			}
			if ($.type(text) != "string" && !(text instanceof $)) {
				throw new Error("Text must be string or jQurey object");
			}

			var textNode = popup.find(popupTextSelector);
			textNode.empty();
			if (text instanceof $) {
				textNode.append(text);
			} else {
				textNode.text(text);
			}

			if (title != null) {
				popup.find(popupTitleSelector).text(title);
			}
			if (closeButtonText != null) {
				popup.find(closeButtonSelector).text(closeButtonText);
			}

			if (typeof callbackOnClose == "function") {
				popup.bind("afterClosePopup.infoPopup", function () {
					$(document).off("keydown.infoPopup");
					popup.unbind("afterClosePopup.infoPopup");
					callbackOnClose();
				});
			}
			popup.popup("show");

			// закрываем инфо-попап по Enter или Esc
			$(document).on("keydown.infoPopup", function (e) {
				if (e.keyCode == 13 || e.keyCode == 27) {
					popup.popup("hide");
				}
			});
		});
	};

})(jQuery);/*
	Метод плавного показа/скрытия сообщений. Вызывается на элементе, дочерние элементы которого представляют собой сообщения.

	Синтаксис команд:

	messages.smoothMessages("init", options) - инициализация, должна быть проведена до вызова любых других команд
		options.animationDuration - продолжительность анимации
		options.selectorPrefix - префикс, к которому будут дописываться имена сообщений для получения селектора элемента с сообщением
	messages.smoothMessages("show", selector) - показать сообщение selector
	messages.smoothMessages("hide", selector) - спрятать сообщение selector
	messages.smoothMessages("toggle", selector, show) - показать сообщение selector, если show == true,
		и спрятать в противном случае
	messages.smoothMessages("check", selector) - возвращает true, если сообщение selector показано, иначе false
	messages.smoothMessages("checkAny") - возвращает true, если показано хотя бы одно сообщение, иначе false
	messages.smoothMessages("hideAll") - скрывает все сообщения
	messages.smoothMessages("add", element) - добавляет element в конец контейнера с сообщениями и отображает его
*/
(function ($) {

	window.AnimationDuration = 300;

	var parametersDataKey = "SmoothMessagesParameters",
		isShownDataKey = "SmoothMessagesIsShown",
		animationDurationKey = "animationDuration",
		selectorPrefixKey = "selectorPrefix",
		animationQueueKey = "animationQueue";

	$.fn.smoothMessages = function (command, a, b) {
		if ($.type(command) != "string" || command == "") {
			throw new Error("String command expected");
		}

		switch (command) {
			case "init":
				init(this, a);
				break;
			case "show":
				return this.smoothMessages("toggle", a, true);
			case "hide":
				return this.smoothMessages("toggle", a, false);
			case "toggle":
				toggle(this, a, b);
				break;
			case "check":
				return check(this, a);
			case "checkAny":
				return checkAny(this);
			case "hideAll":
				hideAll(this);
				break;
			case "add":
				return add(this, a);
			default:
				throw new Error("Unknown command: " + command);
		}

		return this;
	};

	function getParameters(messagesElement) {
		var parameters = messagesElement.data(parametersDataKey);
		if (parameters == null) {
			throw new Error("init command must be executed before any other");
		}
		return parameters;
	}

	function init(messagesElement, parameters) {
		if (parameters == null) {
			throw new Error("Parameters are required");
		}
		var parametersData = {};
		parametersData[animationDurationKey] = parameters[animationDurationKey] ? parameters[animationDurationKey] : window.AnimationDuration;
		parametersData[selectorPrefixKey] = parameters[selectorPrefixKey] ? parameters[selectorPrefixKey] : "";
		parametersData[animationQueueKey] = new ActionsQueue();
		messagesElement.data(parametersDataKey, parametersData);
	}

	function toggle(messagesElement, selector, show) {
		if ($.type(selector) != "string" || selector == "") {
			throw new Error("String error name expected");
		}
		if ($.type(show) != "boolean") {
			throw new Error("Boolean value expected");
		}

		var parameters = getParameters(messagesElement),
			messageSelector = parameters[selectorPrefixKey] + selector,
			messageElement = messagesElement.children(messageSelector);
		if (show && messageElement.length == 0) {
			throw new Error("No element matches selector " + messageSelector);
		}
		if (messageElement.length > 1) {
			throw new Error("More than one element matches selector " + messageSelector);
		}

		toggleElement(messagesElement, messageElement, show, parameters);
	}

	function toggleElement(messagesElement, messageElement, show, parameters) {
		var animationQueue = parameters[animationQueueKey],
			animationDuration = parameters[animationDurationKey],
			messageShown = !!messageElement.data(isShownDataKey);
		if (messageShown && show || !messageShown && !show) {
			return;
		}
		messageElement.data(isShownDataKey, show);

		animationQueue.enqueue(function () {
			var visibleMessages = messagesElement.children(":visible");
			if (show) {
				if (visibleMessages.length == 0) {
					// Показываем первое сообщение
					messageElement.show();
					messagesElement.slideDown(animationDuration, animationQueue.runNext);
				} else {
					// Уже есть показанные сообщения
					messageElement.slideDown(animationDuration, animationQueue.runNext);
				}
			} else {
				if (visibleMessages.length == 1) {
					// Прячем последнее сообщение
					messagesElement.slideUp(animationDuration, function () {
						messageElement.hide();
						animationQueue.runNext();
					});
				} else {
					// Ещё есть показанные сообщения
					messageElement.slideUp(animationDuration, animationQueue.runNext);
				}
			}
		});
	}

	function check(messagesElement, selector) {
		var parameters = getParameters(messagesElement),
			messageElement = messagesElement.children(parameters[selectorPrefixKey] + selector);
		return !!messageElement.data(isShownDataKey);
	}

	function checkAny(messagesElement) {
		var messageElements = messagesElement.children();
		for (var i = 0; i < messageElements.length; i++) {
			if ($(messageElements[i]).data(isShownDataKey)) {
				return true;
			}
		}
		return false;
	}

	function hideAll(messagesElement) {
		messagesElement.children().each(function () {
			$(this).data(isShownDataKey, false);
		});

		var parameters = getParameters(messagesElement),
			animationQueue = parameters[animationQueueKey],
			animationDuration = parameters[animationDurationKey];

		animationQueue.enqueue(function () {
			if (messagesElement.is(":visible")) {
				messagesElement.slideUp(animationDuration, function () {
					messagesElement.children().hide();
					animationQueue.runNext();
				});
			} else {
				messagesElement.children().hide();
				messagesElement.hide();
				animationQueue.runNext();
			}
		});
	}

	function add(messagesElement, element) {
		var parameters = getParameters(messagesElement),
			newElement = element.appendTo(messagesElement);
		toggleElement(messagesElement, newElement, true, parameters);
	}

})(jQuery);(function ($) {

	var orderByParameterName = "orderBy";
	var descParameterName = "desc";

	function defaultSortValueProvider(row, key, columnNumber) {
		/// предоставляет значение строки для алгоритма сортировки по умолчанию
		return row.children("td").eq(columnNumber).text().compress().toLowerCase();
	}

	function buildHeaderAnchors(sortableTableObject, urlBuilder, clickHandler) {
		/// подмена заголовка таблицы на ссылку с картинками стрелочек для сортировки

		function getArrowImageElement(direction, active) {
			var element = $("<img>").attr("width", 6).attr("height", 4).attr("src", ContentPath + "/img/newImage/1px.png");
			var alt, cssClass = "g-bg g-block ";

			if (direction == "up") {
				cssClass += "l-corpr__thImgUp";
				alt = "\u25B2";
			} else if (direction == "down") {
				cssClass += "l-corpr__thImgDown";
				alt = "\u25BC";
			} else {
				throw new Error("Bad direction: " + direction);
			}

			if (active) {
				cssClass += " active";
			}

			element.attr("class", cssClass).attr("alt", alt);
			return element;
		}

		var activeParams = sortableTableObject.getActiveParameters();

		sortableTableObject.headers.filter("[data-sort-by]").each(function () {
			var th = $(this);
			var active = th.data("sort-by") == activeParams.orderBy;

			var url = (typeof(urlBuilder) == "function") ? urlBuilder.call(sortableTableObject, th, activeParams) : urlBuilder,
				upArrow = getArrowImageElement("up", active && !activeParams.desc),
				downArrow = getArrowImageElement("down", active && activeParams.desc),
				arrows = $("<span></span>").attr("class", "l-corpr__thicons").append(upArrow).append(downArrow),
				href = $("<a></a>").attr("class", "g-block l-corpr__thsort").attr("href", url).text(th.text()).append(arrows);

			th.empty().append(href);

			if (typeof(clickHandler) == "function") {
				href.click(function () {
					var newParameters = sortableTableObject.getNewParameters(th, sortableTableObject.getActiveParameters());
					sortableTableObject.table.data("active-sorting", newParameters.orderBy);
					sortableTableObject.table.data("desc", newParameters.desc);
					clickHandler(newParameters, th);
					return false;
				});
			}
		});
	}


	$.fn.sortableTable = function (initialSorting) {

		if (this.length != 1 || !this.is("table")) {
			throw new Error("sortableTable expects only one table element");
		}

		if (initialSorting) {
			this.data("active-sorting", initialSorting.orderBy);
			this.data("desc", initialSorting.desc);
		}

		return {
			// jQuery-объект, содержащий сортируемую таблицу
			table: this,

			// jQuery-объект, содержащий заголовок сортируемой таблицы
			headers: this.find("th"),

			// дополняет текущий объект из объекта настроек
			extendWith: function (settings) {
				return $.extend(this, settings);
			},

			// сортировка с помощью отправки формы на сервер (POST-запрос)
			byFormPostback: function (form) {
				if (!(form instanceof jQuery)) {
					throw new Error("byFormPostback expects form jQuery object");
				}
				if (form.length != 1) {
					throw new Error("byFormPostback expects exactly one form");
				}

				function setHiddenInput(inputName, value) {
					var input = form.find("input:hidden[name='" + inputName + "']");
					if (input.length == 0) {
						input = $("<input>").attr("type", "hidden").attr("name", inputName).appendTo(form);
					}
					input.val(value);
				}

				buildHeaderAnchors(this, "#", function (newParameters) {
					setHiddenInput(orderByParameterName, newParameters.orderBy);
					setHiddenInput(descParameterName, newParameters.desc);
					form.submit();
				});
				return this;
			},

			// сортировка с помощью отправки запроса на сервер (GET-запрос)
			byGetRequest: function (requestUrl) {
				if (typeof(requestUrl) != "string") {
					throw new Error("byGetRequest expects URL string parameter");
				}

				buildHeaderAnchors(this, function (th, activeParams) {
					var newParams = this.getNewParameters(th, activeParams);

					var urlParams = {};
					urlParams[orderByParameterName] = newParams.orderBy;
					urlParams[descParameterName] = newParams.desc;

					return $.param.querystring(requestUrl, urlParams);
				});
				return this;
			},

			// сортировка с помощью произвольной javascript-функции
			// обработчик сортировки принимает на вход два параметра:
			//	- newParams {orderBy,desc} - параметры заказанной сортировки
			//	- th - заголовок таблицы, на которой был сделан клик
			byHandler: function (handler) {
				var sortableTableObject = this;

				function onClick(newParams, th) {
					handler(newParams, th);
					buildHeaderAnchors(sortableTableObject, "#", onClick);
				}

				buildHeaderAnchors(sortableTableObject, "#", onClick);
				return this;
			},

			// сортировка на стороне клиента
			clientSide: function (sortValueProviders) {
				if (typeof sortValueProviders != "object") {
					sortValueProviders = {};
				}

				var sortableTableObject = this;

				function onClick(newParams, th) {
					var sortValueProvider = sortValueProviders[newParams.orderBy] || defaultSortValueProvider;
					var columnIndex = sortableTableObject.headers.index(th);

					var dataToSort = [];
					var tbody = sortableTableObject.table.children("tbody");
					var rows = tbody.children("tr");
					var alwaysFirstRow = rows.filter(".js-always-first");
					var alwaysLastRow = rows.filter(".js-always-last");
					rows = rows.not(alwaysFirstRow.add(alwaysLastRow));
					var i, row;

					for (i = 0; i < rows.length; i++) {
						row = $(rows[i]);
						var sortValue = sortValueProvider(row, newParams.orderBy, columnIndex);
						row.detach();
						dataToSort.push({ value: sortValue, row: row });
					}

					dataToSort.sort(function (a, b) {
						var result;
						if (a.value > b.value) {
							result = 1;
						} else if (a.value < b.value) {
							result = -1;
						} else if (a.value == b.value) {
							result = 0;
						} else {
							throw new Error("Trichotomy violation");
						}
						return newParams.desc ? -result : result;
					});

					for (i = 0; i < dataToSort.length; i++) {
						row = dataToSort[i].row;

						if (alwaysLastRow.length > 0) {
							row.insertBefore(alwaysLastRow);
						} else {
							tbody.append(row);
						}
					}

					buildHeaderAnchors(sortableTableObject, "#", onClick);
				}

				buildHeaderAnchors(this, "#", onClick);
				return this;
			},

			// возвращает текущие настройки сортировки для таблицы
			getActiveParameters: function () {
				var orderBy = this.table.data("active-sorting");
				var desc = this.table.data("desc") != null && (this.table.data("desc").toString().toLowerCase() == "true");
				return { orderBy: orderBy, desc: desc };
			},

			// возвращает новые параметры сортировки для указанного заголовка таблицы
			getNewParameters: function (th, activeParams) {
				var newSortBy = th.data("sort-by");
				var newDesc = (activeParams.orderBy == newSortBy)
					? !activeParams.desc // Если сортировка по тому же столбцу, меняем направление;
					: (th.data("default-desc") == true); // иначе используем направление по умолчанию для столбца
				return { orderBy: newSortBy, desc: newDesc };
			}
		};
	};
})(jQuery);/*
	Для ячеек таблицы с зарезанием текста многоточиями отображает тултип, если текст зарезан
*/

(function ($) {

	$.fn.titleOnOverflow = function () {
		this.filter("table").each(function () {
			var table = $(this);
			table.on(
				"mouseenter",
				"th,td",
				function () {
					var cell = $(this);
					if (cell.hasClass("js-no-overflow-title")) {
						return;
					}
					if (cell.closest("table")[0] != table[0]) {
						return;
					}

					var text = $.trim(cell.text());
					var span = $('<span style="white-space:nowrap;visible:hidden;"></span>').text(text).prependTo("body");

					if (Boolean(span.width() > cell.width())) {
						cell.attr("title", text);
					} else {
						cell.removeAttr("title");
					}

					span.remove();
				});
		});
		return this;
	};

})(jQuery);(function ($) {
	$.fn.topicDropdownInit = function (options) {

		var settings = $.extend({
			isMultiSelect: false,
			anyTopic: '',
			separator: ',',
			overflowHack: false,
			targetInput: null
		}, options);

		return this.each(function () {
			var element = $(this);

			settings.targetInput = settings.targetInput || element.find("input.js-value");
			var treeview = element.find(".js-tree").dropDownTreeView({
				textSelector: function (selectedNodes) {
					if (selectedNodes.length == 0) {
						return "<span class='g-iblock ui-dropdown-treeview-txtdef'>" + settings.anyTopic + "</span>";
					} else {
						var names = [];
						for (var i = 0; i < selectedNodes.length; i++) {
							names.push("<span class='g-iblock g-bold ui-dropdown-treeview-value'>" + $(selectedNodes[i]).text() + "</span>");
						}
						return names.join("");
					}
				},
				treeOptions: {
					targetInput: settings.targetInput,
					valueSelector: function (li) {
						return li.attr("data-topic-id");
					},
					checkboxes: settings.isMultiSelect,
					valuesSeparator: settings.separator
				}
			});
			if (settings.overflowHack)
				settings.overflowHack(treeview);
			var value = settings.targetInput.val();
			if (typeof (value) == "string" && value.length > 0) {
				treeview.dropDownTreeView("selectNodes", value);
			}
			element.find(".ui-dropdown-treeview-value, .ui-dropdown-treeview-txtdef").addClass("small");
		});
	};
})(jQuery);
(function ($) {
	var treeView = {
		// Настройки по умолчанию
		options: {
			classPrefix: "ui-treeview",
			targetInput: null,
			valueSelector: null,
			checkboxes: false,
			valuesSeparator: null
		},
		_getClasses: function (prefix) {
			if ($.type(prefix) != "string") {
				throw new Error("Prefix must be a string");
			}

			var prefixParts = prefix.split(/\s+/);
			var prefixes = [];
			for (var i = 0; i < prefixParts.length; i++) {
				if (!(/^\s*$/.test(prefixParts[i]))) {
					prefixes.push(prefixParts[i]);
				}
			}

			if (prefixes.length == 0) {
				throw new Error("At least one class prefix must be specified");
			}

			var getClasses = function (localName) {
				var result = "";
				for (var i = 0; i < prefixes.length; i++) {
					if (result.length > 0) {
						result += " ";
					}
					result += prefixes[i] + localName;
				}
				return result;
			};

			return {
				container: getClasses("_container"),
				node: getClasses("_node"),
				contentNode: getClasses("_contentNode"),
				outlineNode: getClasses("_outlineNode"),
				rootNode: getClasses("_rootNode"),
				lastNode: getClasses("_lastNode"),
				leafNode: getClasses("_leafNode"),
				openedNode: getClasses("_openedNode"),
				closedNode: getClasses("_closedNode"),
				rootSubtree: getClasses("_subtree_root"),
				subtree: getClasses("_subtree"),
				lastSubtree: getClasses("_subtree_last"),
				selected: getClasses("_selected"),
				checkbox: getClasses("_checkbox")
			};
		},
		_create: function () {
			var widget = this;
			var options = this.options;
			var classes = this._getClasses(options.classPrefix);

			// Базовая проверка аргументов для быстрого поиска глупых ошибок
			var targetInputPresent = options.targetInput != null;
			var valueSelectorPresent = options.valueSelector != null;
			if (targetInputPresent && !(options.targetInput instanceof jQuery)) {
				throw new Error("Target input must be a jQuery object");
			}
			if (valueSelectorPresent && typeof options.valueSelector != "function") {
				throw new Error("Value selector must be function");
			}
			if (targetInputPresent && !valueSelectorPresent || !targetInputPresent && valueSelectorPresent) {
				throw new Error("Target input and value selector must be provided simultaneously");
			}
			var valuesSeparatorPresent = $.type(options.valuesSeparator) == "string" && options.valuesSeparator.length > 0;
			if (options.checkboxes && targetInputPresent && !valuesSeparatorPresent) {
				throw new Error("To create a tree with ckeckboxes and target input, values separator must be specified");
			}

			function insertNode(node, target, isRoot, isLast, isOpened) {
				if (!node.is("li")) {
					throw new Error("Bad element type, must be <li>");
				}

				var value = options.valueSelector(node);

				var childrenNodes = node.children("ul").children("li");
				var nodesClasses = "";
				if (isRoot) {
					nodesClasses += " " + classes.rootNode;
				}
				if (isLast) {
					nodesClasses += " " + classes.lastNode;
				}
				if (childrenNodes.length == 0) {
					nodesClasses += " " + classes.leafNode;
				} else if (isOpened) {
					nodesClasses += " " + classes.openedNode;
				} else {
					nodesClasses += " " + classes.closedNode;
				}

				var outlineNodeElement = $("<div class='" + [classes.outlineNode, nodesClasses].join(" ") + "'><div class='ui-treeview_nodeiconh'></div><div class='ui-treeview_nodeiconv'></div></div>");

				var contentNodeElement = $("<div class='" + [classes.contentNode, nodesClasses].join(" ") + "'></div>");
				var contents = node.contents().not(node.children("ul"));
				contents.detach();
				contentNodeElement.append(contents.addClass("ui-treeview_nodetext"));
				var checkbox = null;
				if (options.checkboxes) {
					checkbox = $("<input type='checkbox'>").addClass(classes.checkbox);
					contentNodeElement.prepend(checkbox);
					contentNodeElement.find("." + classes.checkbox).checkbox().after("<div class='ui-treeview-separ'></div>");
				}

				if (options.targetInput != null && options.valueSelector != null) {
					if (options.checkboxes) {
						checkbox.change(function () {
							var checked = checkbox.is(":checked");
							if (checked) {
								contentNodeElement.addClass(classes.selected);
							} else {
								contentNodeElement.removeClass(classes.selected);
							}

							if (value.length == 0) {
								return;
							}

							var oldValue = options.targetInput.val();
							if (checked) {
								options.targetInput.val(oldValue + (oldValue.length > 0 ? options.valuesSeparator : "") + value);
							} else {
								var oldValues = oldValue.split(options.valuesSeparator);
								var valueFound = false;
								var newValues = [];
								for (var j = 0; j < oldValues.length; j++) {
									if (oldValues[j] == value && !valueFound) {
										valueFound = true;
									} else if (oldValues[j].length > 0) {
										newValues.push(oldValues[j]);
									}
								}
								options.targetInput.val(newValues.join(options.valuesSeparator));
							}
							// Событие всплывает дальше к контейнеру дерева
						});
						contentNodeElement.click(function (e) {
							if (e.target == checkbox[0]) {
								return true;
							}
							checkbox.click();
							return false;
						});
					} else {
						contentNodeElement.click(function () {
							container.find("." + classes.contentNode).removeClass(classes.selected);
							contentNodeElement.addClass(classes.selected);
							options.targetInput.val(value);
							// Нужно вызвать событие у контейнера
							container.change();
						});
					}
				}

				var nodeElement = $("<div></div>");
				nodeElement.addClass(classes.node).addClass(nodesClasses)
					.append(outlineNodeElement).append(contentNodeElement)
					.data("value", value);
				target.append(nodeElement);

				if (childrenNodes.length > 0) {
					var subtreeElement = $("<div></div>");
					var subtreeClass;
					if (isRoot) {
						subtreeClass = classes.rootSubtree;
					} else if (isLast) {
						subtreeClass = classes.lastSubtree;
					} else {
						subtreeClass = classes.subtree;
					}
					subtreeElement.addClass(subtreeClass);
					if (!isOpened) {
						subtreeElement.hide();
					}
					target.append(subtreeElement);
					outlineNodeElement.click(function () {
						widget.setNodeExpanded(nodeElement, subtreeElement.is(":hidden"), true);
					});

					for (var i = 0; i < childrenNodes.length; i++) {
						insertNode($(childrenNodes[i]), subtreeElement, false, i == childrenNodes.length - 1, false);
					}
				}
			}

			var container = this.element;
			var rootList = container.children();
			if (!container.is("div") || rootList.length != 1 || !rootList.is("ul")) {
				throw new Error("This method must be called for <div> element that contains one <ul> element and nothing more.");
			}

			container.addClass(classes.container);
			rootList.children("li").each(function () {
				insertNode($(this), container, true, false, false);
			}).remove();
		},
		setNodeExpanded: function (node, expanded, animate) {
			if (animate == null) {
				animate = false;
			}
			if (!(node instanceof jQuery) || $.type(expanded) != "boolean" || $.type(animate) != "boolean") {
				throw new Error("Invalid types");
			}

			var options = this.options;
			var classes = this._getClasses(options.classPrefix);

			var outlineNode = node.children("." + classes.outlineNode);
			var contentNode = node.children("." + classes.contentNode);
			var nodes = node.add(outlineNode).add(contentNode);

			var setClass;
			if (expanded) {
				setClass = function () {
					nodes.removeClass(classes.closedNode).addClass(classes.openedNode);
				};
			} else {
				setClass = function () {
					nodes.removeClass(classes.openedNode).addClass(classes.closedNode);
				};
			}

			var subtree = node.next("div");
			if (expanded) {
				if (animate) {
					subtree.slideDown("fast", setClass);
				} else {
					subtree.show();
					setClass();
				}
			} else {
				if (animate) {
					subtree.slideUp("fast", setClass);
				} else {
					subtree.hide();
					setClass();
				}
			}
		},
		getSelectedNodes: function () {
			var options = this.options;
			var classes = this._getClasses(options.classPrefix);
			return this.element.find("." + classes.contentNode + "." + classes.selected);
		},
		setSelectedNodes: function (value) {
			var self = this;
			var options = this.options;
			var classes = this._getClasses(options.classPrefix);
			var values = value.split(options.valuesSeparator);
			this.element
				.find("." + classes.contentNode + "." + classes.selected).removeClass(classes.selected).end()
				.find('input:checkbox').removeAttr("checked").change();
			var nodes = this.element.find("." + classes.node).filter(function () {
				return ($.inArray($(this).data("value"), values) >= 0);
			});
			nodes.find("." + classes.contentNode).addClass(classes.selected).end()
				.find('input:checkbox').attr("checked", "checked").change();
			if (nodes.length == 1) {
				$.each(nodes.parents().prev("." + classes.node).toArray().reverse(), function (i, node) {
					self.setNodeExpanded($(node), true, false);
				});
			}
		}
	};

	$.widget("ui.treeView", treeView);
})(jQuery);/***** Плагин водяных знаков в полях *****/
/*
Если нужно убрать добавление цвета для фона текстового поля, добавляем атрибут <textarea data-background="none"></textarea>
Если нужно поменять цвет для фона, добавляем атрибут <textarea data-background="#000"></textarea>
Если нужно поменять цвет для текста, добавляем атрибут <textarea data-color="#000"></textarea>
*/
(function ($) {
	var jsClassWatermark = "js-wtrmark",
		jsClassWatermarkText = "js-wtrmark-text",
		classWatermark = "g-wtrmark",
		classWatermarkText = "g-wtrmark__text",
		classWatermarkBackground = "g-wtrmark-bg",
		classWatermarkBackgroundIEFix = "g-wtrmarkIE678-bg",
		classBlurText = "blurtext",
		classHideText = "hidetext",
		cssPaddingTop = "paddingTop",
		cssPaddingRight = "paddingRight",
		cssPaddingBottom = "paddingBottom",
		cssPaddingLeft = "paddingLeft",
		cssMarginTop = "marginTop",
		cssMarginLeft = "marginLeft",
		cssBorderTopWidth = "borderTopWidth",
		cssBorderRightWidth = "borderRightWidth",
		cssBorderBottomWidth = "borderBottomWidth",
		cssBorderLeftWidth = "borderLeftWidth",
		cssFontWeight = "fontWeight",
		cssFontSize = "fontSize";

	var cssProperties = [
		cssPaddingTop,
		cssPaddingRight,
		cssPaddingBottom,
		cssPaddingLeft,
		cssMarginTop,
		cssMarginLeft,
		cssBorderTopWidth,
		cssBorderRightWidth,
		cssBorderBottomWidth,
		cssBorderLeftWidth,
		cssFontWeight,
		cssFontSize
	];

	function isIE(ver) {
		if ($.type(ver) == "number")
			return $.browser.msie && $.browser.version <= ver;
		else
			return $.browser.msie;
	}

	function getProperties(element) {
		if (element.width() <= 0 || element.height() <= 0) {
			Logger.warning("Element has zero size, watermark will not work.\nElement class: " + element.attr("class"));
		}

		var textFromData = element.data("watermark-text");
		var result = {
			title: textFromData ? textFromData : element.attr("title"),
			width: element.width(),
			height: element.height(),
			fontSize: element.css(cssFontSize),
			fontWeight: element.css(cssFontWeight),
			background: element.data("background"),
			color: element.data("color"),
			wrapClass: element.data("wrapper-class")
		};

		$.each(cssProperties, function (i, property) {
			result[property] = parseInt(element.css(property));
		});

		return result;
	}

	function checkValue(ev) {
		var input = $(ev.currentTarget);
		var watermark = input.parent("." + jsClassWatermark);
		var isEmptyVal = input.val() == "";
		if (ev.type == "focus")
			watermark.addClass(classBlurText);
		else if (ev.type == "blur")
			watermark.removeClass(classBlurText);
		watermark.toggleClass(classHideText, !isEmptyVal);
	}

	// Проверять с некоторым интервалом, не изменилось ли значение. Когда изменится, пересчитать всё и остановить проверки
	function pollForChanges(input) {
		var valueBefore = input.val();
		var timer = setInterval(function () {
			if (input.val() != valueBefore) {
				clearInterval(timer);
				checkValue(input);
				input.trigger("autoresize.dynSiz");
			}
		}, 200);
	}

	$.fn.watermark = function (param) {
		var elements = this.filter("textarea, input:not(:button,:checkbox,:file,[type=hidden],:image,:radio,:reset,:submit)");

		if ($.type(param) == "string") {
			if (param == "checkValue") {
				elements.each(function () {
					checkValue($(this));
				});
			}
			return this;
		}

		elements.each(function () {
			var element = $(this);

			// Если водные знаки уже были созданы - заново повесим на них события.
			// Нужно в попапах, которые сбрасываются при закрытии.
			var watermark;
			if (element.parent("." + jsClassWatermark).length > 0) {
				watermark = element.prev("." + jsClassWatermarkText);
			} else {
				var properties = getProperties(element);
				var totalClassWatermark = jsClassWatermark + " " + classWatermark;
				if (properties.wrapClass != null)
					totalClassWatermark = totalClassWatermark + " " + properties.wrapClass;

				var wrapper = $("<span class='" + totalClassWatermark + "'></span>").css({
					position: "relative",
					display: "inline-block",
					background: (properties.background == null) ? "#fff" : properties.background,
					zoom: isIE(7) ? 1 : null
				});

				watermark = $("<span class='" + classWatermarkText + " " + jsClassWatermarkText + "'>" + properties.title + "</span>").css({
					position: "absolute",
					zIndex: 2,
					textAlign: "left",
					textOverflow: "ellipsis",
					overflow: "hidden",
					left: properties[cssPaddingLeft] + properties[cssMarginLeft] + properties[cssBorderLeftWidth] + 2,
					top: properties[cssPaddingTop] + properties[cssMarginTop] + properties[cssBorderTopWidth],
					width: properties.width,
					height: properties.height,
					fontWeight: properties.fontWeight,
					fontSize: properties.fontSize,
					color: (properties.color == null) ? element.css("color") : properties.color
				});

				element.css({
					position: "relative",
					top: isIE(7) ? 0 : "",
					left: isIE(7) ? 0 : "",
					zIndex: 3,
					verticalAlign: (element[0].tagName.toLowerCase() == "textarea" && !isIE()) ? "top" : "",
					"float": isIE(7) ? "left" : ""
				}).addClass(isIE(8) ? classWatermarkBackgroundIEFix : classWatermarkBackground);

				element.wrap(wrapper).before(watermark);
			}
			watermark.click(function () { element.focus(); });
			checkValue({ currentTarget: element });
		});

		elements.unbind("focus.watermark blur.watermark").bind("focus.watermark blur.watermark", function (e) {
			// Фокус/потеря фокуса - надо проверять, пусто ли значение
			checkValue(e);
		}).unbindInputEvents("watermark").bindInputEvents("watermark", function (e) {
			// Пользовательский ввод - проверяем, пусто ли значение
			checkValue(e);
		}).unbind("mousedown.watermark").bind("mousedown.watermark", function (e) {
			if (e.which > 1) {
				// Нажатие не левой кнопки мыши. Ожидаем действия типа вставки, регулярно проверяя значение на изменения
				pollForChanges($(this));
			}
		});

		return this;
	};
})(jQuery);$(document).ready(function () {
	var tabs = $(".js-tabs");
	var contents = $(".js-tabs-content");
	tabs.click(function () {
		var self = $(this);
		var id = self.data("id");
		tabs.removeClass("selected").filter("[data-id='" + id + "']").addClass("selected");
		contents.addClass("g-hidden").filter("[data-id='" + id + "']").removeClass("g-hidden");
	});

	$('.js-link-learn-more').click(function () {
		var self = $(this);
		var newText = self.data("switch-text");
		var oldText = self.html();
		self.html(newText).data("switch-text", oldText);
		$('.js-switch-learn-more').slideToggle();
		return false;
	});
});(function ($) {
	function executeGenericCommand(json) {
		switch (json.GenericCommand) {
			case "Refresh":
				window.location.replace(document.location.href);
				return true;
			case "Redirect":
				if (json.Url == null) {
					throw new Error("Redirect command without URL specified");
				}
				window.location.replace(json.Url);
				return true;
			case "AuthenticationLost":
			case "EnterpriseAuthenticationLost":
			case "AuthorizationLost":
				alert(app.texts[json.GenericCommand]);
				return true;
			case "EnterpriseGlossaryNotFound":
				alert(app.texts[json.GenericCommand]);
				window.location.replace(app.utils.localizeUrl("/Enterprise/Glossaries"));
				return true;
			case "EnterpriseAccountDeactivated":
				var texts = app.texts[json.GenericCommand],
					text = texts.text.replace("{0}", json.AccountName),
					link = $("<a class='g-red-link'></a>");
				link.attr("href", "mailto:" + json.MailToAddress);
				link.text(json.MailToTitle);

				$.showInfoPopup(
					$.extend({}, texts, { text: $("<span></span>").text(text).add($("<br>")).add(link) }),
					function () {
						window.onbeforeunload = null;
						window.location.reload();
					});
				return true;
			default:
				return false;
		}
	}

	// Показать пользователю сообщение, что AJAX-запрос сломался
	function showErrorMessage(requestUrl) {
		if (windowIsUnloading) {
			// Если страница закрывается, никаких сообщений показывать не нужно
			return;
		}

		var message = app.texts.AjaxErrorMessage;
		// для JSONP запросов на https с http-страницы - специальное сообщение
		// видимо, браузер клиента не доверяет серверному сертификату
		if ($.type(requestUrl) == "string") {
			if (requestUrl.startsWith("https:") && (window.location.protocol == "http:")) {
				message = app.texts.HttpsAjaxErrorMessage;
			}
		}
		alert(message);
		$(document.body).removeClass("g-waiting");
	}

	var postFilters = [];
	// Зарегистрировать фильтр на результат AJAX-вызова.
	// Фильтр - функция, принимающая на вход JSON-ответ сервера и возвращающая true, если обработка
	// ответа произведена фильтром, и вызывать переданный в $.ajax обработчик не нужно.
	$.registerAjaxPostFilter = function (filter) {
		if (typeof filter != "function") {
			throw new Error("Filter must be a function");
		}
		postFilters.push(filter);
	};

	// Модификация $.ajax
	var $ajax = $.ajax;
	$.ajax = function (v1, v2) {
		var settings, url, i;
		if ($.type(v1) == "string") {
			url = v1;
			settings = v2;
		} else {
			settings = v1;
		}
		if (settings == null) {
			settings = {};
		}
		if (url != null) {
			settings.url = v1;
		}

		if ($.type(settings.url) != "string" || settings.url == "") {
			throw new Error("URL is missing");
		}

		// Предотвращение кеширования AJAX-запросов путём дописывания уникального параметра.
		// Кеширование AJAX в IE является реальной проблемой.
		var randomParam = {};
		randomParam["random_" + getUniqueString()] = 1;
		settings.url = $.param.querystring(settings.url, randomParam);

		var track = !!settings.track;
		delete settings.track;

		var completing = settings.completing;
		delete settings.completing;

		var success = settings.success;
		settings.success = function (data, textStatus, jqXhr) {
			$(document.body).removeClass("g-waiting");
			if (typeof completing == "function") {
				completing();
			}

			var dataAsJson = data;
			if ($.type(data) != "object") {
				// Результат запроса - не объект
				var responseContentType = jqXhr.getResponseHeader("Content-Type");
				var responseIsJson = responseContentType != null && responseContentType.startsWith("application/json");
				if ($.type(data) == "string" && responseIsJson) {
					// Сервер вернул JSON, просто запрос подразумевал ответ другого типа
					dataAsJson = $.parseJSON(data);
				} else {
					dataAsJson = null;
				}
			}

			if (dataAsJson != null) {
				if (executeGenericCommand(dataAsJson)) {
					return;
				}
				for (i = 0; i < postFilters.length; i++) {
					var filter = postFilters[i];
					if (filter(dataAsJson)) {
						return;
					}
				}
			}

			if (typeof success == "function") {
				success(data, textStatus, jqXhr);
			} else if (success instanceof Array) {
				for (i = 0; i < success.length; i++) {
					var successElement = success[i];
					if (typeof successElement == "function") {
						successElement(data, textStatus, jqXhr);
					}
				}
			}
		};

		var error = settings.error;
		settings.error = function (jqXhr, textStatus, errorThrown) {
			$(document.body).removeClass("g-waiting");
			if (typeof completing == "function") {
				completing();
			}

			if (typeof error == "function") {
				error(jqXhr, textStatus, errorThrown);
			} else if (error instanceof Array) {
				for (var i = 0; i < error.length; i++) {
					var errorElement = error[i];
					if (typeof errorElement == "function") {
						errorElement(jqXhr, textStatus, errorThrown);
					}
				}
			}
		};

		$(document.body).addClass("g-waiting");

		var result = $ajax(settings);

		if (track && window.yaCounter != null) {
			window.yaCounter.hit(settings.url);
		}

		return result;
	};

	// Транспорт, реализующий JSONP добавлением элемента <script>.
	// Реализация из jQuery, но добавлена обработка ошибок.
	$.ajaxTransport("+script", function (s) {
		// Обрабатываем только кроссдоменные запросы
		if (!s.crossDomain) {
			return null;
		}
		// Если не указано имя функции обратного вызова, то, похоже, этот запрос не является JSONP.
		// В случае, если такое по какой-то причине случилось, отдаём запрос транспорту по умолчанию.
		if ($.type(s.jsonpCallback) != "string") {
			return null;
		}

		// Создаём прокси-функцию обратного вызова, которая позволит нам понять, а был ли он
		var callbackCalled = false;
		var jsonpCallback = window[s.jsonpCallback];

		window[s.jsonpCallback] = function (result) {
			callbackCalled = true;
			jsonpCallback(result);
		};

		var head = document.head || document.getElementsByTagName("head")[0] || document.documentElement;
		var script;

		function cleanUp() {
			if (script) {
				// Говорят, если этого не сделать, в IE будет утечка памяти
				script.onload = script.onreadystatechange = script.onerror = null;

				// Удаляем элемент <script> из DOM-дерева
				if (head && script.parentNode) {
					head.removeChild(script);
				}

				// Разрешаем собирать объект скрипта
				script = null;
			}
		}

		return {
			send: function (_, callback) {
				script = document.createElement("script");
				script.async = "async";
				script.src = s.url;
				if (s.scriptCharset) {
					script.charset = s.scriptCharset;
				}

				// Стандартные события
				script.onload = function () {
					cleanUp();
					callback(200, "success");
				};

				script.onerror = function () {
					cleanUp();
					callback(500, "error");
					// Глобальные AJAX-события не вызываются для кроссдоменных запросов.
					// Вызываем наш обработчик вручную.
					showErrorMessage(s.url);
				};

				if (typeof (script.onreadystatechange) != "undefined") { // Может быть null, и скорее всего есть
					// Событие Internet Explorer
					script.onreadystatechange = function () {
						if (script.readyState != null && /loaded|complete/.test(script.readyState)) {
							// Скрипт объявлен загруженным, но это может значить, что произошла ошибка.
							// Проверяем, была ли вызвана обёрточная функция.
							if (callbackCalled) {
								script.onload();
							} else {
								script.onerror();
							}
						}
					};
				}

				head.insertBefore(script, head.firstChild);
			},
			abort: cleanUp
		};
	});

	$(document).ajaxError(function (event, jqXhr) {
		if (!jqXhr.suppressAjaxError) {
			showErrorMessage();
		}
	});
})(jQuery);// Скрипт для форм, которые должны посылаться через AJAX

$(function () {

	// отображение результатов запроса
	function presentRequestResult(container, result, slideUpMessages) {
		if (typeof (slideUpMessages) == "undefined") {
			slideUpMessages = true;
		}
		var errorsBlock = container.find(".js-dynamic-errors");
		if (result.Errors && errorsBlock.length == 1) {
			for (var key in result.Errors) {
				if (result.Errors[key] != null && result.Errors[key] != "") {
					var err = $('<p class="js-error-ajax-form" />').attr("data-key", key).text(result.Errors[key]);
					errorsBlock.smoothMessages("add", err);
				}
			}
		}
		if (result.Message) {
			var msg = container.find(".js-ajax-response-message").removeClass("error").addClass("success").html(result.Message).show();
			if (slideUpMessages) {
				msg.delay(4000).slideUp(1000);
			}
		}
	}
	window.presentRequestResult = presentRequestResult;

	// отсылка формы через ajax
	// TO DO - перевести на jquery плагин
	$(".js-ajax-form-submit").live("submit.ajaxForm", function (e) {
		e.preventDefault();
		var form = $(this);
		var handler = form.data("submitOneTimeHandler");
		if (typeof (handler) == 'function') {
			handler();
			form.removeData("submitOneTimeHandler");
			return false;
		}
		form.find(".js-dynamic-errors .js-error-ajax-form").remove();
		var formData = form.serialize();
		var miscData = form.data('postback-data');
		if (miscData != null) {
			formData = $.extend(formData, miscData);
		}
		var event = $.Event("beforeAjaxRequest");
		form.trigger(event);
		if (event.isDefaultPrevented()) {
			return false;
		}
		$.ajax({
			track: true,
			url: form.attr("action"),
			type: "POST",
			data: formData,
			success: function (result) {
				presentRequestResult(form, result, form.data('slideUp'));
				form.trigger("ajaxResponse", result);
			}
		});
		return false;
	});



	// попап для выполнения ajax-постбека с предварительным запросом подтверждения
	// TO DO - перевести на jquery плагин
	window.confirmedPostback = function (options) {
		options = $.extend(
			{ popup: $(".js-popup-confirm") },
			options);

		var popup = options.popup;
		var dynamicErrors = popup.find(".js-dynamic-errors");
		if (!popup.data("errorsInitialized")) {
			dynamicErrors.smoothMessages("init", { selectorPrefix: ".js-error-" });
			popup.data("errorsInitialized", true);
		}
		dynamicErrors.hide().children().remove();
		var header = popup.find('.js-header').html(options.texts.header).show();
		var confirmText = popup.find('.js-confirm-text').html(options.texts.message).show();
		var submitBtn = popup.find('.js-submit-btn').val(options.texts.button).trigger("changeVal.btn");
		var cancelBtn = popup.find('.js-cancel-btn').show();
		var form = popup.find('form')
			.attr('action', options.url)
			.data('postback-data', options.data)
			.data('slideUp', false);
		form.unbind('beforeAjaxRequest').bind('beforeAjaxRequest', function () {
			cancelBtn.hide();
		});
		form.unbind('ajaxResponse').bind('ajaxResponse', function (event, result) {
			if (options.responseHandler) {
				result = options.responseHandler(result);
			}

			if (result.Success) {
				popup.popup("hide");
			} else {
				submitBtn.val(submitBtn.data('close-text')).trigger("changeVal.btn");
				form.data("submitOneTimeHandler", function () {
					popup.popup("hide");
				});
			}
			if (options.completeCallback) {
				options.completeCallback(result);
			}
		});
		cancelBtn.unbind('click').bind('click', function () {
			if (options.completeCallback) {
				options.completeCallback({ Success: false });
			}
		});

		popup.bind("afterClosePopup", function () {
			form.removeData("submitOneTimeHandler");
		});
		popup.popup("show");
	};
});$(function () {
	// Отображение другого кода
	$(document).on("click", ".js-captcha-refresh", function () {
		var image = $(this).siblings("img");
		if (image.length == 1) {
			var oldAddressParts = image.attr("src").split("?");
			var oldPath = oldAddressParts[0];
			var oldQuery = oldAddressParts.length > 1 ? "?" + oldAddressParts[1] : "";
			var newAddress = oldPath.replace(/\/[^\/]*$/, "/") + getUniqueString() + oldQuery;
			image.attr("src", newAddress);
		}
	});
});$(function () {
	var feedbackPopup = $(".js-feedback-popup");

	if (feedbackPopup.length == 0) {
		return;
	}

	function initPopup() {
		var form = feedbackPopup.find("form"),
			text = form.find("textarea[name='text']"),
			subject = form.find("select[name='subject']"),
			dynamicErrors = form.find(".js-dynamic-errors");

		text.maxLength(5000);
		subject.dropdownlist({
			modifClass: "subject",
			boxWidth: 470,
			boxHeight: 26,
			watermark: app.texts.feedbackTypeWatermark
		});

		feedbackPopup.unbind("afterClosePopup").bind("afterClosePopup", function () {
			if (feedbackPopup.feedbackSent) {
				$.showInfoPopup({
					text: app.texts.feedbackThanks.message,
					title: app.texts.feedbackThanks.title,
					closeButtonText: app.texts.feedbackThanks.button
				});
			}
		});

		dynamicErrors.children().addClass("g-hidden");
		dynamicErrors.smoothMessages("init", { selectorPrefix: ".js-error-" });

		text.bindInputEvents(function () {
			if (text.val().trim() != "") {
				text.toggleModelError("text", false);
				dynamicErrors.smoothMessages("hide", "text");
			}
		});

		function validate() {
			dynamicErrors.smoothMessages("hideAll");

			var textValid = text.val().trim() != "";
			showOrHideError(text, "text", textValid);
			return textValid;
		}

		function showOrHideError(input, inputName, valid) {
			input.toggleModelError(inputName, !valid);
			dynamicErrors.smoothMessages("toggle", inputName, !valid);
		}

		form.find("input[type=submit]").click(function () {
			if (!validate())
				return false;

			form.ajaxSubmit({
				type: "POST",
				success: function (result) {
					if (result.Success) {
						feedbackPopup.feedbackSent = true;
						feedbackPopup.popup("hide");
					} else {
						var errors = result.Errors;
						for (var inputName in errors) {
							errors[inputName] = [errors[inputName]];
						}

						showModelErrors(errors, feedbackPopup, dynamicErrors);
					}
				}
			});
			return false;
		});
	}

	feedbackPopup.popup("setup", {
		resetOnHide: true,
		initFunction: initPopup
	});

	$(".js-feedback-trigger").click(function () {
		feedbackPopup.feedbackSent = false;
		feedbackPopup.popup("show");
		return false;
	});

});$(function () {
	// Водяные знаки
	$(".js-jq-watermark").watermark();

	// Сортируемые таблицы
	$(".js-sortable-table").each(function () {
		var table = $(this),
			requestUrl = table.data("sort-action"),
			formId = table.data("sort-form");

		if (requestUrl) {
			table.sortableTable().byGetRequest(requestUrl);
			return true;
		} else if (formId) {
			table.sortableTable().byFormPostback($("#" + formId));
		}
	});
});(function ($) {
	$.fn.replacePlaceholderWithCaptcha = function () {
		this.each(replacePlaceholder);
	};

	function replacePlaceholder() {
		var captchaPlaceholder = $(this);
		var newCaptchaImage = $("<img>");
		var placeholderAttributes = captchaPlaceholder.getAttributes();
		for (var attrName in placeholderAttributes) {
			if (attrName.startsWith("data-")) {
				newCaptchaImage.attr(attrName.substr(5), placeholderAttributes[attrName]);
			}
		}
		newCaptchaImage.insertAfter(captchaPlaceholder);
		captchaPlaceholder.remove();
	}
})(jQuery);$(function () {
	$(".js-track-hit").click(function (e) {
		if (window.yaCounter) {
			window.yaCounter.hit($(this).attr("data-track-hit-uri"));
		}
	});
	$('.js-reach-goal').click(function (e) {
		if (window.yaCounter) {
			window.yaCounter.reachGoal($(this).attr('data-track-goal'));
		}
	});
});
// Устанавливает часовой пояс
var now = new Date();
$.cookie("tz", -now.getTimezoneOffset(), { path: "/" });

function makeUrl(param) {
	window.location.hash = param;
}/***** Маленькие языки в короткой форме поиска *****/
$(function () {
	var classes = {
		select: "js-minilang",
		text: "js-minilang-text",
		list: "js-minilang-list",
		option: "js-minilang-item",
		open: "open",
		hide: "g-hidden"
	};
	classes.openSelect = classes.select + "." + classes.open;

	// Скрывает языки
	function _hide(e) {
		$(e).removeClass(classes.open).css('zIndex', '').find("." + classes.list).addClass(classes.hide);
	};

	// Показывает языки
	function _show(e) {
		$(e).addClass(classes.open).css('zIndex', 10).find("." + classes.list).removeClass(classes.hide);
	};

	// Клик в селект
	$("." + classes.select).click(function () {
		var select = $(this);
		var isOpenSelf = select.hasClass(classes.open);
		var lang = select.find("." + classes.text).data("lang");
		var options = select.find("." + classes.option);
		// Скрываем все открытые языки
		_hide("." + classes.openSelect);
		// Если текущий открыт
		if (isOpenSelf) {
			// Скрываем
			_hide("." + classes.openSelect);
		} else {
			// Выделяем активный option
			options.removeClass("selected").filter('[data-lang="' + lang + '"]').addClass("selected");
			// Открываем
			_show(select);
		}
		return false;
	}).change(function (e) {
		// Если это событие было вызвано здесь, а не из вне - выходим
		if (e.internalEvent) return false;
		var select = $(this);
		select.text = select.find("." + classes.text);
		select.val = select.data('value');
		// При изменении синхронизируем значения html и data-lang
		select.text.data("lang", select.val).html(select.val);
	});

	// Клик в опшн селекта
	$("." + classes.option).click(function () {
		var option = $(this);
		var select = option.closest("." + classes.select);
		var selectText = select.find("." + classes.text);
		var optionID = option.data("lang");
		// Меняем html и data-lang на новые
		selectText.html(optionID).data("lang", optionID);
		select.data('value', optionID).trigger({ type: "change", internalEvent: true }); // Инициируем событие change для синхронизации с основными языками
	});

	$("body").bind("keydown keyup", function (e) {
		// При нажатии Esc закрываем все языки
		if (e.keyCode == 27)
			_hide("." + classes.openSelect);
	}).bind("click", function () {
		// При клике в body закрываем все языки
		_hide("." + classes.openSelect);
	});
});// Главная страница - подгрузка новостей порциями

$(".js-more-news").live("click", function (e) {
	e.preventDefault();
	var self = $(this);
	var list = self.parent();
	self.css("display", "hidden");
	$.get(
		self.data("url"),
		function (data) {
			self.replaceWith(data);
			$("html,body").animate({ scrollTop: list.children().last().offset().top }, window.AnimationDuration);
		},
		"html");
	return false;
});
$(function () {
	$(".js-autofocus").bind('click', function () {
		$(this).select();
	}).bind('keydown keyup', function (e) {
		if (!(e.ctrlKey && e.keyCode == 67)) {
			return false;
		}
	});
});$(function () {
	var popup = $(".js-popup-profile");

	if (popup.length == 0) {
		return;
	}

	function initPopup() {
		// Часто встречающиеся элементы управления
		var profileFields = popup.find("input[type='text'].js-profile-field"),
			profileCheckboxes = popup.find("input[type='checkbox'].js-profile-field"),
			profileInputs = popup.find(".js-profile-field"),
			emailInput = popup.find("input[name='email']"),
			dynamicErrors = popup.find(".js-dynamic-errors"),
			saveButtonWrapper = popup.find(".js-save"),
			passwordInputs = popup.find("input[name='password']"),
			newPasswordInputs = popup.find("input[name='newPassword'], input[name='confirmPassword']"),
			allTextFields = profileFields.add(passwordInputs).add(newPasswordInputs),
			profileLabel = popup.find(".js-profile-label");

		// Инициализация
		profileFields.each(function () {
			var input = $(this);
			input.data("val", input.val());
		});
		profileCheckboxes.each(function () {
			var input = $(this);
			input.data("val", input.prop("checked"));
			input.checkbox();
		});
		dynamicErrors.children().addClass("g-hidden");
		dynamicErrors.smoothMessages("init", { selectorPrefix: ".js-error-" });


		// Возвращает true, если хотя бы один элемент управления имеет значение, отличное от того,
		// которое было у него вначале; иначе false.
		function inputsChanged() {
			var result = false;
			profileFields.each(function () {
				var input = $(this);
				if (input.data("val") != input.val().trim()) {
					result = true;
				}
			});
			profileCheckboxes.each(function () {
				var input = $(this);
				if (input.data("val") != input.prop("checked")) {
					result = true;
				}
			});
			newPasswordInputs.each(function () {
				var input = $(this);
				if (input.val().length > 0) {
					result = true;
				}
			});
			return result;
		}

		// Возвращает true, если текущий пароль вводить не надо или он введён; иначе false.
		function passwordFilledIfNeeded() {
			var emailChanged = emailInput.val().trim() != emailInput.data("val");
			var newPasswordEntered = newPasswordInputs.any(function () {
				return $(this).val() != "";
			});

			return (!emailChanged && !newPasswordEntered) || passwordInputs.val() != "";
		}

		// Скрыть или показать дополнительное поле ввода пароля в зависимости от того,
		// изменён ли адрес и видно ли основное поле ввода пароля
		function showOrHidePasswordField() {
			var passwordOnEMailChange = popup.find(".js-password-on-email-change");
			if (emailInput.val().trim() == emailInput.data("val")) {
				// E-mail не был изменён
				passwordOnEMailChange.slideUp(window.AnimationDuration);
			} else {
				// E-mail был изменён
				if ($(".js-profile-password").is(":hidden")) {
					passwordOnEMailChange.slideDown(window.AnimationDuration);
				}
			}
		}

		// Установить значение всех полей ввода пароля в значение только что изменённого
		function synchronizePasswords(changedInput) {
			if (changedInput.attr("name") != "password") {
				return;
			}

			var password = changedInput.val();
			passwordInputs.each(function () {
				var thisInput = $(this);
				var thisPassword = $(this).val();
				if (thisPassword != password) {
					thisInput.val(password);
				}
			});
		}

		// Включить или отключить кнопку сохранения в зависимости от того, есть ли ошибки и изменены ли значения
		function updateSaveButton() {
			var noDynamicErrorsShown = !dynamicErrors.smoothMessages("checkAny");
			var enableSaveButton = noDynamicErrorsShown && inputsChanged() && passwordFilledIfNeeded();
			if (newPasswordInputs.filter(":visible").length > 0) {
				var newPassword = newPasswordInputs.eq(0).val().trim(), confirmPassword = newPasswordInputs.eq(1).val().trim();
				if ((newPassword != "" || confirmPassword != "") && (newPassword != confirmPassword)) {
					enableSaveButton = false;
				}
			}
			saveButtonWrapper.toggleClass("disable", !enableSaveButton);
			saveButtonWrapper.find("input").enable(enableSaveButton);
		}


		// Функции проверки требований к введённых значениям
		function checkEMailValidity(onlyIfErrorShown) {
			if (!dynamicErrors.smoothMessages("check", "email") && onlyIfErrorShown) {
				return;
			}
			// Для пустого адреса не выводим сообщение о некорректности
			var email = emailInput.val().trim();
			var valid = email == "" || $.isValidEMail(email);
			emailInput.toggleModelError("email", !valid);
			dynamicErrors.smoothMessages("toggle", "email", !valid);
			updateSaveButton();
		}

		function checkEmptyFields(onlyIfErrorShown) {
			if (!dynamicErrors.smoothMessages("check", "empty") && onlyIfErrorShown) {
				return;
			}

			passwordInputs.add(newPasswordInputs).toggleModelError("empty", false);

			var showError = false;
			profileFields.each(function () {
				var input = $(this);
				if (input.val().trim() == "") {
					input.toggleModelError("empty", true);
					showError = true;
				} else {
					input.toggleModelError("empty", false);
				}
			});

			dynamicErrors.smoothMessages("toggle", "empty", showError);
			updateSaveButton();
		}

		function checkEmptyPasswords() {
			var showError = false;

			var newPasswordInputsWithoutValue = newPasswordInputs.filter(function () {
				return $(this).val() == "";
			});

			var passwordIsEmpty = passwordInputs.val() == "";
			var newPasswordEntered = newPasswordInputsWithoutValue.length < newPasswordInputs.length;
			var passwordRequired = emailInput.val().trim() != emailInput.data("val") || newPasswordEntered;

			if (passwordIsEmpty && passwordRequired) {
				passwordInputs.toggleModelError("empty", true);
				showError = true;
			}

			if (newPasswordEntered) {
				newPasswordInputsWithoutValue.each(function () {
					$(this).toggleModelError("empty", true);
					showError = true;
				});
			}

			if (showError) {
				dynamicErrors.smoothMessages("show", "empty");
				updateSaveButton();
			}
		}

		function checkPasswordsMatch() {
			var state = {};
			newPasswordInputs.each(function () {
				var input = $(this);
				var name = input.attr("name");
				state[name + "Touched"] = !!input.data("touched");
				state[name + "Value"] = input.val();
			});

			if (!state.newPasswordTouched || !state.confirmPasswordTouched) {
				return;
			}
			if (state.newPasswordValue == "" || state.confirmPasswordValue == "") {
				return;
			}

			var error = state.newPasswordValue != state.confirmPasswordValue;
			dynamicErrors.smoothMessages("toggle", "password-mismatch", error);
			newPasswordInputs.toggleModelError("password-mismatch", error);
			checkEmptyPasswords();
			updateSaveButton();
		}


		// Немедленная проверка введённых значений
		allTextFields.bindInputEvents(function () {
			// Могли поменяться значения
			showOrHidePasswordField();
			synchronizePasswords($(this));
			updateSaveButton();
			// Пустые значения могли стать непустыми
			checkEmptyFields(true);
		});

		profileCheckboxes.bind("click", updateSaveButton);

		profileFields.bind("blur", function () {
			var input = $(this);
			input.val(input.val().trim());
			if (input.val() == "") {
				checkEmptyFields();
			}
		});

		emailInput.bindInputEvents(function () {
			dynamicErrors.smoothMessages("hide", "email-exists");
			checkEMailValidity(true);
		});

		emailInput.bind("blur", function () {
			checkEMailValidity();
		});

		passwordInputs.bindInputEvents(function () {
			passwordInputs.toggleModelError("password", false);
			dynamicErrors.smoothMessages("hide", "password");
		});

		newPasswordInputs.bind("blur", function () {
			var input = $(this);
			if (input.val() != "") {
				input.data("touched", true);
			}
			checkPasswordsMatch();
		});

		newPasswordInputs.bindInputEvents(function () {
			checkPasswordsMatch();
		});


		// Нажатие кнопки "Редактировать"
		popup.find(".js-edit-profile").click(function () {
			profileInputs.not(".immutable").enable().removeClass("disabled");
			profileLabel.removeClass("disabled").find(".js-chckbx").removeClass("disabled");
			popup.find(".js-edit-toggle").toggleClass("g-hidden");
			return false;
		});

		// Нажатие кнопки "Сменить пароль"
		popup.find(".js-change-password").click(function () {
			$(this).addClass("g-hidden");
			popup.find(".js-password-on-email-change").slideUp(window.AnimationDuration);
			popup.find(".js-profile-password").slideDown(window.AnimationDuration);
			return false;
		});

		// Нажатие кнопки "Отмена"
		popup.find(".js-cancel").click(function () {
			profileInputs.enable(false).addClass("disabled");
			profileLabel.addClass("disabled").find(".js-chckbx").addClass("disabled"); ;
			profileFields.each(function () {
				var input = $(this);
				input.val(input.data("val"));
			});
			profileCheckboxes.each(function () {
				var input = $(this);
				input.prop("checked", input.data("val"));
			});
			passwordInputs.val("");
			newPasswordInputs.val("");

			allTextFields.clearModelErrors();
			dynamicErrors.smoothMessages("hideAll");
			updateSaveButton();

			popup.find(".js-edit-toggle").toggleClass("g-hidden");
			popup.find(".js-change-password").removeClass("g-hidden");
			popup.find(".js-profile-password").slideUp(window.AnimationDuration);
			popup.find(".js-password-on-email-change").slideUp(window.AnimationDuration);
			return false;
		});

		saveButtonWrapper.find("input").click(function () {
			checkEmptyPasswords();
			checkPasswordsMatch(true);

			if ($(this).prop("disabled")) {
				return false;
			}

			var form = popup.find("form");
			var url = form.attr("action");
			var dataType = "jsonp";

			if (passwordInputs.val() == "") {
				// Пароль не введён. Для защиты от XSS, используем обычный AJAX-запрос вместо JSONP
				dataType = "json";
				var protocolRegex = new RegExp("^[a-zA-Z]+://");
				var hostRegex = new RegExp("^//[^/]+/");
				url = url.replace(protocolRegex, "//").replace(hostRegex, "/");
			}

			var data = form.serialize();
			form.find(":disabled[name]").each(function () {
				if (data != "") {
					data += "&";
				}
				var disabledInput = $(this);
				data += disabledInput.attr("name") + "=" + encodeURIComponent(disabledInput.val());
			});

			$.ajax({
				type: "GET",
				url: url,
				data: data,
				dataType: dataType,
				jsonp: "callback",
				success: function (result) {
					if (result.Success) {
						// Успех - отображаем сообщение об успехе
						popup.find(".js-popupbox-bd").html(result.Html);

						// Закрытие окна после успешного обновления профиля
						popup.find(".js-success-ok").click(function () {
							window.location.replace(document.location.href);
						});
						if (popup.find(".js-success-ok").length > 0) {
							popup.bind("beforeClosePopup", function () {
								window.location.replace(document.location.href);
							});
						}

						popup.popup("resize", window.AnimationDuration);
					} else {
						// Отображаем ошибки
						showModelErrors(result.Errors, popup, dynamicErrors);
						updateSaveButton();
					}
				}
			});
			return false;
		});
	}

	popup.popup("setup", {
		resetOnHide: true,
		initFunction: initPopup
	});

	// Показ всплывающего окна
	$(".js-link-profile").click(function () {
		popup.popup("show");
		return false;
	});
});var app = app || {};
app.controllers = app.controllers || {};

(function ($, exports) {

	var SearchPanelContoller = app.controllers.create.withRootElement({

		// элементы DOM
		elements: {
			container: ".js-search-panel-cont",
			form: ".js-search-form",
			longForm: ".js-srcpanel-long",
			shortForms: ".js-srcpanel-short",
			hdnSearchMode: "#searchMode",
			searchModeTabs: ".js-search-menu",
			btnSearch: ".js-search-button",
			searchTypeSwitches: ".js-type-search",
			advancedSearchPanel: ".js-advanced-search"
		},

		// обработчики событий DOM
		events: {

			// при фокусе в поле ввода выделяем текст
			"focus .js-source-text,.js-target-text": function (e) {
				var self = $(e.target);
				// eсли вводят не с виртуальной клавиатуры - выделяем текст
				var vk = app.controllers.VirtualKeyboard;
				if ((!vk || !vk.isVisible()) && typeof(e.fromVirtKeyboard) == "undefined" && self.val().length != 0) {
					self.select();
				}
			},

			// по Enter отправляем запрос на сервер
			"keydown .js-source-text,.js-target-text": function (e) {
				if (e.keyCode == 13) {
					e.preventDefault();
					this.form.submit();
					return false;
				}
			},

			// вставка текста из буфера обмена
			"paste .js-source-text,.js-target-text": function (e) {
				var self = $(e.target);
				setTimeout(function () { self.change(); }, 300);
			},

			// проставляем url'ы ссылок на закладках соответственно введенному поисковому запросу
			// проставляем атрибут lang на текстовых полях в полной форме для виртуальной клавиатуры
			"change .js-source-text,.js-target.text,.js-source-lang,.js-target-lang": function () {
				this.searchModeTabs.each(this.proxy(function (ix, el) {
					var link = $(el).find(".js-link");
					link.attr("href", this.buildSearchUrl(link.parent().data("search-mode")));
				}));
				this.longFormControls.tbSearchText.attr("lang", this.getSelectedLanguage(this.longFormControls.ctrlSourceLang));
				this.longFormControls.tbTranslation.attr("lang", this.getSelectedLanguage(this.longFormControls.ctrlTargetLang));
			},

			// рокировка языков в форме поиска
			"click .js-swap-trigger:not(.disabled)": function (e) {
				var container = $(e.target).closest(".js-swap-container");
				var first = container.find(".js-swap-first");
				var second = container.find(".js-swap-second");
				// определяем, это языки в длинной форме или в короткой
				if (first.is("select")) {
					var firstValue = first.val();
					var secondValue = second.val();
					first.val(secondValue).change();
					second.val(firstValue).change();
				} else {
					var firstValue = first.data('value');
					var secondValue = second.data('value');
					first.data('value', secondValue).trigger("change");
					second.data('value', firstValue).trigger("change");
				}
			},

			// при клике на закладке переключаем режим без поиска, если не введен поисковый запрос
			"click .js-search-menu .js-link": function (e) {
				var activeForm = this.getActiveSearchForm();
				if ($.trim(this.getFormControls(activeForm).tbSearchText.val()).length == 0) {
					e.preventDefault();
					var prevActiveTab = this.searchModeTabs.filter(".active").parent();
					prevActiveTab
						.find(".js-text").addClass("g-hidden").removeClass("active").end()
						.find(".js-link").removeClass("g-hidden");

					var activeLink = $(e.target),
						activeTab = activeLink.parent(),
						newSearchMode = activeTab.data("search-mode");
					activeTab.addClass("active").siblings().removeClass("active");
					activeLink.addClass("g-hidden");
					activeTab.find(".js-text").removeClass("g-hidden").addClass("active");
					this.hdnSearchMode.val(newSearchMode);
					this.btnSearch.val(activeTab.data("submit-button-value")).trigger("changeVal.btn");

					// показываем расширенный режим поиска только на закладке с примерами
					if (newSearchMode == "Examples") {
						this.searchTypeSwitches.filter(".advanced").removeClass("g-hidden");
					} else {
						this.longFormControls.tbTranslation.val("").trigger("keyup.watermark");
						this.searchTypeSwitches.addClass("g-hidden");
						this.advancedSearchPanel.slideUp(window.AnimationDuration);
					}

					// дизейбл второго языка и кнопки смены направления для вкладки толкований
					var targetLangSelect = this.$("select.js-target-lang");
					var switchBtn = this.$(".js-swap-trigger");
					if (newSearchMode == "Interpret") {
						targetLangSelect.attr("disabled", "disabled").change();
						switchBtn.addClass("disabled");
					} else if (targetLangSelect.is(":disabled")) {
						targetLangSelect.removeAttr("disabled").change();
						switchBtn.removeClass("disabled");
					}

					// показываем нужную сокращенную форму
					var activeForm = this.getActiveSearchForm();
					if (activeForm != this.longForm) {
						this.shortForms.addClass("g-hidden").removeClass("active");
						activeForm.removeClass("g-hidden").addClass("active");
					}
					return false;
				}
			},

			// переключение между простым и расширенным поиском примеров
			"click .js-type-search": function (e) {
				e.preventDefault();
				this.longFormControls.tbTranslation.val("").trigger("keyup.watermark");
				this.searchTypeSwitches.toggleClass("g-hidden");
				this.advancedSearchPanel.slideToggle(window.AnimationDuration);
				return false;
			},

			// подменяем отправку формы GET-запросом на SEO-оптимизированный url
			"submit .js-search-form": function (e) {
				e.preventDefault();
				window.location.href = this.buildSearchUrl();
				return false;
			}
		},

		// инициализация
		init: function () {

			// поля ввода текстов и выборя языков в основной форме поиска
			this.longFormControls = this.getFormControls(this.longForm);

			// переключение с длинной на короткую форму поиска и обратно при скролле
			if (!/mobile/.test(navigator.userAgent.toLowerCase())) {
				$(window || document).scroll(this.proxy(this.switchFormsOnScroll));
			}

			// инициализация UI
			this.$(".js-source-text").each(function(){
				$(this).autosize({
					callback: function () {
						$(this).css({ opacity: 1 });
					}
				});
			});

			// борьба с автозаполнением полей в браузере
			// чтобы при переходе назад текст в строке поиска и выбранные языки соответствовали результатам поиска
			var actualSearchText = this.$("#ActualSearchText").contents().text();
			var actualTranslation = this.$("#ActualTranslation").contents().text();
			if (actualTranslation) {
				this.longFormControls.tbTranslation.val(actualTranslation);
			}
			if (actualSearchText) {
				this.longFormControls.tbSearchText.val(actualSearchText);
			}
			this.longFormControls.tbSearchText.maxLength(150).focus().select();
			this.setSelectedLanguage(this.longFormControls.ctrlSourceLang, this.$("#ActualSrcLang").contents().text());
			this.setSelectedLanguage(this.longFormControls.ctrlTargetLang, this.$("#ActualTargetLang").contents().text());

			// иконки очистки полей для iPad
			if (/mobile.*safari/i.test(navigator.userAgent.toLowerCase())) {
				// важно, чтобы watermark на полях ввода был уже проинициализирован
				$('<span class="g-srcpanel__ipad-clearicon"><span class="g-bg icon"></span></span>')
					.click(function(e) {
						e.preventDefault();
						$(this).prev("textarea").val("").focus().trigger("keyup.watermark");
						return false;
					})
					.insertAfter(this.longFormControls.tbTranslation.add(this.longFormControls.tbSearchText));
			}

			// дизейбл второго языка для вкладки толкований
			if (this.hdnSearchMode.val() == "Interpret") {
				this.$("select.js-target-lang").attr("disabled", "disabled").change();
			}
		},

		// находит в блоке элементы ввода текста и выбора языков
		getFormControls: function (el) {
			return {
				tbSearchText: el.find(".js-source-text"),	// исходное слово
				tbTranslation: el.find(".js-target-text"),	// перевод
				ctrlSourceLang: el.find(".js-source-lang"),	// исходный язык
				ctrlTargetLang: el.find(".js-target-lang")	// целевой язык
			};
		},

		// сборка url для запроса на поиск
		buildSearchUrl: function (mode) {
			if (!mode) {
				mode = this.hdnSearchMode.val();
			}
			var controls = this.getFormControls(this.getActiveSearchForm()),
				srcLang = this.getSelectedLanguage(controls.ctrlSourceLang).replace("-", ""),
				targetLang = this.getSelectedLanguage(controls.ctrlTargetLang).replace("-", ""),
				text = $.trim(controls.tbSearchText.val()),
				translation = $.trim(controls.tbTranslation.val());

			var url, separator;
			// JavaScript не признаёт не-латинские буквы соответствующими \w. Разрешаем все символы выше нижней половины ASCII.
			if (text.match(/^[\w\- \u0080-\uFFFF]{1,100}$/) && !text.match(/^(COM[1-9]|LPT[1-9]|CON|AUX|PRN|NUL|BIN)$/i)) {
				url = "/" + mode + "/" + srcLang + "-" + targetLang + "/" + encodeURIComponent(text);
				separator = "?";
			} else {
				url = "/Search?searchMode=" + mode + "&searchSrcLang=" + srcLang + "&searchDestLang=" + targetLang + "&searchText=" + encodeURIComponent(text);
				separator = "&";
			}
			if (translation) {
				url += separator + "translation=" + encodeURIComponent(translation);
			}
			return app.utils.localizeUrl(url);
		},

		// возвращает активную поисковую форму (полную или одну из коротких)
		getActiveSearchForm: function () {
			var inShortMode = this.container.hasClass("active");
			return inShortMode ? this.shortForms.filter("." + this.hdnSearchMode.val()) : this.longForm;
		},

		// переключение с длинной на короткую форму поиска и обратно при скролле
		switchFormsOnScroll: function () {
			var windowScrollTop = $(window || document).scrollTop();
			var formSize = {
				top: this.element.offset().top,
				height: this.element.height()
			};

			var activeForm = this.getActiveSearchForm();
			if (windowScrollTop > formSize.top && (activeForm == this.longForm)) {
				// активируем короткую форму поиска
				this.container.addClass("active");
				this.element.height(formSize.height);
				this.longForm.addClass("g-hidden");
				var shortForm = this.getActiveSearchForm();
				shortForm.removeClass("g-hidden").addClass("active");
				this.copyFormValues(this.longFormControls, this.getFormControls(shortForm));
			} else if (windowScrollTop <= formSize.top && (activeForm != this.longForm)) {
				// активируем полную форму поиска
				var shortForm = activeForm;
				this.element.height("auto");
				this.container.removeClass("active");
				this.longForm.removeClass("g-hidden");
				shortForm.addClass("g-hidden").removeClass("active");
				var shortFormControls = this.getFormControls(shortForm);
				this.copyFormValues(shortFormControls, this.longFormControls);
				var isAdvancedMode = Boolean(shortFormControls.tbTranslation.val());
				this.advancedSearchPanel.toggle(isAdvancedMode);
				if (this.hdnSearchMode.val() == "Examples") {
					this.searchTypeSwitches
						.filter(".advanced").toggleClass("g-hidden", isAdvancedMode).end()
						.filter(".simple").toggleClass("g-hidden", !isAdvancedMode);
				} else {
					this.searchTypeSwitches.toggleClass("g-hidden", true);
				}
			}
		},

		// возвращает выбранное значение языка (работает и для полной, и для короткой формы поиска)
		getSelectedLanguage: function (el) {
			return el.is("select") ? el.val() : el.data("value");
		},

		// устанавливает выбранное значение языка (работает и для полной, и для короткой формы поиска)
		setSelectedLanguage: function (el, value) {
			if (el.is("select")) {
				el.val(value);
			} else {
				el.data("value", value);
			}
			el.trigger("change");
		},

		// копирует значения полей из короткой формы в полную и наоборот
		copyFormValues: function (source, target) {
			// копируем слова
			target.tbSearchText.val(source.tbSearchText.val()).trigger("focus").trigger("autosize"); // фокус для водных знаков и выделения текста в поле ввода
			target.tbTranslation.val(source.tbTranslation.val()).trigger("focus").trigger("autosize");
			// копируем языки
			this.setSelectedLanguage(target.ctrlSourceLang, this.getSelectedLanguage(source.ctrlSourceLang));
			this.setSelectedLanguage(target.ctrlTargetLang, this.getSelectedLanguage(source.ctrlTargetLang));
		}
	});

	// инициализация после загрузки страницы
	$(function () {
		var panel = $(".js-search-panel-box");
		if (panel.length == 0)
			return;

		exports.SearchPanel = new SearchPanelContoller(panel);
		// центрируем по вертикали значок пустого множества, если ничего не найдено
		$(".js-empty-icon-box").padWindowHeight();
	});

})(jQuery, app.controllers);
function showModelErrors(errors, inputsContainer, dynamicErrors) {
	for (var inputName in errors) {
		var inputs = inputsContainer.find("input[name]").filter(function () {
			return $(this).attr("name").toLowerCase() == inputName.toLowerCase();
		});
		var inputErrors = errors[inputName];
		for (var i = 0; i < inputErrors.length; i++) {
			inputs.toggleModelError(inputErrors[i], true);
			dynamicErrors.smoothMessages("show", inputErrors[i]);
		}
	}
}$(function () {
	// вход в корпоративный аккаунт
	$(".js-cur-ent-account").click(function () {
		$(this).next(".js-ent-accounts-list").toggleClass("g-hidden").closest(".js-corp-account").toggleClass("open");
		return false;
	});

	$(".js-ent-accounts-list li").click(function () {
		var text = $(this).html();
		var val = $(this).data("value");
		$(this).parent().prev(".js-cur-ent-account").children(".js-selected-account").html(text);
		$("#account").val(val);
		$.post(
			"/Enterprise/Login",
			{ accountName: val },
			function (result) {
				if (result.success) {
					window.location.reload();
				}
			});
	});

	$(document).bind("mouseup", function () {
		$(".js-ent-accounts-list").addClass("g-hidden").closest(".js-corp-account").removeClass("open");
	}).bind("keydown keyup", function (e) {
		if (e.keyCode == 27)
			$(".js-ent-accounts-list").addClass("g-hidden").closest(".js-corp-account").removeClass("open");
	});
});$(function () {
	$(".js-allbtn").live("changeVal.btn", function () {
		var self = $(this);
		self.siblings(".js-allbtntext").html(self.val());
	});
});$(function () {

	// закрытие желтых полосок при клике по крестику
	$('.js-warning-close').click(function () {
		var warning = $(this).closest('.js-warning-box');
		warning.slideUp(window.AnimationDuration);
		showWordForms(warning);
		return false;
	});

	//отображение сообщения о необходимости залогиниться и скрытие сообщений о смене направления и словоформах
	//только сообщение о необходимости залогиниться, которое отображается под формой поиска
	$(".js-need-login-block").bind("show", function (e, data) {
		if (data == "js-addtransl-warning-searchpanel") {
			$(".js-language-autoreversed").slideUp(window.AnimationDuration);
			$(".js-word-forms-strip").addClass("g-hidden");
		}
		$(this).slideDown(window.AnimationDuration);
	});

	//при закрытии сообщения о необходимости залогиниться возвращаем только сообщение о словоформах
	//только сообщение о необходимости залогиниться, которое отображается под формой поиска
	function showWordForms(warning) {
		if (warning.hasClass("js-need-login-block") && warning.closest(".js-addtransl-warning-searchpanel").length > 0) {
			$(".js-word-forms-strip").removeClass("g-hidden");
		}
	}
});
// Запускаем загрузку остальных скриптов. Делаем это внутри jquery.ready, чтобы
// все скрипты LingvoPro отработали до того, как будут загружены внешние потенциально долго загружаемые скрипты
$(function() {
	var callbacks = window['lingvopro_callbacks'];
	if (!(callbacks instanceof Array)) {
		return;
	}
	for (var i = 0; i < callbacks.length; i++) {
		callbacks[i]();
	}
});
